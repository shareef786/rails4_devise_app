/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var testsContext = __webpack_require__(1);

	var runnable = testsContext.keys();

	runnable.forEach(testsContext);

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./index.js": 2,
		"./tests/aapl.test.js": 480,
		"./tests/collection.test.js": 457,
		"./tests/event.test.js": 452,
		"./tests/index.test.js": 303,
		"./tests/pipeline.test.js": 462,
		"./tests/range.test.js": 451,
		"./tests/series.test.js": 479
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 1;


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	__webpack_require__(3);

	var _immutable = __webpack_require__(301);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _immutableDevtools = __webpack_require__(302);

	var _immutableDevtools2 = _interopRequireDefault(_immutableDevtools);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Chrome debugging for the tests

	if (typeof window !== "undefined") {
	  (0, _immutableDevtools2.default)(_immutable2.default);
	} /**
	   *  Copyright (c) 2015, The Regents of the University of California,
	   *  through Lawrence Berkeley National Laboratory (subject to receipt
	   *  of any required approvals from the U.S. Dept. of Energy).
	   *  All rights reserved.
	   *
	   *  This source code is licensed under the BSD-style license found in the
	   *  LICENSE file in the root directory of this source tree.
	   */

	__webpack_require__(303);
	__webpack_require__(451);
	__webpack_require__(452);
	__webpack_require__(457);
	__webpack_require__(462);
	__webpack_require__(479);
	__webpack_require__(480);

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	__webpack_require__(4);

	__webpack_require__(296);

	__webpack_require__(298);

	/* eslint max-len: 0 */

	if (global._babelPolyfill) {
	  throw new Error("only one instance of babel-polyfill is allowed");
	}
	global._babelPolyfill = true;

	// Should be removed in the next major release:

	var DEFINE_PROPERTY = "defineProperty";
	function define(O, key, value) {
	  O[key] || Object[DEFINE_PROPERTY](O, key, {
	    writable: true,
	    configurable: true,
	    value: value
	  });
	}

	define(String.prototype, "padLeft", "".padStart);
	define(String.prototype, "padRight", "".padEnd);

	"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
	  [][key] && define(Array, key, Function.call.bind([][key]));
	});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(5);
	__webpack_require__(54);
	__webpack_require__(55);
	__webpack_require__(56);
	__webpack_require__(57);
	__webpack_require__(59);
	__webpack_require__(62);
	__webpack_require__(63);
	__webpack_require__(64);
	__webpack_require__(65);
	__webpack_require__(66);
	__webpack_require__(67);
	__webpack_require__(68);
	__webpack_require__(69);
	__webpack_require__(70);
	__webpack_require__(72);
	__webpack_require__(74);
	__webpack_require__(76);
	__webpack_require__(78);
	__webpack_require__(81);
	__webpack_require__(82);
	__webpack_require__(83);
	__webpack_require__(87);
	__webpack_require__(89);
	__webpack_require__(91);
	__webpack_require__(95);
	__webpack_require__(96);
	__webpack_require__(97);
	__webpack_require__(98);
	__webpack_require__(100);
	__webpack_require__(101);
	__webpack_require__(102);
	__webpack_require__(103);
	__webpack_require__(104);
	__webpack_require__(105);
	__webpack_require__(106);
	__webpack_require__(108);
	__webpack_require__(109);
	__webpack_require__(110);
	__webpack_require__(112);
	__webpack_require__(113);
	__webpack_require__(114);
	__webpack_require__(116);
	__webpack_require__(117);
	__webpack_require__(118);
	__webpack_require__(119);
	__webpack_require__(120);
	__webpack_require__(121);
	__webpack_require__(122);
	__webpack_require__(123);
	__webpack_require__(124);
	__webpack_require__(125);
	__webpack_require__(126);
	__webpack_require__(127);
	__webpack_require__(128);
	__webpack_require__(129);
	__webpack_require__(134);
	__webpack_require__(135);
	__webpack_require__(139);
	__webpack_require__(140);
	__webpack_require__(141);
	__webpack_require__(142);
	__webpack_require__(144);
	__webpack_require__(145);
	__webpack_require__(146);
	__webpack_require__(147);
	__webpack_require__(148);
	__webpack_require__(149);
	__webpack_require__(150);
	__webpack_require__(151);
	__webpack_require__(152);
	__webpack_require__(153);
	__webpack_require__(154);
	__webpack_require__(155);
	__webpack_require__(156);
	__webpack_require__(157);
	__webpack_require__(158);
	__webpack_require__(159);
	__webpack_require__(160);
	__webpack_require__(162);
	__webpack_require__(163);
	__webpack_require__(169);
	__webpack_require__(170);
	__webpack_require__(172);
	__webpack_require__(173);
	__webpack_require__(174);
	__webpack_require__(178);
	__webpack_require__(179);
	__webpack_require__(180);
	__webpack_require__(181);
	__webpack_require__(182);
	__webpack_require__(184);
	__webpack_require__(185);
	__webpack_require__(186);
	__webpack_require__(187);
	__webpack_require__(190);
	__webpack_require__(192);
	__webpack_require__(193);
	__webpack_require__(194);
	__webpack_require__(196);
	__webpack_require__(198);
	__webpack_require__(200);
	__webpack_require__(201);
	__webpack_require__(202);
	__webpack_require__(204);
	__webpack_require__(205);
	__webpack_require__(206);
	__webpack_require__(207);
	__webpack_require__(213);
	__webpack_require__(216);
	__webpack_require__(217);
	__webpack_require__(219);
	__webpack_require__(220);
	__webpack_require__(223);
	__webpack_require__(224);
	__webpack_require__(227);
	__webpack_require__(228);
	__webpack_require__(229);
	__webpack_require__(230);
	__webpack_require__(231);
	__webpack_require__(232);
	__webpack_require__(233);
	__webpack_require__(234);
	__webpack_require__(235);
	__webpack_require__(236);
	__webpack_require__(237);
	__webpack_require__(238);
	__webpack_require__(239);
	__webpack_require__(240);
	__webpack_require__(241);
	__webpack_require__(242);
	__webpack_require__(243);
	__webpack_require__(244);
	__webpack_require__(245);
	__webpack_require__(247);
	__webpack_require__(248);
	__webpack_require__(249);
	__webpack_require__(250);
	__webpack_require__(251);
	__webpack_require__(252);
	__webpack_require__(254);
	__webpack_require__(255);
	__webpack_require__(256);
	__webpack_require__(257);
	__webpack_require__(258);
	__webpack_require__(259);
	__webpack_require__(260);
	__webpack_require__(261);
	__webpack_require__(263);
	__webpack_require__(264);
	__webpack_require__(266);
	__webpack_require__(267);
	__webpack_require__(268);
	__webpack_require__(269);
	__webpack_require__(272);
	__webpack_require__(273);
	__webpack_require__(274);
	__webpack_require__(275);
	__webpack_require__(276);
	__webpack_require__(277);
	__webpack_require__(278);
	__webpack_require__(279);
	__webpack_require__(281);
	__webpack_require__(282);
	__webpack_require__(283);
	__webpack_require__(284);
	__webpack_require__(285);
	__webpack_require__(286);
	__webpack_require__(287);
	__webpack_require__(288);
	__webpack_require__(289);
	__webpack_require__(290);
	__webpack_require__(291);
	__webpack_require__(294);
	__webpack_require__(295);
	module.exports = __webpack_require__(11);

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(6)
	  , has            = __webpack_require__(7)
	  , DESCRIPTORS    = __webpack_require__(8)
	  , $export        = __webpack_require__(10)
	  , redefine       = __webpack_require__(20)
	  , META           = __webpack_require__(24).KEY
	  , $fails         = __webpack_require__(9)
	  , shared         = __webpack_require__(25)
	  , setToStringTag = __webpack_require__(26)
	  , uid            = __webpack_require__(21)
	  , wks            = __webpack_require__(27)
	  , wksExt         = __webpack_require__(28)
	  , wksDefine      = __webpack_require__(29)
	  , keyOf          = __webpack_require__(31)
	  , enumKeys       = __webpack_require__(44)
	  , isArray        = __webpack_require__(47)
	  , anObject       = __webpack_require__(14)
	  , toIObject      = __webpack_require__(34)
	  , toPrimitive    = __webpack_require__(18)
	  , createDesc     = __webpack_require__(19)
	  , _create        = __webpack_require__(48)
	  , gOPNExt        = __webpack_require__(51)
	  , $GOPD          = __webpack_require__(53)
	  , $DP            = __webpack_require__(13)
	  , $keys          = __webpack_require__(32)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(52).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(46).f  = $propertyIsEnumerable;
	  __webpack_require__(45).f = $getOwnPropertySymbols;

	  if(DESCRIPTORS && !__webpack_require__(30)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(12)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 6 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 7 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(9)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(6)
	  , core      = __webpack_require__(11)
	  , hide      = __webpack_require__(12)
	  , redefine  = __webpack_require__(20)
	  , ctx       = __webpack_require__(22)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 11 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(13)
	  , createDesc = __webpack_require__(19);
	module.exports = __webpack_require__(8) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(14)
	  , IE8_DOM_DEFINE = __webpack_require__(16)
	  , toPrimitive    = __webpack_require__(18)
	  , dP             = Object.defineProperty;

	exports.f = __webpack_require__(8) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(15);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 15 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(8) && !__webpack_require__(9)(function(){
	  return Object.defineProperty(__webpack_require__(17)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(15)
	  , document = __webpack_require__(6).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(15);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 19 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(6)
	  , hide      = __webpack_require__(12)
	  , has       = __webpack_require__(7)
	  , SRC       = __webpack_require__(21)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);

	__webpack_require__(11).inspectSource = function(it){
	  return $toString.call(it);
	};

	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 21 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(23);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 23 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(21)('meta')
	  , isObject = __webpack_require__(15)
	  , has      = __webpack_require__(7)
	  , setDesc  = __webpack_require__(13).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(9)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(6)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(13).f
	  , has = __webpack_require__(7)
	  , TAG = __webpack_require__(27)('toStringTag');

	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(25)('wks')
	  , uid        = __webpack_require__(21)
	  , Symbol     = __webpack_require__(6).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(27);

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(6)
	  , core           = __webpack_require__(11)
	  , LIBRARY        = __webpack_require__(30)
	  , wksExt         = __webpack_require__(28)
	  , defineProperty = __webpack_require__(13).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 30 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(32)
	  , toIObject = __webpack_require__(34);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(33)
	  , enumBugKeys = __webpack_require__(43);

	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(7)
	  , toIObject    = __webpack_require__(34)
	  , arrayIndexOf = __webpack_require__(38)(false)
	  , IE_PROTO     = __webpack_require__(42)('IE_PROTO');

	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(35)
	  , defined = __webpack_require__(37);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(36);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 36 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 37 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(34)
	  , toLength  = __webpack_require__(39)
	  , toIndex   = __webpack_require__(41);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(40)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 40 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(40)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(25)('keys')
	  , uid    = __webpack_require__(21);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 43 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(32)
	  , gOPS    = __webpack_require__(45)
	  , pIE     = __webpack_require__(46);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 45 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 46 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(36);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(14)
	  , dPs         = __webpack_require__(49)
	  , enumBugKeys = __webpack_require__(43)
	  , IE_PROTO    = __webpack_require__(42)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(17)('iframe')
	    , i      = enumBugKeys.length
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(50).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write('<script>document.F=Object</script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(13)
	  , anObject = __webpack_require__(14)
	  , getKeys  = __webpack_require__(32);

	module.exports = __webpack_require__(8) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(6).document && document.documentElement;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(34)
	  , gOPN      = __webpack_require__(52).f
	  , toString  = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(33)
	  , hiddenKeys = __webpack_require__(43).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(46)
	  , createDesc     = __webpack_require__(19)
	  , toIObject      = __webpack_require__(34)
	  , toPrimitive    = __webpack_require__(18)
	  , has            = __webpack_require__(7)
	  , IE8_DOM_DEFINE = __webpack_require__(16)
	  , gOPD           = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(8) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(48)});

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(8), 'Object', {defineProperty: __webpack_require__(13).f});

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10);
	// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	$export($export.S + $export.F * !__webpack_require__(8), 'Object', {defineProperties: __webpack_require__(49)});

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject                 = __webpack_require__(34)
	  , $getOwnPropertyDescriptor = __webpack_require__(53).f;

	__webpack_require__(58)('getOwnPropertyDescriptor', function(){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(10)
	  , core    = __webpack_require__(11)
	  , fails   = __webpack_require__(9);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(60)
	  , $getPrototypeOf = __webpack_require__(61);

	__webpack_require__(58)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(37);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(7)
	  , toObject    = __webpack_require__(60)
	  , IE_PROTO    = __webpack_require__(42)('IE_PROTO')
	  , ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(60)
	  , $keys    = __webpack_require__(32);

	__webpack_require__(58)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(58)('getOwnPropertyNames', function(){
	  return __webpack_require__(51).f;
	});

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(15)
	  , meta     = __webpack_require__(24).onFreeze;

	__webpack_require__(58)('freeze', function($freeze){
	  return function freeze(it){
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(15)
	  , meta     = __webpack_require__(24).onFreeze;

	__webpack_require__(58)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(meta(it)) : it;
	  };
	});

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.15 Object.preventExtensions(O)
	var isObject = __webpack_require__(15)
	  , meta     = __webpack_require__(24).onFreeze;

	__webpack_require__(58)('preventExtensions', function($preventExtensions){
	  return function preventExtensions(it){
	    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
	  };
	});

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.12 Object.isFrozen(O)
	var isObject = __webpack_require__(15);

	__webpack_require__(58)('isFrozen', function($isFrozen){
	  return function isFrozen(it){
	    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
	  };
	});

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.13 Object.isSealed(O)
	var isObject = __webpack_require__(15);

	__webpack_require__(58)('isSealed', function($isSealed){
	  return function isSealed(it){
	    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
	  };
	});

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.11 Object.isExtensible(O)
	var isObject = __webpack_require__(15);

	__webpack_require__(58)('isExtensible', function($isExtensible){
	  return function isExtensible(it){
	    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
	  };
	});

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(10);

	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(71)});

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(32)
	  , gOPS     = __webpack_require__(45)
	  , pIE      = __webpack_require__(46)
	  , toObject = __webpack_require__(60)
	  , IObject  = __webpack_require__(35)
	  , $assign  = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(9)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.10 Object.is(value1, value2)
	var $export = __webpack_require__(10);
	$export($export.S, 'Object', {is: __webpack_require__(73)});

/***/ },
/* 73 */
/***/ function(module, exports) {

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y){
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(10);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(75).set});

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(15)
	  , anObject = __webpack_require__(14);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(22)(Function.call, __webpack_require__(53).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(77)
	  , test    = {};
	test[__webpack_require__(27)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(20)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(36)
	  , TAG = __webpack_require__(27)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};

	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
	var $export = __webpack_require__(10);

	$export($export.P, 'Function', {bind: __webpack_require__(79)});

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var aFunction  = __webpack_require__(23)
	  , isObject   = __webpack_require__(15)
	  , invoke     = __webpack_require__(80)
	  , arraySlice = [].slice
	  , factories  = {};

	var construct = function(F, len, args){
	  if(!(len in factories)){
	    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
	    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
	  } return factories[len](F, args);
	};

	module.exports = Function.bind || function bind(that /*, args... */){
	  var fn       = aFunction(this)
	    , partArgs = arraySlice.call(arguments, 1);
	  var bound = function(/* args... */){
	    var args = partArgs.concat(arraySlice.call(arguments));
	    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
	  };
	  if(isObject(fn.prototype))bound.prototype = fn.prototype;
	  return bound;
	};

/***/ },
/* 80 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(13).f
	  , createDesc = __webpack_require__(19)
	  , has        = __webpack_require__(7)
	  , FProto     = Function.prototype
	  , nameRE     = /^\s*function ([^ (]*)/
	  , NAME       = 'name';

	var isExtensible = Object.isExtensible || function(){
	  return true;
	};

	// 19.2.4.2 name
	NAME in FProto || __webpack_require__(8) && dP(FProto, NAME, {
	  configurable: true,
	  get: function(){
	    try {
	      var that = this
	        , name = ('' + that).match(nameRE)[1];
	      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
	      return name;
	    } catch(e){
	      return '';
	    }
	  }
	});

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var isObject       = __webpack_require__(15)
	  , getPrototypeOf = __webpack_require__(61)
	  , HAS_INSTANCE   = __webpack_require__(27)('hasInstance')
	  , FunctionProto  = Function.prototype;
	// 19.2.3.6 Function.prototype[@@hasInstance](V)
	if(!(HAS_INSTANCE in FunctionProto))__webpack_require__(13).f(FunctionProto, HAS_INSTANCE, {value: function(O){
	  if(typeof this != 'function' || !isObject(O))return false;
	  if(!isObject(this.prototype))return O instanceof this;
	  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
	  while(O = getPrototypeOf(O))if(this.prototype === O)return true;
	  return false;
	}});

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(10)
	  , $parseInt = __webpack_require__(84);
	// 18.2.5 parseInt(string, radix)
	$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	var $parseInt = __webpack_require__(6).parseInt
	  , $trim     = __webpack_require__(85).trim
	  , ws        = __webpack_require__(86)
	  , hex       = /^[\-+]?0[xX]/;

	module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
	  var string = $trim(String(str), 3);
	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
	} : $parseInt;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10)
	  , defined = __webpack_require__(37)
	  , fails   = __webpack_require__(9)
	  , spaces  = __webpack_require__(86)
	  , space   = '[' + spaces + ']'
	  , non     = '\u200b\u0085'
	  , ltrim   = RegExp('^' + space + space + '*')
	  , rtrim   = RegExp(space + space + '*$');

	var exporter = function(KEY, exec, ALIAS){
	  var exp   = {};
	  var FORCE = fails(function(){
	    return !!spaces[KEY]() || non[KEY]() != non;
	  });
	  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
	  if(ALIAS)exp[ALIAS] = fn;
	  $export($export.P + $export.F * FORCE, 'String', exp);
	};

	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function(string, TYPE){
	  string = String(defined(string));
	  if(TYPE & 1)string = string.replace(ltrim, '');
	  if(TYPE & 2)string = string.replace(rtrim, '');
	  return string;
	};

	module.exports = exporter;

/***/ },
/* 86 */
/***/ function(module, exports) {

	module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
	  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(10)
	  , $parseFloat = __webpack_require__(88);
	// 18.2.4 parseFloat(string)
	$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	var $parseFloat = __webpack_require__(6).parseFloat
	  , $trim       = __webpack_require__(85).trim;

	module.exports = 1 / $parseFloat(__webpack_require__(86) + '-0') !== -Infinity ? function parseFloat(str){
	  var string = $trim(String(str), 3)
	    , result = $parseFloat(string);
	  return result === 0 && string.charAt(0) == '-' ? -0 : result;
	} : $parseFloat;

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(6)
	  , has               = __webpack_require__(7)
	  , cof               = __webpack_require__(36)
	  , inheritIfRequired = __webpack_require__(90)
	  , toPrimitive       = __webpack_require__(18)
	  , fails             = __webpack_require__(9)
	  , gOPN              = __webpack_require__(52).f
	  , gOPD              = __webpack_require__(53).f
	  , dP                = __webpack_require__(13).f
	  , $trim             = __webpack_require__(85).trim
	  , NUMBER            = 'Number'
	  , $Number           = global[NUMBER]
	  , Base              = $Number
	  , proto             = $Number.prototype
	  // Opera ~12 has broken Object#toString
	  , BROKEN_COF        = cof(__webpack_require__(48)(proto)) == NUMBER
	  , TRIM              = 'trim' in String.prototype;

	// 7.1.3 ToNumber(argument)
	var toNumber = function(argument){
	  var it = toPrimitive(argument, false);
	  if(typeof it == 'string' && it.length > 2){
	    it = TRIM ? it.trim() : $trim(it, 3);
	    var first = it.charCodeAt(0)
	      , third, radix, maxCode;
	    if(first === 43 || first === 45){
	      third = it.charCodeAt(2);
	      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if(first === 48){
	      switch(it.charCodeAt(1)){
	        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
	        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
	        default : return +it;
	      }
	      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
	        code = digits.charCodeAt(i);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if(code < 48 || code > maxCode)return NaN;
	      } return parseInt(digits, radix);
	    }
	  } return +it;
	};

	if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
	  $Number = function Number(value){
	    var it = arguments.length < 1 ? 0 : value
	      , that = this;
	    return that instanceof $Number
	      // check on 1..constructor(foo) case
	      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
	        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
	  };
	  for(var keys = __webpack_require__(8) ? gOPN(Base) : (
	    // ES3:
	    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	    // ES6 (in case, if modules with ES6 Number statics required before):
	    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
	    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
	  ).split(','), j = 0, key; keys.length > j; j++){
	    if(has(Base, key = keys[j]) && !has($Number, key)){
	      dP($Number, key, gOPD(Base, key));
	    }
	  }
	  $Number.prototype = proto;
	  proto.constructor = $Number;
	  __webpack_require__(20)(global, NUMBER, $Number);
	}

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	var isObject       = __webpack_require__(15)
	  , setPrototypeOf = __webpack_require__(75).set;
	module.exports = function(that, target, C){
	  var P, S = target.constructor;
	  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
	    setPrototypeOf(that, P);
	  } return that;
	};

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(10)
	  , anInstance   = __webpack_require__(92)
	  , toInteger    = __webpack_require__(40)
	  , aNumberValue = __webpack_require__(93)
	  , repeat       = __webpack_require__(94)
	  , $toFixed     = 1..toFixed
	  , floor        = Math.floor
	  , data         = [0, 0, 0, 0, 0, 0]
	  , ERROR        = 'Number.toFixed: incorrect invocation!'
	  , ZERO         = '0';

	var multiply = function(n, c){
	  var i  = -1
	    , c2 = c;
	  while(++i < 6){
	    c2 += n * data[i];
	    data[i] = c2 % 1e7;
	    c2 = floor(c2 / 1e7);
	  }
	};
	var divide = function(n){
	  var i = 6
	    , c = 0;
	  while(--i >= 0){
	    c += data[i];
	    data[i] = floor(c / n);
	    c = (c % n) * 1e7;
	  }
	};
	var numToString = function(){
	  var i = 6
	    , s = '';
	  while(--i >= 0){
	    if(s !== '' || i === 0 || data[i] !== 0){
	      var t = String(data[i]);
	      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
	    }
	  } return s;
	};
	var pow = function(x, n, acc){
	  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
	};
	var log = function(x){
	  var n  = 0
	    , x2 = x;
	  while(x2 >= 4096){
	    n += 12;
	    x2 /= 4096;
	  }
	  while(x2 >= 2){
	    n  += 1;
	    x2 /= 2;
	  } return n;
	};

	$export($export.P + $export.F * (!!$toFixed && (
	  0.00008.toFixed(3) !== '0.000' ||
	  0.9.toFixed(0) !== '1' ||
	  1.255.toFixed(2) !== '1.25' ||
	  1000000000000000128..toFixed(0) !== '1000000000000000128'
	) || !__webpack_require__(9)(function(){
	  // V8 ~ Android 4.3-
	  $toFixed.call({});
	})), 'Number', {
	  toFixed: function toFixed(fractionDigits){
	    var x = aNumberValue(this, ERROR)
	      , f = toInteger(fractionDigits)
	      , s = ''
	      , m = ZERO
	      , e, z, j, k;
	    if(f < 0 || f > 20)throw RangeError(ERROR);
	    if(x != x)return 'NaN';
	    if(x <= -1e21 || x >= 1e21)return String(x);
	    if(x < 0){
	      s = '-';
	      x = -x;
	    }
	    if(x > 1e-21){
	      e = log(x * pow(2, 69, 1)) - 69;
	      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
	      z *= 0x10000000000000;
	      e = 52 - e;
	      if(e > 0){
	        multiply(0, z);
	        j = f;
	        while(j >= 7){
	          multiply(1e7, 0);
	          j -= 7;
	        }
	        multiply(pow(10, j, 1), 0);
	        j = e - 1;
	        while(j >= 23){
	          divide(1 << 23);
	          j -= 23;
	        }
	        divide(1 << j);
	        multiply(1, 1);
	        divide(2);
	        m = numToString();
	      } else {
	        multiply(0, z);
	        multiply(1 << -e, 0);
	        m = numToString() + repeat.call(ZERO, f);
	      }
	    }
	    if(f > 0){
	      k = m.length;
	      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
	    } else {
	      m = s + m;
	    } return m;
	  }
	});

/***/ },
/* 92 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var cof = __webpack_require__(36);
	module.exports = function(it, msg){
	  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
	  return +it;
	};

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var toInteger = __webpack_require__(40)
	  , defined   = __webpack_require__(37);

	module.exports = function repeat(count){
	  var str = String(defined(this))
	    , res = ''
	    , n   = toInteger(count);
	  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
	  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
	  return res;
	};

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(10)
	  , $fails       = __webpack_require__(9)
	  , aNumberValue = __webpack_require__(93)
	  , $toPrecision = 1..toPrecision;

	$export($export.P + $export.F * ($fails(function(){
	  // IE7-
	  return $toPrecision.call(1, undefined) !== '1';
	}) || !$fails(function(){
	  // V8 ~ Android 4.3-
	  $toPrecision.call({});
	})), 'Number', {
	  toPrecision: function toPrecision(precision){
	    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
	    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
	  }
	});

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.1 Number.EPSILON
	var $export = __webpack_require__(10);

	$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.2 Number.isFinite(number)
	var $export   = __webpack_require__(10)
	  , _isFinite = __webpack_require__(6).isFinite;

	$export($export.S, 'Number', {
	  isFinite: function isFinite(it){
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var $export = __webpack_require__(10);

	$export($export.S, 'Number', {isInteger: __webpack_require__(99)});

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var isObject = __webpack_require__(15)
	  , floor    = Math.floor;
	module.exports = function isInteger(it){
	  return !isObject(it) && isFinite(it) && floor(it) === it;
	};

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(10);

	$export($export.S, 'Number', {
	  isNaN: function isNaN(number){
	    return number != number;
	  }
	});

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.5 Number.isSafeInteger(number)
	var $export   = __webpack_require__(10)
	  , isInteger = __webpack_require__(99)
	  , abs       = Math.abs;

	$export($export.S, 'Number', {
	  isSafeInteger: function isSafeInteger(number){
	    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
	  }
	});

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.6 Number.MAX_SAFE_INTEGER
	var $export = __webpack_require__(10);

	$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(10);

	$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(10)
	  , $parseFloat = __webpack_require__(88);
	// 20.1.2.12 Number.parseFloat(string)
	$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(10)
	  , $parseInt = __webpack_require__(84);
	// 20.1.2.13 Number.parseInt(string, radix)
	$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(10)
	  , log1p   = __webpack_require__(107)
	  , sqrt    = Math.sqrt
	  , $acosh  = Math.acosh;

	$export($export.S + $export.F * !($acosh
	  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
	  && Math.floor($acosh(Number.MAX_VALUE)) == 710
	  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
	  && $acosh(Infinity) == Infinity
	), 'Math', {
	  acosh: function acosh(x){
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156
	      ? Math.log(x) + Math.LN2
	      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 107 */
/***/ function(module, exports) {

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x){
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(10)
	  , $asinh  = Math.asinh;

	function asinh(x){
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}

	// Tor Browser bug: Math.asinh(0) -> -0 
	$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(10)
	  , $atanh  = Math.atanh;

	// Tor Browser bug: Math.atanh(-0) -> 0 
	$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
	  atanh: function atanh(x){
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(10)
	  , sign    = __webpack_require__(111);

	$export($export.S, 'Math', {
	  cbrt: function cbrt(x){
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 111 */
/***/ function(module, exports) {

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x){
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(10);

	$export($export.S, 'Math', {
	  clz32: function clz32(x){
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(10)
	  , exp     = Math.exp;

	$export($export.S, 'Math', {
	  cosh: function cosh(x){
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(10)
	  , $expm1  = __webpack_require__(115);

	$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ },
/* 115 */
/***/ function(module, exports) {

	// 20.2.2.14 Math.expm1(x)
	var $expm1 = Math.expm1;
	module.exports = (!$expm1
	  // Old FF bug
	  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
	  // Tor Browser bug
	  || $expm1(-2e-17) != -2e-17
	) ? function expm1(x){
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	} : $expm1;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.16 Math.fround(x)
	var $export   = __webpack_require__(10)
	  , sign      = __webpack_require__(111)
	  , pow       = Math.pow
	  , EPSILON   = pow(2, -52)
	  , EPSILON32 = pow(2, -23)
	  , MAX32     = pow(2, 127) * (2 - EPSILON32)
	  , MIN32     = pow(2, -126);

	var roundTiesToEven = function(n){
	  return n + 1 / EPSILON - 1 / EPSILON;
	};


	$export($export.S, 'Math', {
	  fround: function fround(x){
	    var $abs  = Math.abs(x)
	      , $sign = sign(x)
	      , a, result;
	    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if(result > MAX32 || result != result)return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(10)
	  , abs     = Math.abs;

	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
	    var sum  = 0
	      , i    = 0
	      , aLen = arguments.length
	      , larg = 0
	      , arg, div;
	    while(i < aLen){
	      arg = abs(arguments[i++]);
	      if(larg < arg){
	        div  = larg / arg;
	        sum  = sum * div * div + 1;
	        larg = arg;
	      } else if(arg > 0){
	        div  = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(10)
	  , $imul   = Math.imul;

	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(9)(function(){
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y){
	    var UINT16 = 0xffff
	      , xn = +x
	      , yn = +y
	      , xl = UINT16 & xn
	      , yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(10);

	$export($export.S, 'Math', {
	  log10: function log10(x){
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(10);

	$export($export.S, 'Math', {log1p: __webpack_require__(107)});

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(10);

	$export($export.S, 'Math', {
	  log2: function log2(x){
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(10);

	$export($export.S, 'Math', {sign: __webpack_require__(111)});

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(10)
	  , expm1   = __webpack_require__(115)
	  , exp     = Math.exp;

	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(9)(function(){
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x){
	    return Math.abs(x = +x) < 1
	      ? (expm1(x) - expm1(-x)) / 2
	      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(10)
	  , expm1   = __webpack_require__(115)
	  , exp     = Math.exp;

	$export($export.S, 'Math', {
	  tanh: function tanh(x){
	    var a = expm1(x = +x)
	      , b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(10);

	$export($export.S, 'Math', {
	  trunc: function trunc(it){
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var $export        = __webpack_require__(10)
	  , toIndex        = __webpack_require__(41)
	  , fromCharCode   = String.fromCharCode
	  , $fromCodePoint = String.fromCodePoint;

	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
	    var res  = []
	      , aLen = arguments.length
	      , i    = 0
	      , code;
	    while(aLen > i){
	      code = +arguments[i++];
	      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000
	        ? fromCharCode(code)
	        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
	      );
	    } return res.join('');
	  }
	});

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(10)
	  , toIObject = __webpack_require__(34)
	  , toLength  = __webpack_require__(39);

	$export($export.S, 'String', {
	  // 21.1.2.4 String.raw(callSite, ...substitutions)
	  raw: function raw(callSite){
	    var tpl  = toIObject(callSite.raw)
	      , len  = toLength(tpl.length)
	      , aLen = arguments.length
	      , res  = []
	      , i    = 0;
	    while(len > i){
	      res.push(String(tpl[i++]));
	      if(i < aLen)res.push(String(arguments[i]));
	    } return res.join('');
	  }
	});

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.1.3.25 String.prototype.trim()
	__webpack_require__(85)('trim', function($trim){
	  return function trim(){
	    return $trim(this, 3);
	  };
	});

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(130)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(131)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(40)
	  , defined   = __webpack_require__(37);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(30)
	  , $export        = __webpack_require__(10)
	  , redefine       = __webpack_require__(20)
	  , hide           = __webpack_require__(12)
	  , has            = __webpack_require__(7)
	  , Iterators      = __webpack_require__(132)
	  , $iterCreate    = __webpack_require__(133)
	  , setToStringTag = __webpack_require__(26)
	  , getPrototypeOf = __webpack_require__(61)
	  , ITERATOR       = __webpack_require__(27)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';

	var returnThis = function(){ return this; };

	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 132 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(48)
	  , descriptor     = __webpack_require__(19)
	  , setToStringTag = __webpack_require__(26)
	  , IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(12)(IteratorPrototype, __webpack_require__(27)('iterator'), function(){ return this; });

	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(10)
	  , $at     = __webpack_require__(130)(false);
	$export($export.P, 'String', {
	  // 21.1.3.3 String.prototype.codePointAt(pos)
	  codePointAt: function codePointAt(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
	'use strict';
	var $export   = __webpack_require__(10)
	  , toLength  = __webpack_require__(39)
	  , context   = __webpack_require__(136)
	  , ENDS_WITH = 'endsWith'
	  , $endsWith = ''[ENDS_WITH];

	$export($export.P + $export.F * __webpack_require__(138)(ENDS_WITH), 'String', {
	  endsWith: function endsWith(searchString /*, endPosition = @length */){
	    var that = context(this, searchString, ENDS_WITH)
	      , endPosition = arguments.length > 1 ? arguments[1] : undefined
	      , len    = toLength(that.length)
	      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
	      , search = String(searchString);
	    return $endsWith
	      ? $endsWith.call(that, search, end)
	      : that.slice(end - search.length, end) === search;
	  }
	});

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(137)
	  , defined  = __webpack_require__(37);

	module.exports = function(that, searchString, NAME){
	  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(15)
	  , cof      = __webpack_require__(36)
	  , MATCH    = __webpack_require__(27)('match');
	module.exports = function(it){
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	var MATCH = __webpack_require__(27)('match');
	module.exports = function(KEY){
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch(e){
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch(f){ /* empty */ }
	  } return true;
	};

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';
	var $export  = __webpack_require__(10)
	  , context  = __webpack_require__(136)
	  , INCLUDES = 'includes';

	$export($export.P + $export.F * __webpack_require__(138)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */){
	    return !!~context(this, searchString, INCLUDES)
	      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10);

	$export($export.P, 'String', {
	  // 21.1.3.13 String.prototype.repeat(count)
	  repeat: __webpack_require__(94)
	});

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';
	var $export     = __webpack_require__(10)
	  , toLength    = __webpack_require__(39)
	  , context     = __webpack_require__(136)
	  , STARTS_WITH = 'startsWith'
	  , $startsWith = ''[STARTS_WITH];

	$export($export.P + $export.F * __webpack_require__(138)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */){
	    var that   = context(this, searchString, STARTS_WITH)
	      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
	      , search = String(searchString);
	    return $startsWith
	      ? $startsWith.call(that, search, index)
	      : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.2 String.prototype.anchor(name)
	__webpack_require__(143)('anchor', function(createHTML){
	  return function anchor(name){
	    return createHTML(this, 'a', 'name', name);
	  }
	});

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10)
	  , fails   = __webpack_require__(9)
	  , defined = __webpack_require__(37)
	  , quot    = /"/g;
	// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
	var createHTML = function(string, tag, attribute, value) {
	  var S  = String(defined(string))
	    , p1 = '<' + tag;
	  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
	  return p1 + '>' + S + '</' + tag + '>';
	};
	module.exports = function(NAME, exec){
	  var O = {};
	  O[NAME] = exec(createHTML);
	  $export($export.P + $export.F * fails(function(){
	    var test = ''[NAME]('"');
	    return test !== test.toLowerCase() || test.split('"').length > 3;
	  }), 'String', O);
	};

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.3 String.prototype.big()
	__webpack_require__(143)('big', function(createHTML){
	  return function big(){
	    return createHTML(this, 'big', '', '');
	  }
	});

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.4 String.prototype.blink()
	__webpack_require__(143)('blink', function(createHTML){
	  return function blink(){
	    return createHTML(this, 'blink', '', '');
	  }
	});

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.5 String.prototype.bold()
	__webpack_require__(143)('bold', function(createHTML){
	  return function bold(){
	    return createHTML(this, 'b', '', '');
	  }
	});

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.6 String.prototype.fixed()
	__webpack_require__(143)('fixed', function(createHTML){
	  return function fixed(){
	    return createHTML(this, 'tt', '', '');
	  }
	});

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.7 String.prototype.fontcolor(color)
	__webpack_require__(143)('fontcolor', function(createHTML){
	  return function fontcolor(color){
	    return createHTML(this, 'font', 'color', color);
	  }
	});

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.8 String.prototype.fontsize(size)
	__webpack_require__(143)('fontsize', function(createHTML){
	  return function fontsize(size){
	    return createHTML(this, 'font', 'size', size);
	  }
	});

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.9 String.prototype.italics()
	__webpack_require__(143)('italics', function(createHTML){
	  return function italics(){
	    return createHTML(this, 'i', '', '');
	  }
	});

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.10 String.prototype.link(url)
	__webpack_require__(143)('link', function(createHTML){
	  return function link(url){
	    return createHTML(this, 'a', 'href', url);
	  }
	});

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.11 String.prototype.small()
	__webpack_require__(143)('small', function(createHTML){
	  return function small(){
	    return createHTML(this, 'small', '', '');
	  }
	});

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.12 String.prototype.strike()
	__webpack_require__(143)('strike', function(createHTML){
	  return function strike(){
	    return createHTML(this, 'strike', '', '');
	  }
	});

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.13 String.prototype.sub()
	__webpack_require__(143)('sub', function(createHTML){
	  return function sub(){
	    return createHTML(this, 'sub', '', '');
	  }
	});

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.14 String.prototype.sup()
	__webpack_require__(143)('sup', function(createHTML){
	  return function sup(){
	    return createHTML(this, 'sup', '', '');
	  }
	});

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	// 20.3.3.1 / 15.9.4.4 Date.now()
	var $export = __webpack_require__(10);

	$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export     = __webpack_require__(10)
	  , toObject    = __webpack_require__(60)
	  , toPrimitive = __webpack_require__(18);

	$export($export.P + $export.F * __webpack_require__(9)(function(){
	  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
	}), 'Date', {
	  toJSON: function toJSON(key){
	    var O  = toObject(this)
	      , pv = toPrimitive(O);
	    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
	  }
	});

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
	var $export = __webpack_require__(10)
	  , fails   = __webpack_require__(9)
	  , getTime = Date.prototype.getTime;

	var lz = function(num){
	  return num > 9 ? num : '0' + num;
	};

	// PhantomJS / old WebKit has a broken implementations
	$export($export.P + $export.F * (fails(function(){
	  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
	}) || !fails(function(){
	  new Date(NaN).toISOString();
	})), 'Date', {
	  toISOString: function toISOString(){
	    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
	    var d = this
	      , y = d.getUTCFullYear()
	      , m = d.getUTCMilliseconds()
	      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
	    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
	      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
	      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
	      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
	  }
	});

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	var DateProto    = Date.prototype
	  , INVALID_DATE = 'Invalid Date'
	  , TO_STRING    = 'toString'
	  , $toString    = DateProto[TO_STRING]
	  , getTime      = DateProto.getTime;
	if(new Date(NaN) + '' != INVALID_DATE){
	  __webpack_require__(20)(DateProto, TO_STRING, function toString(){
	    var value = getTime.call(this);
	    return value === value ? $toString.call(this) : INVALID_DATE;
	  });
	}

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	var TO_PRIMITIVE = __webpack_require__(27)('toPrimitive')
	  , proto        = Date.prototype;

	if(!(TO_PRIMITIVE in proto))__webpack_require__(12)(proto, TO_PRIMITIVE, __webpack_require__(161));

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var anObject    = __webpack_require__(14)
	  , toPrimitive = __webpack_require__(18)
	  , NUMBER      = 'number';

	module.exports = function(hint){
	  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
	  return toPrimitive(anObject(this), hint != NUMBER);
	};

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
	var $export = __webpack_require__(10);

	$export($export.S, 'Array', {isArray: __webpack_require__(47)});

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(22)
	  , $export        = __webpack_require__(10)
	  , toObject       = __webpack_require__(60)
	  , call           = __webpack_require__(164)
	  , isArrayIter    = __webpack_require__(165)
	  , toLength       = __webpack_require__(39)
	  , createProperty = __webpack_require__(166)
	  , getIterFn      = __webpack_require__(167);

	$export($export.S + $export.F * !__webpack_require__(168)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(14);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(132)
	  , ITERATOR   = __webpack_require__(27)('iterator')
	  , ArrayProto = Array.prototype;

	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(13)
	  , createDesc      = __webpack_require__(19);

	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(77)
	  , ITERATOR  = __webpack_require__(27)('iterator')
	  , Iterators = __webpack_require__(132);
	module.exports = __webpack_require__(11).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(27)('iterator')
	  , SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }

	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export        = __webpack_require__(10)
	  , createProperty = __webpack_require__(166);

	// WebKit Array.of isn't generic
	$export($export.S + $export.F * __webpack_require__(9)(function(){
	  function F(){}
	  return !(Array.of.call(F) instanceof F);
	}), 'Array', {
	  // 22.1.2.3 Array.of( ...items)
	  of: function of(/* ...args */){
	    var index  = 0
	      , aLen   = arguments.length
	      , result = new (typeof this == 'function' ? this : Array)(aLen);
	    while(aLen > index)createProperty(result, index, arguments[index++]);
	    result.length = aLen;
	    return result;
	  }
	});

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.13 Array.prototype.join(separator)
	var $export   = __webpack_require__(10)
	  , toIObject = __webpack_require__(34)
	  , arrayJoin = [].join;

	// fallback for not array-like strings
	$export($export.P + $export.F * (__webpack_require__(35) != Object || !__webpack_require__(171)(arrayJoin)), 'Array', {
	  join: function join(separator){
	    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
	  }
	});

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(9);

	module.exports = function(method, arg){
	  return !!method && fails(function(){
	    arg ? method.call(null, function(){}, 1) : method.call(null);
	  });
	};

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export    = __webpack_require__(10)
	  , html       = __webpack_require__(50)
	  , cof        = __webpack_require__(36)
	  , toIndex    = __webpack_require__(41)
	  , toLength   = __webpack_require__(39)
	  , arraySlice = [].slice;

	// fallback for not array-like ES3 strings and DOM objects
	$export($export.P + $export.F * __webpack_require__(9)(function(){
	  if(html)arraySlice.call(html);
	}), 'Array', {
	  slice: function slice(begin, end){
	    var len   = toLength(this.length)
	      , klass = cof(this);
	    end = end === undefined ? len : end;
	    if(klass == 'Array')return arraySlice.call(this, begin, end);
	    var start  = toIndex(begin, len)
	      , upTo   = toIndex(end, len)
	      , size   = toLength(upTo - start)
	      , cloned = Array(size)
	      , i      = 0;
	    for(; i < size; i++)cloned[i] = klass == 'String'
	      ? this.charAt(start + i)
	      : this[start + i];
	    return cloned;
	  }
	});

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export   = __webpack_require__(10)
	  , aFunction = __webpack_require__(23)
	  , toObject  = __webpack_require__(60)
	  , fails     = __webpack_require__(9)
	  , $sort     = [].sort
	  , test      = [1, 2, 3];

	$export($export.P + $export.F * (fails(function(){
	  // IE8-
	  test.sort(undefined);
	}) || !fails(function(){
	  // V8 bug
	  test.sort(null);
	  // Old WebKit
	}) || !__webpack_require__(171)($sort)), 'Array', {
	  // 22.1.3.25 Array.prototype.sort(comparefn)
	  sort: function sort(comparefn){
	    return comparefn === undefined
	      ? $sort.call(toObject(this))
	      : $sort.call(toObject(this), aFunction(comparefn));
	  }
	});

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export  = __webpack_require__(10)
	  , $forEach = __webpack_require__(175)(0)
	  , STRICT   = __webpack_require__(171)([].forEach, true);

	$export($export.P + $export.F * !STRICT, 'Array', {
	  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
	  forEach: function forEach(callbackfn /* , thisArg */){
	    return $forEach(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(22)
	  , IObject  = __webpack_require__(35)
	  , toObject = __webpack_require__(60)
	  , toLength = __webpack_require__(39)
	  , asc      = __webpack_require__(176);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(177);

	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(15)
	  , isArray  = __webpack_require__(47)
	  , SPECIES  = __webpack_require__(27)('species');

	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(10)
	  , $map    = __webpack_require__(175)(1);

	$export($export.P + $export.F * !__webpack_require__(171)([].map, true), 'Array', {
	  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
	  map: function map(callbackfn /* , thisArg */){
	    return $map(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(10)
	  , $filter = __webpack_require__(175)(2);

	$export($export.P + $export.F * !__webpack_require__(171)([].filter, true), 'Array', {
	  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
	  filter: function filter(callbackfn /* , thisArg */){
	    return $filter(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(10)
	  , $some   = __webpack_require__(175)(3);

	$export($export.P + $export.F * !__webpack_require__(171)([].some, true), 'Array', {
	  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
	  some: function some(callbackfn /* , thisArg */){
	    return $some(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(10)
	  , $every  = __webpack_require__(175)(4);

	$export($export.P + $export.F * !__webpack_require__(171)([].every, true), 'Array', {
	  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
	  every: function every(callbackfn /* , thisArg */){
	    return $every(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(10)
	  , $reduce = __webpack_require__(183);

	$export($export.P + $export.F * !__webpack_require__(171)([].reduce, true), 'Array', {
	  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
	  reduce: function reduce(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
	  }
	});

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	var aFunction = __webpack_require__(23)
	  , toObject  = __webpack_require__(60)
	  , IObject   = __webpack_require__(35)
	  , toLength  = __webpack_require__(39);

	module.exports = function(that, callbackfn, aLen, memo, isRight){
	  aFunction(callbackfn);
	  var O      = toObject(that)
	    , self   = IObject(O)
	    , length = toLength(O.length)
	    , index  = isRight ? length - 1 : 0
	    , i      = isRight ? -1 : 1;
	  if(aLen < 2)for(;;){
	    if(index in self){
	      memo = self[index];
	      index += i;
	      break;
	    }
	    index += i;
	    if(isRight ? index < 0 : length <= index){
	      throw TypeError('Reduce of empty array with no initial value');
	    }
	  }
	  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
	    memo = callbackfn(memo, self[index], index, O);
	  }
	  return memo;
	};

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(10)
	  , $reduce = __webpack_require__(183);

	$export($export.P + $export.F * !__webpack_require__(171)([].reduceRight, true), 'Array', {
	  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
	  reduceRight: function reduceRight(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
	  }
	});

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(10)
	  , $indexOf      = __webpack_require__(38)(false)
	  , $native       = [].indexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(171)($native)), 'Array', {
	  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
	  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
	    return NEGATIVE_ZERO
	      // convert -0 to +0
	      ? $native.apply(this, arguments) || 0
	      : $indexOf(this, searchElement, arguments[1]);
	  }
	});

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(10)
	  , toIObject     = __webpack_require__(34)
	  , toInteger     = __webpack_require__(40)
	  , toLength      = __webpack_require__(39)
	  , $native       = [].lastIndexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(171)($native)), 'Array', {
	  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
	  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
	    // convert -0 to +0
	    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
	    var O      = toIObject(this)
	      , length = toLength(O.length)
	      , index  = length - 1;
	    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
	    if(index < 0)index = length + index;
	    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
	    return -1;
	  }
	});

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	var $export = __webpack_require__(10);

	$export($export.P, 'Array', {copyWithin: __webpack_require__(188)});

	__webpack_require__(189)('copyWithin');

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	'use strict';
	var toObject = __webpack_require__(60)
	  , toIndex  = __webpack_require__(41)
	  , toLength = __webpack_require__(39);

	module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
	  var O     = toObject(this)
	    , len   = toLength(O.length)
	    , to    = toIndex(target, len)
	    , from  = toIndex(start, len)
	    , end   = arguments.length > 2 ? arguments[2] : undefined
	    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
	    , inc   = 1;
	  if(from < to && to < from + count){
	    inc  = -1;
	    from += count - 1;
	    to   += count - 1;
	  }
	  while(count-- > 0){
	    if(from in O)O[to] = O[from];
	    else delete O[to];
	    to   += inc;
	    from += inc;
	  } return O;
	};

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(27)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(12)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	var $export = __webpack_require__(10);

	$export($export.P, 'Array', {fill: __webpack_require__(191)});

	__webpack_require__(189)('fill');

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	'use strict';
	var toObject = __webpack_require__(60)
	  , toIndex  = __webpack_require__(41)
	  , toLength = __webpack_require__(39);
	module.exports = function fill(value /*, start = 0, end = @length */){
	  var O      = toObject(this)
	    , length = toLength(O.length)
	    , aLen   = arguments.length
	    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
	    , end    = aLen > 2 ? arguments[2] : undefined
	    , endPos = end === undefined ? length : toIndex(end, length);
	  while(endPos > index)O[index++] = value;
	  return O;
	};

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
	var $export = __webpack_require__(10)
	  , $find   = __webpack_require__(175)(5)
	  , KEY     = 'find'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(189)(KEY);

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
	var $export = __webpack_require__(10)
	  , $find   = __webpack_require__(175)(6)
	  , KEY     = 'findIndex'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(189)(KEY);

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(195)('Array');

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(6)
	  , dP          = __webpack_require__(13)
	  , DESCRIPTORS = __webpack_require__(8)
	  , SPECIES     = __webpack_require__(27)('species');

	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(189)
	  , step             = __webpack_require__(197)
	  , Iterators        = __webpack_require__(132)
	  , toIObject        = __webpack_require__(34);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(131)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 197 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	var global            = __webpack_require__(6)
	  , inheritIfRequired = __webpack_require__(90)
	  , dP                = __webpack_require__(13).f
	  , gOPN              = __webpack_require__(52).f
	  , isRegExp          = __webpack_require__(137)
	  , $flags            = __webpack_require__(199)
	  , $RegExp           = global.RegExp
	  , Base              = $RegExp
	  , proto             = $RegExp.prototype
	  , re1               = /a/g
	  , re2               = /a/g
	  // "new" creates a new object, old webkit buggy here
	  , CORRECT_NEW       = new $RegExp(re1) !== re1;

	if(__webpack_require__(8) && (!CORRECT_NEW || __webpack_require__(9)(function(){
	  re2[__webpack_require__(27)('match')] = false;
	  // RegExp constructor can alter flags and IsRegExp works correct with @@match
	  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
	}))){
	  $RegExp = function RegExp(p, f){
	    var tiRE = this instanceof $RegExp
	      , piRE = isRegExp(p)
	      , fiU  = f === undefined;
	    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
	      : inheritIfRequired(CORRECT_NEW
	        ? new Base(piRE && !fiU ? p.source : p, f)
	        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
	      , tiRE ? this : proto, $RegExp);
	  };
	  var proxy = function(key){
	    key in $RegExp || dP($RegExp, key, {
	      configurable: true,
	      get: function(){ return Base[key]; },
	      set: function(it){ Base[key] = it; }
	    });
	  };
	  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
	  proto.constructor = $RegExp;
	  $RegExp.prototype = proto;
	  __webpack_require__(20)(global, 'RegExp', $RegExp);
	}

	__webpack_require__(195)('RegExp');

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.2.5.3 get RegExp.prototype.flags
	var anObject = __webpack_require__(14);
	module.exports = function(){
	  var that   = anObject(this)
	    , result = '';
	  if(that.global)     result += 'g';
	  if(that.ignoreCase) result += 'i';
	  if(that.multiline)  result += 'm';
	  if(that.unicode)    result += 'u';
	  if(that.sticky)     result += 'y';
	  return result;
	};

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(201);
	var anObject    = __webpack_require__(14)
	  , $flags      = __webpack_require__(199)
	  , DESCRIPTORS = __webpack_require__(8)
	  , TO_STRING   = 'toString'
	  , $toString   = /./[TO_STRING];

	var define = function(fn){
	  __webpack_require__(20)(RegExp.prototype, TO_STRING, fn, true);
	};

	// 21.2.5.14 RegExp.prototype.toString()
	if(__webpack_require__(9)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
	  define(function toString(){
	    var R = anObject(this);
	    return '/'.concat(R.source, '/',
	      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
	  });
	// FF44- RegExp#toString has a wrong name
	} else if($toString.name != TO_STRING){
	  define(function toString(){
	    return $toString.call(this);
	  });
	}

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	// 21.2.5.3 get RegExp.prototype.flags()
	if(__webpack_require__(8) && /./g.flags != 'g')__webpack_require__(13).f(RegExp.prototype, 'flags', {
	  configurable: true,
	  get: __webpack_require__(199)
	});

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	// @@match logic
	__webpack_require__(203)('match', 1, function(defined, MATCH, $match){
	  // 21.1.3.11 String.prototype.match(regexp)
	  return [function match(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[MATCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
	  }, $match];
	});

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hide     = __webpack_require__(12)
	  , redefine = __webpack_require__(20)
	  , fails    = __webpack_require__(9)
	  , defined  = __webpack_require__(37)
	  , wks      = __webpack_require__(27);

	module.exports = function(KEY, length, exec){
	  var SYMBOL   = wks(KEY)
	    , fns      = exec(defined, SYMBOL, ''[KEY])
	    , strfn    = fns[0]
	    , rxfn     = fns[1];
	  if(fails(function(){
	    var O = {};
	    O[SYMBOL] = function(){ return 7; };
	    return ''[KEY](O) != 7;
	  })){
	    redefine(String.prototype, KEY, strfn);
	    hide(RegExp.prototype, SYMBOL, length == 2
	      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	      ? function(string, arg){ return rxfn.call(string, this, arg); }
	      // 21.2.5.6 RegExp.prototype[@@match](string)
	      // 21.2.5.9 RegExp.prototype[@@search](string)
	      : function(string){ return rxfn.call(string, this); }
	    );
	  }
	};

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	// @@replace logic
	__webpack_require__(203)('replace', 2, function(defined, REPLACE, $replace){
	  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
	  return [function replace(searchValue, replaceValue){
	    'use strict';
	    var O  = defined(this)
	      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
	    return fn !== undefined
	      ? fn.call(searchValue, O, replaceValue)
	      : $replace.call(String(O), searchValue, replaceValue);
	  }, $replace];
	});

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	// @@search logic
	__webpack_require__(203)('search', 1, function(defined, SEARCH, $search){
	  // 21.1.3.15 String.prototype.search(regexp)
	  return [function search(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[SEARCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	  }, $search];
	});

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	// @@split logic
	__webpack_require__(203)('split', 2, function(defined, SPLIT, $split){
	  'use strict';
	  var isRegExp   = __webpack_require__(137)
	    , _split     = $split
	    , $push      = [].push
	    , $SPLIT     = 'split'
	    , LENGTH     = 'length'
	    , LAST_INDEX = 'lastIndex';
	  if(
	    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
	    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
	    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
	    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
	    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
	    ''[$SPLIT](/.?/)[LENGTH]
	  ){
	    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
	    // based on es5-shim implementation, need to rework it
	    $split = function(separator, limit){
	      var string = String(this);
	      if(separator === undefined && limit === 0)return [];
	      // If `separator` is not a regex, use native split
	      if(!isRegExp(separator))return _split.call(string, separator, limit);
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') +
	                  (separator.multiline ? 'm' : '') +
	                  (separator.unicode ? 'u' : '') +
	                  (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var separator2, match, lastIndex, lastLength, i;
	      // Doesn't need flags gy, but they don't hurt
	      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
	      while(match = separatorCopy.exec(string)){
	        // `separatorCopy.lastIndex` is not reliable cross-browser
	        lastIndex = match.index + match[0][LENGTH];
	        if(lastIndex > lastLastIndex){
	          output.push(string.slice(lastLastIndex, match.index));
	          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
	          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
	            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
	          });
	          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
	          lastLength = match[0][LENGTH];
	          lastLastIndex = lastIndex;
	          if(output[LENGTH] >= splitLimit)break;
	        }
	        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
	      }
	      if(lastLastIndex === string[LENGTH]){
	        if(lastLength || !separatorCopy.test(''))output.push('');
	      } else output.push(string.slice(lastLastIndex));
	      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
	    };
	  // Chakra, V8
	  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
	    $split = function(separator, limit){
	      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
	    };
	  }
	  // 21.1.3.17 String.prototype.split(separator, limit)
	  return [function split(separator, limit){
	    var O  = defined(this)
	      , fn = separator == undefined ? undefined : separator[SPLIT];
	    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
	  }, $split];
	});

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(30)
	  , global             = __webpack_require__(6)
	  , ctx                = __webpack_require__(22)
	  , classof            = __webpack_require__(77)
	  , $export            = __webpack_require__(10)
	  , isObject           = __webpack_require__(15)
	  , anObject           = __webpack_require__(14)
	  , aFunction          = __webpack_require__(23)
	  , anInstance         = __webpack_require__(92)
	  , forOf              = __webpack_require__(208)
	  , setProto           = __webpack_require__(75).set
	  , speciesConstructor = __webpack_require__(209)
	  , task               = __webpack_require__(210).set
	  , microtask          = __webpack_require__(211)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;

	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(27)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();

	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};

	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(212)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(26)($Promise, PROMISE);
	__webpack_require__(195)(PROMISE);
	Wrapper = __webpack_require__(11)[PROMISE];

	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(168)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(22)
	  , call        = __webpack_require__(164)
	  , isArrayIter = __webpack_require__(165)
	  , anObject    = __webpack_require__(14)
	  , toLength    = __webpack_require__(39)
	  , getIterFn   = __webpack_require__(167)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(14)
	  , aFunction = __webpack_require__(23)
	  , SPECIES   = __webpack_require__(27)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(22)
	  , invoke             = __webpack_require__(80)
	  , html               = __webpack_require__(50)
	  , cel                = __webpack_require__(17)
	  , global             = __webpack_require__(6)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(36)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(6)
	  , macrotask = __webpack_require__(210).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(36)(process) == 'process';

	module.exports = function(){
	  var head, last, notify;

	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };

	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }

	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(20);
	module.exports = function(target, src, safe){
	  for(var key in src)redefine(target, key, src[key], safe);
	  return target;
	};

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(214);

	// 23.1 Map Objects
	module.exports = __webpack_require__(215)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(13).f
	  , create      = __webpack_require__(48)
	  , hide        = __webpack_require__(12)
	  , redefineAll = __webpack_require__(212)
	  , ctx         = __webpack_require__(22)
	  , anInstance  = __webpack_require__(92)
	  , defined     = __webpack_require__(37)
	  , forOf       = __webpack_require__(208)
	  , $iterDefine = __webpack_require__(131)
	  , step        = __webpack_require__(197)
	  , setSpecies  = __webpack_require__(195)
	  , DESCRIPTORS = __webpack_require__(8)
	  , fastKey     = __webpack_require__(24).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';

	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};

	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);

	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(6)
	  , $export           = __webpack_require__(10)
	  , redefine          = __webpack_require__(20)
	  , redefineAll       = __webpack_require__(212)
	  , meta              = __webpack_require__(24)
	  , forOf             = __webpack_require__(208)
	  , anInstance        = __webpack_require__(92)
	  , isObject          = __webpack_require__(15)
	  , fails             = __webpack_require__(9)
	  , $iterDetect       = __webpack_require__(168)
	  , setToStringTag    = __webpack_require__(26)
	  , inheritIfRequired = __webpack_require__(90);

	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  var fixMethod = function(KEY){
	    var fn = proto[KEY];
	    redefine(proto, KEY,
	      KEY == 'delete' ? function(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'has' ? function has(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'get' ? function get(a){
	        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
	        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
	    );
	  };
	  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    var instance             = new C
	      // early implementations not supports chaining
	      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
	      // most early implementations doesn't supports iterables, most modern - not close it correctly
	      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
	      // for early implementations -0 and +0 not the same
	      , BUGGY_ZERO = !IS_WEAK && fails(function(){
	        // V8 ~ Chromium 42- fails only with 5+ elements
	        var $instance = new C()
	          , index     = 5;
	        while(index--)$instance[ADDER](index, index);
	        return !$instance.has(-0);
	      });
	    if(!ACCEPT_ITERABLES){ 
	      C = wrapper(function(target, iterable){
	        anInstance(target, C, NAME);
	        var that = inheritIfRequired(new Base, target, C);
	        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if(IS_WEAK && proto.clear)delete proto.clear;
	  }

	  setToStringTag(C, NAME);

	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);

	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);

	  return C;
	};

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(214);

	// 23.2 Set Objects
	module.exports = __webpack_require__(215)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var each         = __webpack_require__(175)(0)
	  , redefine     = __webpack_require__(20)
	  , meta         = __webpack_require__(24)
	  , assign       = __webpack_require__(71)
	  , weak         = __webpack_require__(218)
	  , isObject     = __webpack_require__(15)
	  , has          = __webpack_require__(7)
	  , getWeak      = meta.getWeak
	  , isExtensible = Object.isExtensible
	  , uncaughtFrozenStore = weak.ufstore
	  , tmp          = {}
	  , InternalMap;

	var wrapper = function(get){
	  return function WeakMap(){
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	};

	var methods = {
	  // 23.3.3.3 WeakMap.prototype.get(key)
	  get: function get(key){
	    if(isObject(key)){
	      var data = getWeak(key);
	      if(data === true)return uncaughtFrozenStore(this).get(key);
	      return data ? data[this._i] : undefined;
	    }
	  },
	  // 23.3.3.5 WeakMap.prototype.set(key, value)
	  set: function set(key, value){
	    return weak.def(this, key, value);
	  }
	};

	// 23.3 WeakMap Objects
	var $WeakMap = module.exports = __webpack_require__(215)('WeakMap', wrapper, methods, weak, true, true);

	// IE11 WeakMap frozen keys fix
	if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
	  InternalMap = weak.getConstructor(wrapper);
	  assign(InternalMap.prototype, methods);
	  meta.NEED = true;
	  each(['delete', 'has', 'get', 'set'], function(key){
	    var proto  = $WeakMap.prototype
	      , method = proto[key];
	    redefine(proto, key, function(a, b){
	      // store frozen objects on internal weakmap shim
	      if(isObject(a) && !isExtensible(a)){
	        if(!this._f)this._f = new InternalMap;
	        var result = this._f[key](a, b);
	        return key == 'set' ? this : result;
	      // store all the rest on native weakmap
	      } return method.call(this, a, b);
	    });
	  });
	}

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var redefineAll       = __webpack_require__(212)
	  , getWeak           = __webpack_require__(24).getWeak
	  , anObject          = __webpack_require__(14)
	  , isObject          = __webpack_require__(15)
	  , anInstance        = __webpack_require__(92)
	  , forOf             = __webpack_require__(208)
	  , createArrayMethod = __webpack_require__(175)
	  , $has              = __webpack_require__(7)
	  , arrayFind         = createArrayMethod(5)
	  , arrayFindIndex    = createArrayMethod(6)
	  , id                = 0;

	// fallback for uncaught frozen keys
	var uncaughtFrozenStore = function(that){
	  return that._l || (that._l = new UncaughtFrozenStore);
	};
	var UncaughtFrozenStore = function(){
	  this.a = [];
	};
	var findUncaughtFrozen = function(store, key){
	  return arrayFind(store.a, function(it){
	    return it[0] === key;
	  });
	};
	UncaughtFrozenStore.prototype = {
	  get: function(key){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)return entry[1];
	  },
	  has: function(key){
	    return !!findUncaughtFrozen(this, key);
	  },
	  set: function(key, value){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)entry[1] = value;
	    else this.a.push([key, value]);
	  },
	  'delete': function(key){
	    var index = arrayFindIndex(this.a, function(it){
	      return it[0] === key;
	    });
	    if(~index)this.a.splice(index, 1);
	    return !!~index;
	  }
	};

	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = id++;      // collection id
	      that._l = undefined; // leak store for uncaught frozen objects
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.3.3.2 WeakMap.prototype.delete(key)
	      // 23.4.3.3 WeakSet.prototype.delete(value)
	      'delete': function(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this)['delete'](key);
	        return data && $has(data, this._i) && delete data[this._i];
	      },
	      // 23.3.3.4 WeakMap.prototype.has(key)
	      // 23.4.3.4 WeakSet.prototype.has(value)
	      has: function has(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this).has(key);
	        return data && $has(data, this._i);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var data = getWeak(anObject(key), true);
	    if(data === true)uncaughtFrozenStore(that).set(key, value);
	    else data[that._i] = value;
	    return that;
	  },
	  ufstore: uncaughtFrozenStore
	};

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var weak = __webpack_require__(218);

	// 23.4 WeakSet Objects
	__webpack_require__(215)('WeakSet', function(get){
	  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.4.3.1 WeakSet.prototype.add(value)
	  add: function add(value){
	    return weak.def(this, value, true);
	  }
	}, weak, false, true);

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(10)
	  , $typed       = __webpack_require__(221)
	  , buffer       = __webpack_require__(222)
	  , anObject     = __webpack_require__(14)
	  , toIndex      = __webpack_require__(41)
	  , toLength     = __webpack_require__(39)
	  , isObject     = __webpack_require__(15)
	  , TYPED_ARRAY  = __webpack_require__(27)('typed_array')
	  , ArrayBuffer  = __webpack_require__(6).ArrayBuffer
	  , speciesConstructor = __webpack_require__(209)
	  , $ArrayBuffer = buffer.ArrayBuffer
	  , $DataView    = buffer.DataView
	  , $isView      = $typed.ABV && ArrayBuffer.isView
	  , $slice       = $ArrayBuffer.prototype.slice
	  , VIEW         = $typed.VIEW
	  , ARRAY_BUFFER = 'ArrayBuffer';

	$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});

	$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
	  // 24.1.3.1 ArrayBuffer.isView(arg)
	  isView: function isView(it){
	    return $isView && $isView(it) || isObject(it) && VIEW in it;
	  }
	});

	$export($export.P + $export.U + $export.F * __webpack_require__(9)(function(){
	  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
	}), ARRAY_BUFFER, {
	  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
	  slice: function slice(start, end){
	    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
	    var len    = anObject(this).byteLength
	      , first  = toIndex(start, len)
	      , final  = toIndex(end === undefined ? len : end, len)
	      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
	      , viewS  = new $DataView(this)
	      , viewT  = new $DataView(result)
	      , index  = 0;
	    while(first < final){
	      viewT.setUint8(index++, viewS.getUint8(first++));
	    } return result;
	  }
	});

	__webpack_require__(195)(ARRAY_BUFFER);

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(6)
	  , hide   = __webpack_require__(12)
	  , uid    = __webpack_require__(21)
	  , TYPED  = uid('typed_array')
	  , VIEW   = uid('view')
	  , ABV    = !!(global.ArrayBuffer && global.DataView)
	  , CONSTR = ABV
	  , i = 0, l = 9, Typed;

	var TypedArrayConstructors = (
	  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
	).split(',');

	while(i < l){
	  if(Typed = global[TypedArrayConstructors[i++]]){
	    hide(Typed.prototype, TYPED, true);
	    hide(Typed.prototype, VIEW, true);
	  } else CONSTR = false;
	}

	module.exports = {
	  ABV:    ABV,
	  CONSTR: CONSTR,
	  TYPED:  TYPED,
	  VIEW:   VIEW
	};

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(6)
	  , DESCRIPTORS    = __webpack_require__(8)
	  , LIBRARY        = __webpack_require__(30)
	  , $typed         = __webpack_require__(221)
	  , hide           = __webpack_require__(12)
	  , redefineAll    = __webpack_require__(212)
	  , fails          = __webpack_require__(9)
	  , anInstance     = __webpack_require__(92)
	  , toInteger      = __webpack_require__(40)
	  , toLength       = __webpack_require__(39)
	  , gOPN           = __webpack_require__(52).f
	  , dP             = __webpack_require__(13).f
	  , arrayFill      = __webpack_require__(191)
	  , setToStringTag = __webpack_require__(26)
	  , ARRAY_BUFFER   = 'ArrayBuffer'
	  , DATA_VIEW      = 'DataView'
	  , PROTOTYPE      = 'prototype'
	  , WRONG_LENGTH   = 'Wrong length!'
	  , WRONG_INDEX    = 'Wrong index!'
	  , $ArrayBuffer   = global[ARRAY_BUFFER]
	  , $DataView      = global[DATA_VIEW]
	  , Math           = global.Math
	  , parseInt       = global.parseInt
	  , RangeError     = global.RangeError
	  , Infinity       = global.Infinity
	  , BaseBuffer     = $ArrayBuffer
	  , abs            = Math.abs
	  , pow            = Math.pow
	  , min            = Math.min
	  , floor          = Math.floor
	  , log            = Math.log
	  , LN2            = Math.LN2
	  , BUFFER         = 'buffer'
	  , BYTE_LENGTH    = 'byteLength'
	  , BYTE_OFFSET    = 'byteOffset'
	  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
	  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
	  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;

	// IEEE754 conversions based on https://github.com/feross/ieee754
	var packIEEE754 = function(value, mLen, nBytes){
	  var buffer = Array(nBytes)
	    , eLen   = nBytes * 8 - mLen - 1
	    , eMax   = (1 << eLen) - 1
	    , eBias  = eMax >> 1
	    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
	    , i      = 0
	    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
	    , e, m, c;
	  value = abs(value)
	  if(value != value || value === Infinity){
	    m = value != value ? 1 : 0;
	    e = eMax;
	  } else {
	    e = floor(log(value) / LN2);
	    if(value * (c = pow(2, -e)) < 1){
	      e--;
	      c *= 2;
	    }
	    if(e + eBias >= 1){
	      value += rt / c;
	    } else {
	      value += rt * pow(2, 1 - eBias);
	    }
	    if(value * c >= 2){
	      e++;
	      c /= 2;
	    }
	    if(e + eBias >= eMax){
	      m = 0;
	      e = eMax;
	    } else if(e + eBias >= 1){
	      m = (value * c - 1) * pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * pow(2, eBias - 1) * pow(2, mLen);
	      e = 0;
	    }
	  }
	  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
	  e = e << mLen | m;
	  eLen += mLen;
	  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
	  buffer[--i] |= s * 128;
	  return buffer;
	};
	var unpackIEEE754 = function(buffer, mLen, nBytes){
	  var eLen  = nBytes * 8 - mLen - 1
	    , eMax  = (1 << eLen) - 1
	    , eBias = eMax >> 1
	    , nBits = eLen - 7
	    , i     = nBytes - 1
	    , s     = buffer[i--]
	    , e     = s & 127
	    , m;
	  s >>= 7;
	  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
	  if(e === 0){
	    e = 1 - eBias;
	  } else if(e === eMax){
	    return m ? NaN : s ? -Infinity : Infinity;
	  } else {
	    m = m + pow(2, mLen);
	    e = e - eBias;
	  } return (s ? -1 : 1) * m * pow(2, e - mLen);
	};

	var unpackI32 = function(bytes){
	  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
	};
	var packI8 = function(it){
	  return [it & 0xff];
	};
	var packI16 = function(it){
	  return [it & 0xff, it >> 8 & 0xff];
	};
	var packI32 = function(it){
	  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
	};
	var packF64 = function(it){
	  return packIEEE754(it, 52, 8);
	};
	var packF32 = function(it){
	  return packIEEE754(it, 23, 4);
	};

	var addGetter = function(C, key, internal){
	  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
	};

	var get = function(view, bytes, index, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = store.slice(start, start + bytes);
	  return isLittleEndian ? pack : pack.reverse();
	};
	var set = function(view, bytes, index, conversion, value, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = conversion(+value);
	  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
	};

	var validateArrayBufferArguments = function(that, length){
	  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
	  var numberLength = +length
	    , byteLength   = toLength(numberLength);
	  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
	  return byteLength;
	};

	if(!$typed.ABV){
	  $ArrayBuffer = function ArrayBuffer(length){
	    var byteLength = validateArrayBufferArguments(this, length);
	    this._b       = arrayFill.call(Array(byteLength), 0);
	    this[$LENGTH] = byteLength;
	  };

	  $DataView = function DataView(buffer, byteOffset, byteLength){
	    anInstance(this, $DataView, DATA_VIEW);
	    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
	    var bufferLength = buffer[$LENGTH]
	      , offset       = toInteger(byteOffset);
	    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
	    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
	    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
	    this[$BUFFER] = buffer;
	    this[$OFFSET] = offset;
	    this[$LENGTH] = byteLength;
	  };

	  if(DESCRIPTORS){
	    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
	    addGetter($DataView, BUFFER, '_b');
	    addGetter($DataView, BYTE_LENGTH, '_l');
	    addGetter($DataView, BYTE_OFFSET, '_o');
	  }

	  redefineAll($DataView[PROTOTYPE], {
	    getInt8: function getInt8(byteOffset){
	      return get(this, 1, byteOffset)[0] << 24 >> 24;
	    },
	    getUint8: function getUint8(byteOffset){
	      return get(this, 1, byteOffset)[0];
	    },
	    getInt16: function getInt16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
	    },
	    getUint16: function getUint16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return bytes[1] << 8 | bytes[0];
	    },
	    getInt32: function getInt32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1]));
	    },
	    getUint32: function getUint32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
	    },
	    getFloat32: function getFloat32(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
	    },
	    getFloat64: function getFloat64(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
	    },
	    setInt8: function setInt8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setInt16: function setInt16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setUint16: function setUint16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setInt32: function setInt32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setUint32: function setUint32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packF32, value, arguments[2]);
	    },
	    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
	      set(this, 8, byteOffset, packF64, value, arguments[2]);
	    }
	  });
	} else {
	  if(!fails(function(){
	    new $ArrayBuffer;     // eslint-disable-line no-new
	  }) || !fails(function(){
	    new $ArrayBuffer(.5); // eslint-disable-line no-new
	  })){
	    $ArrayBuffer = function ArrayBuffer(length){
	      return new BaseBuffer(validateArrayBufferArguments(this, length));
	    };
	    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
	    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
	      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
	    };
	    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
	  }
	  // iOS Safari 7.x bug
	  var view = new $DataView(new $ArrayBuffer(2))
	    , $setInt8 = $DataView[PROTOTYPE].setInt8;
	  view.setInt8(0, 2147483648);
	  view.setInt8(1, 2147483649);
	  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
	    setInt8: function setInt8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    }
	  }, true);
	}
	setToStringTag($ArrayBuffer, ARRAY_BUFFER);
	setToStringTag($DataView, DATA_VIEW);
	hide($DataView[PROTOTYPE], $typed.VIEW, true);
	exports[ARRAY_BUFFER] = $ArrayBuffer;
	exports[DATA_VIEW] = $DataView;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10);
	$export($export.G + $export.W + $export.F * !__webpack_require__(221).ABV, {
	  DataView: __webpack_require__(222).DataView
	});

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(225)('Int8', 1, function(init){
	  return function Int8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	if(__webpack_require__(8)){
	  var LIBRARY             = __webpack_require__(30)
	    , global              = __webpack_require__(6)
	    , fails               = __webpack_require__(9)
	    , $export             = __webpack_require__(10)
	    , $typed              = __webpack_require__(221)
	    , $buffer             = __webpack_require__(222)
	    , ctx                 = __webpack_require__(22)
	    , anInstance          = __webpack_require__(92)
	    , propertyDesc        = __webpack_require__(19)
	    , hide                = __webpack_require__(12)
	    , redefineAll         = __webpack_require__(212)
	    , isInteger           = __webpack_require__(99)
	    , toInteger           = __webpack_require__(40)
	    , toLength            = __webpack_require__(39)
	    , toIndex             = __webpack_require__(41)
	    , toPrimitive         = __webpack_require__(18)
	    , has                 = __webpack_require__(7)
	    , same                = __webpack_require__(73)
	    , classof             = __webpack_require__(77)
	    , isObject            = __webpack_require__(15)
	    , toObject            = __webpack_require__(60)
	    , isArrayIter         = __webpack_require__(165)
	    , create              = __webpack_require__(48)
	    , getPrototypeOf      = __webpack_require__(61)
	    , gOPN                = __webpack_require__(52).f
	    , isIterable          = __webpack_require__(226)
	    , getIterFn           = __webpack_require__(167)
	    , uid                 = __webpack_require__(21)
	    , wks                 = __webpack_require__(27)
	    , createArrayMethod   = __webpack_require__(175)
	    , createArrayIncludes = __webpack_require__(38)
	    , speciesConstructor  = __webpack_require__(209)
	    , ArrayIterators      = __webpack_require__(196)
	    , Iterators           = __webpack_require__(132)
	    , $iterDetect         = __webpack_require__(168)
	    , setSpecies          = __webpack_require__(195)
	    , arrayFill           = __webpack_require__(191)
	    , arrayCopyWithin     = __webpack_require__(188)
	    , $DP                 = __webpack_require__(13)
	    , $GOPD               = __webpack_require__(53)
	    , dP                  = $DP.f
	    , gOPD                = $GOPD.f
	    , RangeError          = global.RangeError
	    , TypeError           = global.TypeError
	    , Uint8Array          = global.Uint8Array
	    , ARRAY_BUFFER        = 'ArrayBuffer'
	    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
	    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
	    , PROTOTYPE           = 'prototype'
	    , ArrayProto          = Array[PROTOTYPE]
	    , $ArrayBuffer        = $buffer.ArrayBuffer
	    , $DataView           = $buffer.DataView
	    , arrayForEach        = createArrayMethod(0)
	    , arrayFilter         = createArrayMethod(2)
	    , arraySome           = createArrayMethod(3)
	    , arrayEvery          = createArrayMethod(4)
	    , arrayFind           = createArrayMethod(5)
	    , arrayFindIndex      = createArrayMethod(6)
	    , arrayIncludes       = createArrayIncludes(true)
	    , arrayIndexOf        = createArrayIncludes(false)
	    , arrayValues         = ArrayIterators.values
	    , arrayKeys           = ArrayIterators.keys
	    , arrayEntries        = ArrayIterators.entries
	    , arrayLastIndexOf    = ArrayProto.lastIndexOf
	    , arrayReduce         = ArrayProto.reduce
	    , arrayReduceRight    = ArrayProto.reduceRight
	    , arrayJoin           = ArrayProto.join
	    , arraySort           = ArrayProto.sort
	    , arraySlice          = ArrayProto.slice
	    , arrayToString       = ArrayProto.toString
	    , arrayToLocaleString = ArrayProto.toLocaleString
	    , ITERATOR            = wks('iterator')
	    , TAG                 = wks('toStringTag')
	    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
	    , DEF_CONSTRUCTOR     = uid('def_constructor')
	    , ALL_CONSTRUCTORS    = $typed.CONSTR
	    , TYPED_ARRAY         = $typed.TYPED
	    , VIEW                = $typed.VIEW
	    , WRONG_LENGTH        = 'Wrong length!';

	  var $map = createArrayMethod(1, function(O, length){
	    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
	  });

	  var LITTLE_ENDIAN = fails(function(){
	    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
	  });

	  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
	    new Uint8Array(1).set({});
	  });

	  var strictToLength = function(it, SAME){
	    if(it === undefined)throw TypeError(WRONG_LENGTH);
	    var number = +it
	      , length = toLength(it);
	    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
	    return length;
	  };

	  var toOffset = function(it, BYTES){
	    var offset = toInteger(it);
	    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
	    return offset;
	  };

	  var validate = function(it){
	    if(isObject(it) && TYPED_ARRAY in it)return it;
	    throw TypeError(it + ' is not a typed array!');
	  };

	  var allocate = function(C, length){
	    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
	      throw TypeError('It is not a typed array constructor!');
	    } return new C(length);
	  };

	  var speciesFromList = function(O, list){
	    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
	  };

	  var fromList = function(C, list){
	    var index  = 0
	      , length = list.length
	      , result = allocate(C, length);
	    while(length > index)result[index] = list[index++];
	    return result;
	  };

	  var addGetter = function(it, key, internal){
	    dP(it, key, {get: function(){ return this._d[internal]; }});
	  };

	  var $from = function from(source /*, mapfn, thisArg */){
	    var O       = toObject(source)
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , iterFn  = getIterFn(O)
	      , i, length, values, result, step, iterator;
	    if(iterFn != undefined && !isArrayIter(iterFn)){
	      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
	        values.push(step.value);
	      } O = values;
	    }
	    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
	    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
	      result[i] = mapping ? mapfn(O[i], i) : O[i];
	    }
	    return result;
	  };

	  var $of = function of(/*...items*/){
	    var index  = 0
	      , length = arguments.length
	      , result = allocate(this, length);
	    while(length > index)result[index] = arguments[index++];
	    return result;
	  };

	  // iOS Safari 6.x fails here
	  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });

	  var $toLocaleString = function toLocaleString(){
	    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
	  };

	  var proto = {
	    copyWithin: function copyWithin(target, start /*, end */){
	      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
	    },
	    every: function every(callbackfn /*, thisArg */){
	      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
	      return arrayFill.apply(validate(this), arguments);
	    },
	    filter: function filter(callbackfn /*, thisArg */){
	      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
	        arguments.length > 1 ? arguments[1] : undefined));
	    },
	    find: function find(predicate /*, thisArg */){
	      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    findIndex: function findIndex(predicate /*, thisArg */){
	      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    forEach: function forEach(callbackfn /*, thisArg */){
	      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    indexOf: function indexOf(searchElement /*, fromIndex */){
	      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    includes: function includes(searchElement /*, fromIndex */){
	      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    join: function join(separator){ // eslint-disable-line no-unused-vars
	      return arrayJoin.apply(validate(this), arguments);
	    },
	    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
	      return arrayLastIndexOf.apply(validate(this), arguments);
	    },
	    map: function map(mapfn /*, thisArg */){
	      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduce.apply(validate(this), arguments);
	    },
	    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduceRight.apply(validate(this), arguments);
	    },
	    reverse: function reverse(){
	      var that   = this
	        , length = validate(that).length
	        , middle = Math.floor(length / 2)
	        , index  = 0
	        , value;
	      while(index < middle){
	        value         = that[index];
	        that[index++] = that[--length];
	        that[length]  = value;
	      } return that;
	    },
	    some: function some(callbackfn /*, thisArg */){
	      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    sort: function sort(comparefn){
	      return arraySort.call(validate(this), comparefn);
	    },
	    subarray: function subarray(begin, end){
	      var O      = validate(this)
	        , length = O.length
	        , $begin = toIndex(begin, length);
	      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
	        O.buffer,
	        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
	        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
	      );
	    }
	  };

	  var $slice = function slice(start, end){
	    return speciesFromList(this, arraySlice.call(validate(this), start, end));
	  };

	  var $set = function set(arrayLike /*, offset */){
	    validate(this);
	    var offset = toOffset(arguments[1], 1)
	      , length = this.length
	      , src    = toObject(arrayLike)
	      , len    = toLength(src.length)
	      , index  = 0;
	    if(len + offset > length)throw RangeError(WRONG_LENGTH);
	    while(index < len)this[offset + index] = src[index++];
	  };

	  var $iterators = {
	    entries: function entries(){
	      return arrayEntries.call(validate(this));
	    },
	    keys: function keys(){
	      return arrayKeys.call(validate(this));
	    },
	    values: function values(){
	      return arrayValues.call(validate(this));
	    }
	  };

	  var isTAIndex = function(target, key){
	    return isObject(target)
	      && target[TYPED_ARRAY]
	      && typeof key != 'symbol'
	      && key in target
	      && String(+key) == String(key);
	  };
	  var $getDesc = function getOwnPropertyDescriptor(target, key){
	    return isTAIndex(target, key = toPrimitive(key, true))
	      ? propertyDesc(2, target[key])
	      : gOPD(target, key);
	  };
	  var $setDesc = function defineProperty(target, key, desc){
	    if(isTAIndex(target, key = toPrimitive(key, true))
	      && isObject(desc)
	      && has(desc, 'value')
	      && !has(desc, 'get')
	      && !has(desc, 'set')
	      // TODO: add validation descriptor w/o calling accessors
	      && !desc.configurable
	      && (!has(desc, 'writable') || desc.writable)
	      && (!has(desc, 'enumerable') || desc.enumerable)
	    ){
	      target[key] = desc.value;
	      return target;
	    } else return dP(target, key, desc);
	  };

	  if(!ALL_CONSTRUCTORS){
	    $GOPD.f = $getDesc;
	    $DP.f   = $setDesc;
	  }

	  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
	    getOwnPropertyDescriptor: $getDesc,
	    defineProperty:           $setDesc
	  });

	  if(fails(function(){ arrayToString.call({}); })){
	    arrayToString = arrayToLocaleString = function toString(){
	      return arrayJoin.call(this);
	    }
	  }

	  var $TypedArrayPrototype$ = redefineAll({}, proto);
	  redefineAll($TypedArrayPrototype$, $iterators);
	  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
	  redefineAll($TypedArrayPrototype$, {
	    slice:          $slice,
	    set:            $set,
	    constructor:    function(){ /* noop */ },
	    toString:       arrayToString,
	    toLocaleString: $toLocaleString
	  });
	  addGetter($TypedArrayPrototype$, 'buffer', 'b');
	  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
	  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
	  addGetter($TypedArrayPrototype$, 'length', 'e');
	  dP($TypedArrayPrototype$, TAG, {
	    get: function(){ return this[TYPED_ARRAY]; }
	  });

	  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
	    CLAMPED = !!CLAMPED;
	    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
	      , ISNT_UINT8 = NAME != 'Uint8Array'
	      , GETTER     = 'get' + KEY
	      , SETTER     = 'set' + KEY
	      , TypedArray = global[NAME]
	      , Base       = TypedArray || {}
	      , TAC        = TypedArray && getPrototypeOf(TypedArray)
	      , FORCED     = !TypedArray || !$typed.ABV
	      , O          = {}
	      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
	    var getter = function(that, index){
	      var data = that._d;
	      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
	    };
	    var setter = function(that, index, value){
	      var data = that._d;
	      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
	      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
	    };
	    var addElement = function(that, index){
	      dP(that, index, {
	        get: function(){
	          return getter(this, index);
	        },
	        set: function(value){
	          return setter(this, index, value);
	        },
	        enumerable: true
	      });
	    };
	    if(FORCED){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME, '_d');
	        var index  = 0
	          , offset = 0
	          , buffer, byteLength, length, klass;
	        if(!isObject(data)){
	          length     = strictToLength(data, true)
	          byteLength = length * BYTES;
	          buffer     = new $ArrayBuffer(byteLength);
	        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          buffer = data;
	          offset = toOffset($offset, BYTES);
	          var $len = data.byteLength;
	          if($length === undefined){
	            if($len % BYTES)throw RangeError(WRONG_LENGTH);
	            byteLength = $len - offset;
	            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
	          } else {
	            byteLength = toLength($length) * BYTES;
	            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
	          }
	          length = byteLength / BYTES;
	        } else if(TYPED_ARRAY in data){
	          return fromList(TypedArray, data);
	        } else {
	          return $from.call(TypedArray, data);
	        }
	        hide(that, '_d', {
	          b: buffer,
	          o: offset,
	          l: byteLength,
	          e: length,
	          v: new $DataView(buffer)
	        });
	        while(index < length)addElement(that, index++);
	      });
	      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
	      hide(TypedArrayPrototype, 'constructor', TypedArray);
	    } else if(!$iterDetect(function(iter){
	      // V8 works with iterators, but fails in many other cases
	      // https://code.google.com/p/v8/issues/detail?id=4552
	      new TypedArray(null); // eslint-disable-line no-new
	      new TypedArray(iter); // eslint-disable-line no-new
	    }, true)){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME);
	        var klass;
	        // `ws` module bug, temporarily remove validation length for Uint8Array
	        // https://github.com/websockets/ws/pull/645
	        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
	        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          return $length !== undefined
	            ? new Base(data, toOffset($offset, BYTES), $length)
	            : $offset !== undefined
	              ? new Base(data, toOffset($offset, BYTES))
	              : new Base(data);
	        }
	        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
	        return $from.call(TypedArray, data);
	      });
	      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
	        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
	      });
	      TypedArray[PROTOTYPE] = TypedArrayPrototype;
	      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
	    }
	    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
	      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
	      , $iterator         = $iterators.values;
	    hide(TypedArray, TYPED_CONSTRUCTOR, true);
	    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
	    hide(TypedArrayPrototype, VIEW, true);
	    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

	    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
	      dP(TypedArrayPrototype, TAG, {
	        get: function(){ return NAME; }
	      });
	    }

	    O[NAME] = TypedArray;

	    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

	    $export($export.S, NAME, {
	      BYTES_PER_ELEMENT: BYTES,
	      from: $from,
	      of: $of
	    });

	    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

	    $export($export.P, NAME, proto);

	    setSpecies(NAME);

	    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});

	    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

	    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});

	    $export($export.P + $export.F * fails(function(){
	      new TypedArray(1).slice();
	    }), NAME, {slice: $slice});

	    $export($export.P + $export.F * (fails(function(){
	      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
	    }) || !fails(function(){
	      TypedArrayPrototype.toLocaleString.call([1, 2]);
	    })), NAME, {toLocaleString: $toLocaleString});

	    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
	    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
	  };
	} else module.exports = function(){ /* empty */ };

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(77)
	  , ITERATOR  = __webpack_require__(27)('iterator')
	  , Iterators = __webpack_require__(132);
	module.exports = __webpack_require__(11).isIterable = function(it){
	  var O = Object(it);
	  return O[ITERATOR] !== undefined
	    || '@@iterator' in O
	    || Iterators.hasOwnProperty(classof(O));
	};

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(225)('Uint8', 1, function(init){
	  return function Uint8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(225)('Uint8', 1, function(init){
	  return function Uint8ClampedArray(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	}, true);

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(225)('Int16', 2, function(init){
	  return function Int16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(225)('Uint16', 2, function(init){
	  return function Uint16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(225)('Int32', 4, function(init){
	  return function Int32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(225)('Uint32', 4, function(init){
	  return function Uint32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(225)('Float32', 4, function(init){
	  return function Float32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(225)('Float64', 8, function(init){
	  return function Float64Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
	var $export   = __webpack_require__(10)
	  , aFunction = __webpack_require__(23)
	  , anObject  = __webpack_require__(14)
	  , _apply    = Function.apply;

	$export($export.S, 'Reflect', {
	  apply: function apply(target, thisArgument, argumentsList){
	    return _apply.call(aFunction(target), thisArgument, anObject(argumentsList));
	  }
	});

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
	var $export   = __webpack_require__(10)
	  , create    = __webpack_require__(48)
	  , aFunction = __webpack_require__(23)
	  , anObject  = __webpack_require__(14)
	  , isObject  = __webpack_require__(15)
	  , bind      = __webpack_require__(79);

	// MS Edge supports only 2 arguments
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	$export($export.S + $export.F * __webpack_require__(9)(function(){
	  function F(){}
	  return !(Reflect.construct(function(){}, [], F) instanceof F);
	}), 'Reflect', {
	  construct: function construct(Target, args /*, newTarget*/){
	    aFunction(Target);
	    anObject(args);
	    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
	    if(Target == newTarget){
	      // w/o altered newTarget, optimization for 0-4 arguments
	      switch(args.length){
	        case 0: return new Target;
	        case 1: return new Target(args[0]);
	        case 2: return new Target(args[0], args[1]);
	        case 3: return new Target(args[0], args[1], args[2]);
	        case 4: return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      $args.push.apply($args, args);
	      return new (bind.apply(Target, $args));
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto    = newTarget.prototype
	      , instance = create(isObject(proto) ? proto : Object.prototype)
	      , result   = Function.apply.call(Target, instance, args);
	    return isObject(result) ? result : instance;
	  }
	});

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
	var dP          = __webpack_require__(13)
	  , $export     = __webpack_require__(10)
	  , anObject    = __webpack_require__(14)
	  , toPrimitive = __webpack_require__(18);

	// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
	$export($export.S + $export.F * __webpack_require__(9)(function(){
	  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
	}), 'Reflect', {
	  defineProperty: function defineProperty(target, propertyKey, attributes){
	    anObject(target);
	    propertyKey = toPrimitive(propertyKey, true);
	    anObject(attributes);
	    try {
	      dP.f(target, propertyKey, attributes);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.4 Reflect.deleteProperty(target, propertyKey)
	var $export  = __webpack_require__(10)
	  , gOPD     = __webpack_require__(53).f
	  , anObject = __webpack_require__(14);

	$export($export.S, 'Reflect', {
	  deleteProperty: function deleteProperty(target, propertyKey){
	    var desc = gOPD(anObject(target), propertyKey);
	    return desc && !desc.configurable ? false : delete target[propertyKey];
	  }
	});

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 26.1.5 Reflect.enumerate(target)
	var $export  = __webpack_require__(10)
	  , anObject = __webpack_require__(14);
	var Enumerate = function(iterated){
	  this._t = anObject(iterated); // target
	  this._i = 0;                  // next index
	  var keys = this._k = []       // keys
	    , key;
	  for(key in iterated)keys.push(key);
	};
	__webpack_require__(133)(Enumerate, 'Object', function(){
	  var that = this
	    , keys = that._k
	    , key;
	  do {
	    if(that._i >= keys.length)return {value: undefined, done: true};
	  } while(!((key = keys[that._i++]) in that._t));
	  return {value: key, done: false};
	});

	$export($export.S, 'Reflect', {
	  enumerate: function enumerate(target){
	    return new Enumerate(target);
	  }
	});

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.6 Reflect.get(target, propertyKey [, receiver])
	var gOPD           = __webpack_require__(53)
	  , getPrototypeOf = __webpack_require__(61)
	  , has            = __webpack_require__(7)
	  , $export        = __webpack_require__(10)
	  , isObject       = __webpack_require__(15)
	  , anObject       = __webpack_require__(14);

	function get(target, propertyKey/*, receiver*/){
	  var receiver = arguments.length < 3 ? target : arguments[2]
	    , desc, proto;
	  if(anObject(target) === receiver)return target[propertyKey];
	  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
	    ? desc.value
	    : desc.get !== undefined
	      ? desc.get.call(receiver)
	      : undefined;
	  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
	}

	$export($export.S, 'Reflect', {get: get});

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
	var gOPD     = __webpack_require__(53)
	  , $export  = __webpack_require__(10)
	  , anObject = __webpack_require__(14);

	$export($export.S, 'Reflect', {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
	    return gOPD.f(anObject(target), propertyKey);
	  }
	});

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.8 Reflect.getPrototypeOf(target)
	var $export  = __webpack_require__(10)
	  , getProto = __webpack_require__(61)
	  , anObject = __webpack_require__(14);

	$export($export.S, 'Reflect', {
	  getPrototypeOf: function getPrototypeOf(target){
	    return getProto(anObject(target));
	  }
	});

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.9 Reflect.has(target, propertyKey)
	var $export = __webpack_require__(10);

	$export($export.S, 'Reflect', {
	  has: function has(target, propertyKey){
	    return propertyKey in target;
	  }
	});

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.10 Reflect.isExtensible(target)
	var $export       = __webpack_require__(10)
	  , anObject      = __webpack_require__(14)
	  , $isExtensible = Object.isExtensible;

	$export($export.S, 'Reflect', {
	  isExtensible: function isExtensible(target){
	    anObject(target);
	    return $isExtensible ? $isExtensible(target) : true;
	  }
	});

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.11 Reflect.ownKeys(target)
	var $export = __webpack_require__(10);

	$export($export.S, 'Reflect', {ownKeys: __webpack_require__(246)});

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	// all object keys, includes non-enumerable and symbols
	var gOPN     = __webpack_require__(52)
	  , gOPS     = __webpack_require__(45)
	  , anObject = __webpack_require__(14)
	  , Reflect  = __webpack_require__(6).Reflect;
	module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
	  var keys       = gOPN.f(anObject(it))
	    , getSymbols = gOPS.f;
	  return getSymbols ? keys.concat(getSymbols(it)) : keys;
	};

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.12 Reflect.preventExtensions(target)
	var $export            = __webpack_require__(10)
	  , anObject           = __webpack_require__(14)
	  , $preventExtensions = Object.preventExtensions;

	$export($export.S, 'Reflect', {
	  preventExtensions: function preventExtensions(target){
	    anObject(target);
	    try {
	      if($preventExtensions)$preventExtensions(target);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
	var dP             = __webpack_require__(13)
	  , gOPD           = __webpack_require__(53)
	  , getPrototypeOf = __webpack_require__(61)
	  , has            = __webpack_require__(7)
	  , $export        = __webpack_require__(10)
	  , createDesc     = __webpack_require__(19)
	  , anObject       = __webpack_require__(14)
	  , isObject       = __webpack_require__(15);

	function set(target, propertyKey, V/*, receiver*/){
	  var receiver = arguments.length < 4 ? target : arguments[3]
	    , ownDesc  = gOPD.f(anObject(target), propertyKey)
	    , existingDescriptor, proto;
	  if(!ownDesc){
	    if(isObject(proto = getPrototypeOf(target))){
	      return set(proto, propertyKey, V, receiver);
	    }
	    ownDesc = createDesc(0);
	  }
	  if(has(ownDesc, 'value')){
	    if(ownDesc.writable === false || !isObject(receiver))return false;
	    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
	    existingDescriptor.value = V;
	    dP.f(receiver, propertyKey, existingDescriptor);
	    return true;
	  }
	  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
	}

	$export($export.S, 'Reflect', {set: set});

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.14 Reflect.setPrototypeOf(target, proto)
	var $export  = __webpack_require__(10)
	  , setProto = __webpack_require__(75);

	if(setProto)$export($export.S, 'Reflect', {
	  setPrototypeOf: function setPrototypeOf(target, proto){
	    setProto.check(target, proto);
	    try {
	      setProto.set(target, proto);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/Array.prototype.includes
	var $export   = __webpack_require__(10)
	  , $includes = __webpack_require__(38)(true);

	$export($export.P, 'Array', {
	  includes: function includes(el /*, fromIndex = 0 */){
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	__webpack_require__(189)('includes');

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/mathiasbynens/String.prototype.at
	var $export = __webpack_require__(10)
	  , $at     = __webpack_require__(130)(true);

	$export($export.P, 'String', {
	  at: function at(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(10)
	  , $pad    = __webpack_require__(253);

	$export($export.P, 'String', {
	  padStart: function padStart(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
	  }
	});

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-string-pad-start-end
	var toLength = __webpack_require__(39)
	  , repeat   = __webpack_require__(94)
	  , defined  = __webpack_require__(37);

	module.exports = function(that, maxLength, fillString, left){
	  var S            = String(defined(that))
	    , stringLength = S.length
	    , fillStr      = fillString === undefined ? ' ' : String(fillString)
	    , intMaxLength = toLength(maxLength);
	  if(intMaxLength <= stringLength || fillStr == '')return S;
	  var fillLen = intMaxLength - stringLength
	    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
	  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
	  return left ? stringFiller + S : S + stringFiller;
	};


/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(10)
	  , $pad    = __webpack_require__(253);

	$export($export.P, 'String', {
	  padEnd: function padEnd(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
	  }
	});

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(85)('trimLeft', function($trim){
	  return function trimLeft(){
	    return $trim(this, 1);
	  };
	}, 'trimStart');

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(85)('trimRight', function($trim){
	  return function trimRight(){
	    return $trim(this, 2);
	  };
	}, 'trimEnd');

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/String.prototype.matchAll/
	var $export     = __webpack_require__(10)
	  , defined     = __webpack_require__(37)
	  , toLength    = __webpack_require__(39)
	  , isRegExp    = __webpack_require__(137)
	  , getFlags    = __webpack_require__(199)
	  , RegExpProto = RegExp.prototype;

	var $RegExpStringIterator = function(regexp, string){
	  this._r = regexp;
	  this._s = string;
	};

	__webpack_require__(133)($RegExpStringIterator, 'RegExp String', function next(){
	  var match = this._r.exec(this._s);
	  return {value: match, done: match === null};
	});

	$export($export.P, 'String', {
	  matchAll: function matchAll(regexp){
	    defined(this);
	    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
	    var S     = String(this)
	      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
	      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
	    rx.lastIndex = toLength(regexp.lastIndex);
	    return new $RegExpStringIterator(rx, S);
	  }
	});

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(29)('asyncIterator');

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(29)('observable');

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-getownpropertydescriptors
	var $export        = __webpack_require__(10)
	  , ownKeys        = __webpack_require__(246)
	  , toIObject      = __webpack_require__(34)
	  , gOPD           = __webpack_require__(53)
	  , createProperty = __webpack_require__(166);

	$export($export.S, 'Object', {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
	    var O       = toIObject(object)
	      , getDesc = gOPD.f
	      , keys    = ownKeys(O)
	      , result  = {}
	      , i       = 0
	      , key, D;
	    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
	    return result;
	  }
	});

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(10)
	  , $values = __webpack_require__(262)(false);

	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(32)
	  , toIObject = __webpack_require__(34)
	  , isEnum    = __webpack_require__(46).f;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export  = __webpack_require__(10)
	  , $entries = __webpack_require__(262)(true);

	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(10)
	  , toObject        = __webpack_require__(60)
	  , aFunction       = __webpack_require__(23)
	  , $defineProperty = __webpack_require__(13);

	// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
	__webpack_require__(8) && $export($export.P + __webpack_require__(265), 'Object', {
	  __defineGetter__: function __defineGetter__(P, getter){
	    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	// Forced replacement prototype accessors methods
	module.exports = __webpack_require__(30)|| !__webpack_require__(9)(function(){
	  var K = Math.random();
	  // In FF throws only define methods
	  __defineSetter__.call(null, K, function(){ /* empty */});
	  delete __webpack_require__(6)[K];
	});

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(10)
	  , toObject        = __webpack_require__(60)
	  , aFunction       = __webpack_require__(23)
	  , $defineProperty = __webpack_require__(13);

	// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
	__webpack_require__(8) && $export($export.P + __webpack_require__(265), 'Object', {
	  __defineSetter__: function __defineSetter__(P, setter){
	    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(10)
	  , toObject                 = __webpack_require__(60)
	  , toPrimitive              = __webpack_require__(18)
	  , getPrototypeOf           = __webpack_require__(61)
	  , getOwnPropertyDescriptor = __webpack_require__(53).f;

	// B.2.2.4 Object.prototype.__lookupGetter__(P)
	__webpack_require__(8) && $export($export.P + __webpack_require__(265), 'Object', {
	  __lookupGetter__: function __lookupGetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.get;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(10)
	  , toObject                 = __webpack_require__(60)
	  , toPrimitive              = __webpack_require__(18)
	  , getPrototypeOf           = __webpack_require__(61)
	  , getOwnPropertyDescriptor = __webpack_require__(53).f;

	// B.2.2.5 Object.prototype.__lookupSetter__(P)
	__webpack_require__(8) && $export($export.P + __webpack_require__(265), 'Object', {
	  __lookupSetter__: function __lookupSetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.set;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(10);

	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(270)('Map')});

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(77)
	  , from    = __webpack_require__(271);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(208);

	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(10);

	$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(270)('Set')});

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-global
	var $export = __webpack_require__(10);

	$export($export.S, 'System', {global: __webpack_require__(6)});

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-is-error
	var $export = __webpack_require__(10)
	  , cof     = __webpack_require__(36);

	$export($export.S, 'Error', {
	  isError: function isError(it){
	    return cof(it) === 'Error';
	  }
	});

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(10);

	$export($export.S, 'Math', {
	  iaddh: function iaddh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
	  }
	});

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(10);

	$export($export.S, 'Math', {
	  isubh: function isubh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
	  }
	});

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(10);

	$export($export.S, 'Math', {
	  imulh: function imulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >> 16
	      , v1 = $v >> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
	  }
	});

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(10);

	$export($export.S, 'Math', {
	  umulh: function umulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >>> 16
	      , v1 = $v >>> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
	  }
	});

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(280)
	  , anObject                  = __webpack_require__(14)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;

	metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
	  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
	}});

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var Map     = __webpack_require__(213)
	  , $export = __webpack_require__(10)
	  , shared  = __webpack_require__(25)('metadata')
	  , store   = shared.store || (shared.store = new (__webpack_require__(217)));

	var getOrCreateMetadataMap = function(target, targetKey, create){
	  var targetMetadata = store.get(target);
	  if(!targetMetadata){
	    if(!create)return undefined;
	    store.set(target, targetMetadata = new Map);
	  }
	  var keyMetadata = targetMetadata.get(targetKey);
	  if(!keyMetadata){
	    if(!create)return undefined;
	    targetMetadata.set(targetKey, keyMetadata = new Map);
	  } return keyMetadata;
	};
	var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
	};
	var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
	};
	var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
	  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
	};
	var ordinaryOwnMetadataKeys = function(target, targetKey){
	  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
	    , keys        = [];
	  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
	  return keys;
	};
	var toMetaKey = function(it){
	  return it === undefined || typeof it == 'symbol' ? it : String(it);
	};
	var exp = function(O){
	  $export($export.S, 'Reflect', O);
	};

	module.exports = {
	  store: store,
	  map: getOrCreateMetadataMap,
	  has: ordinaryHasOwnMetadata,
	  get: ordinaryGetOwnMetadata,
	  set: ordinaryDefineOwnMetadata,
	  keys: ordinaryOwnMetadataKeys,
	  key: toMetaKey,
	  exp: exp
	};

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(280)
	  , anObject               = __webpack_require__(14)
	  , toMetaKey              = metadata.key
	  , getOrCreateMetadataMap = metadata.map
	  , store                  = metadata.store;

	metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
	  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
	    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
	  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
	  if(metadataMap.size)return true;
	  var targetMetadata = store.get(target);
	  targetMetadata['delete'](targetKey);
	  return !!targetMetadata.size || store['delete'](target);
	}});

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(280)
	  , anObject               = __webpack_require__(14)
	  , getPrototypeOf         = __webpack_require__(61)
	  , ordinaryHasOwnMetadata = metadata.has
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;

	var ordinaryGetMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
	};

	metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var Set                     = __webpack_require__(216)
	  , from                    = __webpack_require__(271)
	  , metadata                = __webpack_require__(280)
	  , anObject                = __webpack_require__(14)
	  , getPrototypeOf          = __webpack_require__(61)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;

	var ordinaryMetadataKeys = function(O, P){
	  var oKeys  = ordinaryOwnMetadataKeys(O, P)
	    , parent = getPrototypeOf(O);
	  if(parent === null)return oKeys;
	  var pKeys  = ordinaryMetadataKeys(parent, P);
	  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
	};

	metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
	  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(280)
	  , anObject               = __webpack_require__(14)
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;

	metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                = __webpack_require__(280)
	  , anObject                = __webpack_require__(14)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;

	metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
	  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(280)
	  , anObject               = __webpack_require__(14)
	  , getPrototypeOf         = __webpack_require__(61)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;

	var ordinaryHasMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return true;
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
	};

	metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(280)
	  , anObject               = __webpack_require__(14)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;

	metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(280)
	  , anObject                  = __webpack_require__(14)
	  , aFunction                 = __webpack_require__(23)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;

	metadata.exp({metadata: function metadata(metadataKey, metadataValue){
	  return function decorator(target, targetKey){
	    ordinaryDefineOwnMetadata(
	      metadataKey, metadataValue,
	      (targetKey !== undefined ? anObject : aFunction)(target),
	      toMetaKey(targetKey)
	    );
	  };
	}});

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
	var $export   = __webpack_require__(10)
	  , microtask = __webpack_require__(211)()
	  , process   = __webpack_require__(6).process
	  , isNode    = __webpack_require__(36)(process) == 'process';

	$export($export.G, {
	  asap: function asap(fn){
	    var domain = isNode && process.domain;
	    microtask(domain ? domain.bind(fn) : fn);
	  }
	});

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/zenparsing/es-observable
	var $export     = __webpack_require__(10)
	  , global      = __webpack_require__(6)
	  , core        = __webpack_require__(11)
	  , microtask   = __webpack_require__(211)()
	  , OBSERVABLE  = __webpack_require__(27)('observable')
	  , aFunction   = __webpack_require__(23)
	  , anObject    = __webpack_require__(14)
	  , anInstance  = __webpack_require__(92)
	  , redefineAll = __webpack_require__(212)
	  , hide        = __webpack_require__(12)
	  , forOf       = __webpack_require__(208)
	  , RETURN      = forOf.RETURN;

	var getMethod = function(fn){
	  return fn == null ? undefined : aFunction(fn);
	};

	var cleanupSubscription = function(subscription){
	  var cleanup = subscription._c;
	  if(cleanup){
	    subscription._c = undefined;
	    cleanup();
	  }
	};

	var subscriptionClosed = function(subscription){
	  return subscription._o === undefined;
	};

	var closeSubscription = function(subscription){
	  if(!subscriptionClosed(subscription)){
	    subscription._o = undefined;
	    cleanupSubscription(subscription);
	  }
	};

	var Subscription = function(observer, subscriber){
	  anObject(observer);
	  this._c = undefined;
	  this._o = observer;
	  observer = new SubscriptionObserver(this);
	  try {
	    var cleanup      = subscriber(observer)
	      , subscription = cleanup;
	    if(cleanup != null){
	      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
	      else aFunction(cleanup);
	      this._c = cleanup;
	    }
	  } catch(e){
	    observer.error(e);
	    return;
	  } if(subscriptionClosed(this))cleanupSubscription(this);
	};

	Subscription.prototype = redefineAll({}, {
	  unsubscribe: function unsubscribe(){ closeSubscription(this); }
	});

	var SubscriptionObserver = function(subscription){
	  this._s = subscription;
	};

	SubscriptionObserver.prototype = redefineAll({}, {
	  next: function next(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      try {
	        var m = getMethod(observer.next);
	        if(m)return m.call(observer, value);
	      } catch(e){
	        try {
	          closeSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      }
	    }
	  },
	  error: function error(value){
	    var subscription = this._s;
	    if(subscriptionClosed(subscription))throw value;
	    var observer = subscription._o;
	    subscription._o = undefined;
	    try {
	      var m = getMethod(observer.error);
	      if(!m)throw value;
	      value = m.call(observer, value);
	    } catch(e){
	      try {
	        cleanupSubscription(subscription);
	      } finally {
	        throw e;
	      }
	    } cleanupSubscription(subscription);
	    return value;
	  },
	  complete: function complete(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      subscription._o = undefined;
	      try {
	        var m = getMethod(observer.complete);
	        value = m ? m.call(observer, value) : undefined;
	      } catch(e){
	        try {
	          cleanupSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      } cleanupSubscription(subscription);
	      return value;
	    }
	  }
	});

	var $Observable = function Observable(subscriber){
	  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
	};

	redefineAll($Observable.prototype, {
	  subscribe: function subscribe(observer){
	    return new Subscription(observer, this._f);
	  },
	  forEach: function forEach(fn){
	    var that = this;
	    return new (core.Promise || global.Promise)(function(resolve, reject){
	      aFunction(fn);
	      var subscription = that.subscribe({
	        next : function(value){
	          try {
	            return fn(value);
	          } catch(e){
	            reject(e);
	            subscription.unsubscribe();
	          }
	        },
	        error: reject,
	        complete: resolve
	      });
	    });
	  }
	});

	redefineAll($Observable, {
	  from: function from(x){
	    var C = typeof this === 'function' ? this : $Observable;
	    var method = getMethod(anObject(x)[OBSERVABLE]);
	    if(method){
	      var observable = anObject(method.call(x));
	      return observable.constructor === C ? observable : new C(function(observer){
	        return observable.subscribe(observer);
	      });
	    }
	    return new C(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          try {
	            if(forOf(x, false, function(it){
	              observer.next(it);
	              if(done)return RETURN;
	            }) === RETURN)return;
	          } catch(e){
	            if(done)throw e;
	            observer.error(e);
	            return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  },
	  of: function of(){
	    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
	    return new (typeof this === 'function' ? this : $Observable)(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          for(var i = 0; i < items.length; ++i){
	            observer.next(items[i]);
	            if(done)return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  }
	});

	hide($Observable.prototype, OBSERVABLE, function(){ return this; });

	$export($export.G, {Observable: $Observable});

	__webpack_require__(195)('Observable');

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	// ie9- setTimeout & setInterval additional parameters fix
	var global     = __webpack_require__(6)
	  , $export    = __webpack_require__(10)
	  , invoke     = __webpack_require__(80)
	  , partial    = __webpack_require__(292)
	  , navigator  = global.navigator
	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
	var wrap = function(set){
	  return MSIE ? function(fn, time /*, ...args */){
	    return set(invoke(
	      partial,
	      [].slice.call(arguments, 2),
	      typeof fn == 'function' ? fn : Function(fn)
	    ), time);
	  } : set;
	};
	$export($export.G + $export.B + $export.F * MSIE, {
	  setTimeout:  wrap(global.setTimeout),
	  setInterval: wrap(global.setInterval)
	});

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var path      = __webpack_require__(293)
	  , invoke    = __webpack_require__(80)
	  , aFunction = __webpack_require__(23);
	module.exports = function(/* ...pargs */){
	  var fn     = aFunction(this)
	    , length = arguments.length
	    , pargs  = Array(length)
	    , i      = 0
	    , _      = path._
	    , holder = false;
	  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
	  return function(/* ...args */){
	    var that = this
	      , aLen = arguments.length
	      , j = 0, k = 0, args;
	    if(!holder && !aLen)return invoke(fn, pargs, that);
	    args = pargs.slice();
	    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
	    while(aLen > k)args.push(arguments[k++]);
	    return invoke(fn, args, that);
	  };
	};

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(6);

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10)
	  , $task   = __webpack_require__(210);
	$export($export.G + $export.B, {
	  setImmediate:   $task.set,
	  clearImmediate: $task.clear
	});

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	var $iterators    = __webpack_require__(196)
	  , redefine      = __webpack_require__(20)
	  , global        = __webpack_require__(6)
	  , hide          = __webpack_require__(12)
	  , Iterators     = __webpack_require__(132)
	  , wks           = __webpack_require__(27)
	  , ITERATOR      = wks('iterator')
	  , TO_STRING_TAG = wks('toStringTag')
	  , ArrayValues   = Iterators.Array;

	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype
	    , key;
	  if(proto){
	    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
	    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
	  }
	}

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {/**
	 * Copyright (c) 2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
	 * additional grant of patent rights can be found in the PATENTS file in
	 * the same directory.
	 */

	!(function(global) {
	  "use strict";

	  var hasOwn = Object.prototype.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }

	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided, then outerFn.prototype instanceof Generator.
	    var generator = Object.create((outerFn || Generator).prototype);
	    var context = new Context(tryLocsList || []);

	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);

	    return generator;
	  }
	  runtime.wrap = wrap;

	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }

	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";

	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};

	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}

	  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }

	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };

	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };

	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `value instanceof AwaitArgument` to determine if the yielded value is
	  // meant to be awaited. Some may consider the name of this method too
	  // cutesy, but they are curmudgeons.
	  runtime.awrap = function(arg) {
	    return new AwaitArgument(arg);
	  };

	  function AwaitArgument(arg) {
	    this.arg = arg;
	  }

	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value instanceof AwaitArgument) {
	          return Promise.resolve(value.arg).then(function(value) {
	            invoke("next", value, resolve, reject);
	          }, function(err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }

	        return Promise.resolve(value).then(function(unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }

	    if (typeof process === "object" && process.domain) {
	      invoke = process.domain.bind(invoke);
	    }

	    var previousPromise;

	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function(resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }

	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : callInvokeWithMethodAndArg();
	    }

	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }

	  defineIteratorMethods(AsyncIterator.prototype);

	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );

	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };

	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;

	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }

	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }

	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }

	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          if (method === "return" ||
	              (method === "throw" && delegate.iterator[method] === undefined)) {
	            // A return or throw (when the delegate iterator has no throw
	            // method) always terminates the yield* loop.
	            context.delegate = null;

	            // If the delegate iterator has a return method, give it a
	            // chance to clean up.
	            var returnMethod = delegate.iterator["return"];
	            if (returnMethod) {
	              var record = tryCatch(returnMethod, delegate.iterator, arg);
	              if (record.type === "throw") {
	                // If the return method threw an exception, let that
	                // exception prevail over the original return or throw.
	                method = "throw";
	                arg = record.arg;
	                continue;
	              }
	            }

	            if (method === "return") {
	              // Continue with the outer return, now that the delegate
	              // iterator has been terminated.
	              continue;
	            }
	          }

	          var record = tryCatch(
	            delegate.iterator[method],
	            delegate.iterator,
	            arg
	          );

	          if (record.type === "throw") {
	            context.delegate = null;

	            // Like returning generator.throw(uncaught), but without the
	            // overhead of an extra function call.
	            method = "throw";
	            arg = record.arg;
	            continue;
	          }

	          // Delegate generator ran and handled its own exceptions so
	          // regardless of what the method was, we continue as if it is
	          // "next" with an undefined arg.
	          method = "next";
	          arg = undefined;

	          var info = record.arg;
	          if (info.done) {
	            context[delegate.resultName] = info.value;
	            context.next = delegate.nextLoc;
	          } else {
	            state = GenStateSuspendedYield;
	            return info;
	          }

	          context.delegate = null;
	        }

	        if (method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = arg;

	        } else if (method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw arg;
	          }

	          if (context.dispatchException(arg)) {
	            // If the dispatched exception was caught by a catch block,
	            // then let that catch block handle the exception normally.
	            method = "next";
	            arg = undefined;
	          }

	        } else if (method === "return") {
	          context.abrupt("return", arg);
	        }

	        state = GenStateExecuting;

	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;

	          var info = {
	            value: record.arg,
	            done: context.done
	          };

	          if (record.arg === ContinueSentinel) {
	            if (context.delegate && method === "next") {
	              // Deliberately forget the last sent value so that we don't
	              // accidentally pass it on to the delegate.
	              arg = undefined;
	            }
	          } else {
	            return info;
	          }

	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(arg) call above.
	          method = "throw";
	          arg = record.arg;
	        }
	      }
	    };
	  }

	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);

	  Gp[iteratorSymbol] = function() {
	    return this;
	  };

	  Gp[toStringTagSymbol] = "Generator";

	  Gp.toString = function() {
	    return "[object Generator]";
	  };

	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };

	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }

	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }

	    this.tryEntries.push(entry);
	  }

	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }

	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }

	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();

	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }

	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };

	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }

	      if (typeof iterable.next === "function") {
	        return iterable;
	      }

	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }

	          next.value = undefined;
	          next.done = true;

	          return next;
	        };

	        return next.next = next;
	      }
	    }

	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;

	  function doneResult() {
	    return { value: undefined, done: true };
	  }

	  Context.prototype = {
	    constructor: Context,

	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;

	      this.tryEntries.forEach(resetTryEntry);

	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },

	    stop: function() {
	      this.done = true;

	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }

	      return this.rval;
	    },

	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }

	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	        return !!caught;
	      }

	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;

	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }

	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");

	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }

	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }

	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }

	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },

	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }

	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }

	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;

	      if (finallyEntry) {
	        this.next = finallyEntry.finallyLoc;
	      } else {
	        this.complete(record);
	      }

	      return ContinueSentinel;
	    },

	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }

	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = record.arg;
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	    },

	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },

	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }

	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },

	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };

	      return ContinueSentinel;
	    }
	  };
	})(
	  // Among the various tricks for obtaining a reference to the global
	  // object, this seems to be the most reliable technique that does not
	  // use indirect eval (which violates Content Security Policy).
	  typeof global === "object" ? global :
	  typeof window === "object" ? window :
	  typeof self === "object" ? self : this
	);

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(297)))

/***/ },
/* 297 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(299);
	module.exports = __webpack_require__(11).RegExp.escape;

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/benjamingr/RexExp.escape
	var $export = __webpack_require__(10)
	  , $re     = __webpack_require__(300)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

	$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});


/***/ },
/* 300 */
/***/ function(module, exports) {

	module.exports = function(regExp, replace){
	  var replacer = replace === Object(replace) ? function(part){
	    return replace[part];
	  } : replace;
	  return function(it){
	    return String(it).replace(regExp, replacer);
	  };
	};

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 *  Copyright (c) 2014-2015, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 */

	(function (global, factory) {
	   true ? module.exports = factory() :
	  typeof define === 'function' && define.amd ? define(factory) :
	  (global.Immutable = factory());
	}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;

	  function createClass(ctor, superClass) {
	    if (superClass) {
	      ctor.prototype = Object.create(superClass.prototype);
	    }
	    ctor.prototype.constructor = ctor;
	  }

	  function Iterable(value) {
	      return isIterable(value) ? value : Seq(value);
	    }


	  createClass(KeyedIterable, Iterable);
	    function KeyedIterable(value) {
	      return isKeyed(value) ? value : KeyedSeq(value);
	    }


	  createClass(IndexedIterable, Iterable);
	    function IndexedIterable(value) {
	      return isIndexed(value) ? value : IndexedSeq(value);
	    }


	  createClass(SetIterable, Iterable);
	    function SetIterable(value) {
	      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
	    }



	  function isIterable(maybeIterable) {
	    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
	  }

	  function isKeyed(maybeKeyed) {
	    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
	  }

	  function isIndexed(maybeIndexed) {
	    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
	  }

	  function isAssociative(maybeAssociative) {
	    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
	  }

	  function isOrdered(maybeOrdered) {
	    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
	  }

	  Iterable.isIterable = isIterable;
	  Iterable.isKeyed = isKeyed;
	  Iterable.isIndexed = isIndexed;
	  Iterable.isAssociative = isAssociative;
	  Iterable.isOrdered = isOrdered;

	  Iterable.Keyed = KeyedIterable;
	  Iterable.Indexed = IndexedIterable;
	  Iterable.Set = SetIterable;


	  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  // Used for setting prototype methods that IE8 chokes on.
	  var DELETE = 'delete';

	  // Constants describing the size of trie nodes.
	  var SHIFT = 5; // Resulted in best performance after ______?
	  var SIZE = 1 << SHIFT;
	  var MASK = SIZE - 1;

	  // A consistent shared value representing "not set" which equals nothing other
	  // than itself, and nothing that could be provided externally.
	  var NOT_SET = {};

	  // Boolean references, Rough equivalent of `bool &`.
	  var CHANGE_LENGTH = { value: false };
	  var DID_ALTER = { value: false };

	  function MakeRef(ref) {
	    ref.value = false;
	    return ref;
	  }

	  function SetRef(ref) {
	    ref && (ref.value = true);
	  }

	  // A function which returns a value representing an "owner" for transient writes
	  // to tries. The return value will only ever equal itself, and will not equal
	  // the return of any subsequent call of this function.
	  function OwnerID() {}

	  // http://jsperf.com/copy-array-inline
	  function arrCopy(arr, offset) {
	    offset = offset || 0;
	    var len = Math.max(0, arr.length - offset);
	    var newArr = new Array(len);
	    for (var ii = 0; ii < len; ii++) {
	      newArr[ii] = arr[ii + offset];
	    }
	    return newArr;
	  }

	  function ensureSize(iter) {
	    if (iter.size === undefined) {
	      iter.size = iter.__iterate(returnTrue);
	    }
	    return iter.size;
	  }

	  function wrapIndex(iter, index) {
	    // This implements "is array index" which the ECMAString spec defines as:
	    //
	    //     A String property name P is an array index if and only if
	    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
	    //     to 2^32−1.
	    //
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
	    if (typeof index !== 'number') {
	      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
	      if ('' + uint32Index !== index || uint32Index === 4294967295) {
	        return NaN;
	      }
	      index = uint32Index;
	    }
	    return index < 0 ? ensureSize(iter) + index : index;
	  }

	  function returnTrue() {
	    return true;
	  }

	  function wholeSlice(begin, end, size) {
	    return (begin === 0 || (size !== undefined && begin <= -size)) &&
	      (end === undefined || (size !== undefined && end >= size));
	  }

	  function resolveBegin(begin, size) {
	    return resolveIndex(begin, size, 0);
	  }

	  function resolveEnd(end, size) {
	    return resolveIndex(end, size, size);
	  }

	  function resolveIndex(index, size, defaultIndex) {
	    return index === undefined ?
	      defaultIndex :
	      index < 0 ?
	        Math.max(0, size + index) :
	        size === undefined ?
	          index :
	          Math.min(size, index);
	  }

	  /* global Symbol */

	  var ITERATE_KEYS = 0;
	  var ITERATE_VALUES = 1;
	  var ITERATE_ENTRIES = 2;

	  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator';

	  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


	  function Iterator(next) {
	      this.next = next;
	    }

	    Iterator.prototype.toString = function() {
	      return '[Iterator]';
	    };


	  Iterator.KEYS = ITERATE_KEYS;
	  Iterator.VALUES = ITERATE_VALUES;
	  Iterator.ENTRIES = ITERATE_ENTRIES;

	  Iterator.prototype.inspect =
	  Iterator.prototype.toSource = function () { return this.toString(); }
	  Iterator.prototype[ITERATOR_SYMBOL] = function () {
	    return this;
	  };


	  function iteratorValue(type, k, v, iteratorResult) {
	    var value = type === 0 ? k : type === 1 ? v : [k, v];
	    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {
	      value: value, done: false
	    });
	    return iteratorResult;
	  }

	  function iteratorDone() {
	    return { value: undefined, done: true };
	  }

	  function hasIterator(maybeIterable) {
	    return !!getIteratorFn(maybeIterable);
	  }

	  function isIterator(maybeIterator) {
	    return maybeIterator && typeof maybeIterator.next === 'function';
	  }

	  function getIterator(iterable) {
	    var iteratorFn = getIteratorFn(iterable);
	    return iteratorFn && iteratorFn.call(iterable);
	  }

	  function getIteratorFn(iterable) {
	    var iteratorFn = iterable && (
	      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
	      iterable[FAUX_ITERATOR_SYMBOL]
	    );
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  function isArrayLike(value) {
	    return value && typeof value.length === 'number';
	  }

	  createClass(Seq, Iterable);
	    function Seq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        isIterable(value) ? value.toSeq() : seqFromValue(value);
	    }

	    Seq.of = function(/*...values*/) {
	      return Seq(arguments);
	    };

	    Seq.prototype.toSeq = function() {
	      return this;
	    };

	    Seq.prototype.toString = function() {
	      return this.__toString('Seq {', '}');
	    };

	    Seq.prototype.cacheResult = function() {
	      if (!this._cache && this.__iterateUncached) {
	        this._cache = this.entrySeq().toArray();
	        this.size = this._cache.length;
	      }
	      return this;
	    };

	    // abstract __iterateUncached(fn, reverse)

	    Seq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, true);
	    };

	    // abstract __iteratorUncached(type, reverse)

	    Seq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, true);
	    };



	  createClass(KeyedSeq, Seq);
	    function KeyedSeq(value) {
	      return value === null || value === undefined ?
	        emptySequence().toKeyedSeq() :
	        isIterable(value) ?
	          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :
	          keyedSeqFromValue(value);
	    }

	    KeyedSeq.prototype.toKeyedSeq = function() {
	      return this;
	    };



	  createClass(IndexedSeq, Seq);
	    function IndexedSeq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
	    }

	    IndexedSeq.of = function(/*...values*/) {
	      return IndexedSeq(arguments);
	    };

	    IndexedSeq.prototype.toIndexedSeq = function() {
	      return this;
	    };

	    IndexedSeq.prototype.toString = function() {
	      return this.__toString('Seq [', ']');
	    };

	    IndexedSeq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, false);
	    };

	    IndexedSeq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, false);
	    };



	  createClass(SetSeq, Seq);
	    function SetSeq(value) {
	      return (
	        value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value
	      ).toSetSeq();
	    }

	    SetSeq.of = function(/*...values*/) {
	      return SetSeq(arguments);
	    };

	    SetSeq.prototype.toSetSeq = function() {
	      return this;
	    };



	  Seq.isSeq = isSeq;
	  Seq.Keyed = KeyedSeq;
	  Seq.Set = SetSeq;
	  Seq.Indexed = IndexedSeq;

	  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

	  Seq.prototype[IS_SEQ_SENTINEL] = true;



	  createClass(ArraySeq, IndexedSeq);
	    function ArraySeq(array) {
	      this._array = array;
	      this.size = array.length;
	    }

	    ArraySeq.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
	    };

	    ArraySeq.prototype.__iterate = function(fn, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ArraySeq.prototype.__iterator = function(type, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}
	      );
	    };



	  createClass(ObjectSeq, KeyedSeq);
	    function ObjectSeq(object) {
	      var keys = Object.keys(object);
	      this._object = object;
	      this._keys = keys;
	      this.size = keys.length;
	    }

	    ObjectSeq.prototype.get = function(key, notSetValue) {
	      if (notSetValue !== undefined && !this.has(key)) {
	        return notSetValue;
	      }
	      return this._object[key];
	    };

	    ObjectSeq.prototype.has = function(key) {
	      return this._object.hasOwnProperty(key);
	    };

	    ObjectSeq.prototype.__iterate = function(fn, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        if (fn(object[key], key, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ObjectSeq.prototype.__iterator = function(type, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, key, object[key]);
	      });
	    };

	  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(IterableSeq, IndexedSeq);
	    function IterableSeq(iterable) {
	      this._iterable = iterable;
	      this.size = iterable.length || iterable.size;
	    }

	    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      var iterations = 0;
	      if (isIterator(iterator)) {
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (fn(step.value, iterations++, this) === false) {
	            break;
	          }
	        }
	      }
	      return iterations;
	    };

	    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      if (!isIterator(iterator)) {
	        return new Iterator(iteratorDone);
	      }
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step : iteratorValue(type, iterations++, step.value);
	      });
	    };



	  createClass(IteratorSeq, IndexedSeq);
	    function IteratorSeq(iterator) {
	      this._iterator = iterator;
	      this._iteratorCache = [];
	    }

	    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      while (iterations < cache.length) {
	        if (fn(cache[iterations], iterations++, this) === false) {
	          return iterations;
	        }
	      }
	      var step;
	      while (!(step = iterator.next()).done) {
	        var val = step.value;
	        cache[iterations] = val;
	        if (fn(val, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };

	    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      return new Iterator(function()  {
	        if (iterations >= cache.length) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          cache[iterations] = step.value;
	        }
	        return iteratorValue(type, iterations, cache[iterations++]);
	      });
	    };




	  // # pragma Helper functions

	  function isSeq(maybeSeq) {
	    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
	  }

	  var EMPTY_SEQ;

	  function emptySequence() {
	    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
	  }

	  function keyedSeqFromValue(value) {
	    var seq =
	      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :
	      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :
	      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :
	      typeof value === 'object' ? new ObjectSeq(value) :
	      undefined;
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of [k, v] entries, '+
	        'or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function indexedSeqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value);
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values: ' + value
	      );
	    }
	    return seq;
	  }

	  function seqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value) ||
	      (typeof value === 'object' && new ObjectSeq(value));
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values, or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function maybeIndexedSeqFromValue(value) {
	    return (
	      isArrayLike(value) ? new ArraySeq(value) :
	      isIterator(value) ? new IteratorSeq(value) :
	      hasIterator(value) ? new IterableSeq(value) :
	      undefined
	    );
	  }

	  function seqIterate(seq, fn, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    }
	    return seq.__iterateUncached(fn, reverse);
	  }

	  function seqIterator(seq, type, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
	      });
	    }
	    return seq.__iteratorUncached(type, reverse);
	  }

	  function fromJS(json, converter) {
	    return converter ?
	      fromJSWith(converter, json, '', {'': json}) :
	      fromJSDefault(json);
	  }

	  function fromJSWith(converter, json, key, parentJSON) {
	    if (Array.isArray(json)) {
	      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    if (isPlainObj(json)) {
	      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    return json;
	  }

	  function fromJSDefault(json) {
	    if (Array.isArray(json)) {
	      return IndexedSeq(json).map(fromJSDefault).toList();
	    }
	    if (isPlainObj(json)) {
	      return KeyedSeq(json).map(fromJSDefault).toMap();
	    }
	    return json;
	  }

	  function isPlainObj(value) {
	    return value && (value.constructor === Object || value.constructor === undefined);
	  }

	  /**
	   * An extension of the "same-value" algorithm as [described for use by ES6 Map
	   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
	   *
	   * NaN is considered the same as NaN, however -0 and 0 are considered the same
	   * value, which is different from the algorithm described by
	   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
	   *
	   * This is extended further to allow Objects to describe the values they
	   * represent, by way of `valueOf` or `equals` (and `hashCode`).
	   *
	   * Note: because of this extension, the key equality of Immutable.Map and the
	   * value equality of Immutable.Set will differ from ES6 Map and Set.
	   *
	   * ### Defining custom values
	   *
	   * The easiest way to describe the value an object represents is by implementing
	   * `valueOf`. For example, `Date` represents a value by returning a unix
	   * timestamp for `valueOf`:
	   *
	   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
	   *     var date2 = new Date(1234567890000);
	   *     date1.valueOf(); // 1234567890000
	   *     assert( date1 !== date2 );
	   *     assert( Immutable.is( date1, date2 ) );
	   *
	   * Note: overriding `valueOf` may have other implications if you use this object
	   * where JavaScript expects a primitive, such as implicit string coercion.
	   *
	   * For more complex types, especially collections, implementing `valueOf` may
	   * not be performant. An alternative is to implement `equals` and `hashCode`.
	   *
	   * `equals` takes another object, presumably of similar type, and returns true
	   * if the it is equal. Equality is symmetrical, so the same result should be
	   * returned if this and the argument are flipped.
	   *
	   *     assert( a.equals(b) === b.equals(a) );
	   *
	   * `hashCode` returns a 32bit integer number representing the object which will
	   * be used to determine how to store the value object in a Map or Set. You must
	   * provide both or neither methods, one must not exist without the other.
	   *
	   * Also, an important relationship between these methods must be upheld: if two
	   * values are equal, they *must* return the same hashCode. If the values are not
	   * equal, they might have the same hashCode; this is called a hash collision,
	   * and while undesirable for performance reasons, it is acceptable.
	   *
	   *     if (a.equals(b)) {
	   *       assert( a.hashCode() === b.hashCode() );
	   *     }
	   *
	   * All Immutable collections implement `equals` and `hashCode`.
	   *
	   */
	  function is(valueA, valueB) {
	    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	      return true;
	    }
	    if (!valueA || !valueB) {
	      return false;
	    }
	    if (typeof valueA.valueOf === 'function' &&
	        typeof valueB.valueOf === 'function') {
	      valueA = valueA.valueOf();
	      valueB = valueB.valueOf();
	      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	        return true;
	      }
	      if (!valueA || !valueB) {
	        return false;
	      }
	    }
	    if (typeof valueA.equals === 'function' &&
	        typeof valueB.equals === 'function' &&
	        valueA.equals(valueB)) {
	      return true;
	    }
	    return false;
	  }

	  function deepEqual(a, b) {
	    if (a === b) {
	      return true;
	    }

	    if (
	      !isIterable(b) ||
	      a.size !== undefined && b.size !== undefined && a.size !== b.size ||
	      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||
	      isKeyed(a) !== isKeyed(b) ||
	      isIndexed(a) !== isIndexed(b) ||
	      isOrdered(a) !== isOrdered(b)
	    ) {
	      return false;
	    }

	    if (a.size === 0 && b.size === 0) {
	      return true;
	    }

	    var notAssociative = !isAssociative(a);

	    if (isOrdered(a)) {
	      var entries = a.entries();
	      return b.every(function(v, k)  {
	        var entry = entries.next().value;
	        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
	      }) && entries.next().done;
	    }

	    var flipped = false;

	    if (a.size === undefined) {
	      if (b.size === undefined) {
	        if (typeof a.cacheResult === 'function') {
	          a.cacheResult();
	        }
	      } else {
	        flipped = true;
	        var _ = a;
	        a = b;
	        b = _;
	      }
	    }

	    var allEqual = true;
	    var bSize = b.__iterate(function(v, k)  {
	      if (notAssociative ? !a.has(v) :
	          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
	        allEqual = false;
	        return false;
	      }
	    });

	    return allEqual && a.size === bSize;
	  }

	  createClass(Repeat, IndexedSeq);

	    function Repeat(value, times) {
	      if (!(this instanceof Repeat)) {
	        return new Repeat(value, times);
	      }
	      this._value = value;
	      this.size = times === undefined ? Infinity : Math.max(0, times);
	      if (this.size === 0) {
	        if (EMPTY_REPEAT) {
	          return EMPTY_REPEAT;
	        }
	        EMPTY_REPEAT = this;
	      }
	    }

	    Repeat.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Repeat []';
	      }
	      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
	    };

	    Repeat.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._value : notSetValue;
	    };

	    Repeat.prototype.includes = function(searchValue) {
	      return is(this._value, searchValue);
	    };

	    Repeat.prototype.slice = function(begin, end) {
	      var size = this.size;
	      return wholeSlice(begin, end, size) ? this :
	        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
	    };

	    Repeat.prototype.reverse = function() {
	      return this;
	    };

	    Repeat.prototype.indexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return 0;
	      }
	      return -1;
	    };

	    Repeat.prototype.lastIndexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return this.size;
	      }
	      return -1;
	    };

	    Repeat.prototype.__iterate = function(fn, reverse) {
	      for (var ii = 0; ii < this.size; ii++) {
	        if (fn(this._value, ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}
	      );
	    };

	    Repeat.prototype.equals = function(other) {
	      return other instanceof Repeat ?
	        is(this._value, other._value) :
	        deepEqual(other);
	    };


	  var EMPTY_REPEAT;

	  function invariant(condition, error) {
	    if (!condition) throw new Error(error);
	  }

	  createClass(Range, IndexedSeq);

	    function Range(start, end, step) {
	      if (!(this instanceof Range)) {
	        return new Range(start, end, step);
	      }
	      invariant(step !== 0, 'Cannot step a Range by 0');
	      start = start || 0;
	      if (end === undefined) {
	        end = Infinity;
	      }
	      step = step === undefined ? 1 : Math.abs(step);
	      if (end < start) {
	        step = -step;
	      }
	      this._start = start;
	      this._end = end;
	      this._step = step;
	      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
	      if (this.size === 0) {
	        if (EMPTY_RANGE) {
	          return EMPTY_RANGE;
	        }
	        EMPTY_RANGE = this;
	      }
	    }

	    Range.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Range []';
	      }
	      return 'Range [ ' +
	        this._start + '...' + this._end +
	        (this._step !== 1 ? ' by ' + this._step : '') +
	      ' ]';
	    };

	    Range.prototype.get = function(index, notSetValue) {
	      return this.has(index) ?
	        this._start + wrapIndex(this, index) * this._step :
	        notSetValue;
	    };

	    Range.prototype.includes = function(searchValue) {
	      var possibleIndex = (searchValue - this._start) / this._step;
	      return possibleIndex >= 0 &&
	        possibleIndex < this.size &&
	        possibleIndex === Math.floor(possibleIndex);
	    };

	    Range.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      begin = resolveBegin(begin, this.size);
	      end = resolveEnd(end, this.size);
	      if (end <= begin) {
	        return new Range(0, 0);
	      }
	      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
	    };

	    Range.prototype.indexOf = function(searchValue) {
	      var offsetValue = searchValue - this._start;
	      if (offsetValue % this._step === 0) {
	        var index = offsetValue / this._step;
	        if (index >= 0 && index < this.size) {
	          return index
	        }
	      }
	      return -1;
	    };

	    Range.prototype.lastIndexOf = function(searchValue) {
	      return this.indexOf(searchValue);
	    };

	    Range.prototype.__iterate = function(fn, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(value, ii, this) === false) {
	          return ii + 1;
	        }
	        value += reverse ? -step : step;
	      }
	      return ii;
	    };

	    Range.prototype.__iterator = function(type, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      var ii = 0;
	      return new Iterator(function()  {
	        var v = value;
	        value += reverse ? -step : step;
	        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
	      });
	    };

	    Range.prototype.equals = function(other) {
	      return other instanceof Range ?
	        this._start === other._start &&
	        this._end === other._end &&
	        this._step === other._step :
	        deepEqual(this, other);
	    };


	  var EMPTY_RANGE;

	  createClass(Collection, Iterable);
	    function Collection() {
	      throw TypeError('Abstract');
	    }


	  createClass(KeyedCollection, Collection);function KeyedCollection() {}

	  createClass(IndexedCollection, Collection);function IndexedCollection() {}

	  createClass(SetCollection, Collection);function SetCollection() {}


	  Collection.Keyed = KeyedCollection;
	  Collection.Indexed = IndexedCollection;
	  Collection.Set = SetCollection;

	  var imul =
	    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?
	    Math.imul :
	    function imul(a, b) {
	      a = a | 0; // int
	      b = b | 0; // int
	      var c = a & 0xffff;
	      var d = b & 0xffff;
	      // Shift by 0 fixes the sign on the high part.
	      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int
	    };

	  // v8 has an optimization for storing 31-bit signed numbers.
	  // Values which have either 00 or 11 as the high order bits qualify.
	  // This function drops the highest order bit in a signed number, maintaining
	  // the sign bit.
	  function smi(i32) {
	    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);
	  }

	  function hash(o) {
	    if (o === false || o === null || o === undefined) {
	      return 0;
	    }
	    if (typeof o.valueOf === 'function') {
	      o = o.valueOf();
	      if (o === false || o === null || o === undefined) {
	        return 0;
	      }
	    }
	    if (o === true) {
	      return 1;
	    }
	    var type = typeof o;
	    if (type === 'number') {
	      if (o !== o || o === Infinity) {
	        return 0;
	      }
	      var h = o | 0;
	      if (h !== o) {
	        h ^= o * 0xFFFFFFFF;
	      }
	      while (o > 0xFFFFFFFF) {
	        o /= 0xFFFFFFFF;
	        h ^= o;
	      }
	      return smi(h);
	    }
	    if (type === 'string') {
	      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
	    }
	    if (typeof o.hashCode === 'function') {
	      return o.hashCode();
	    }
	    if (type === 'object') {
	      return hashJSObj(o);
	    }
	    if (typeof o.toString === 'function') {
	      return hashString(o.toString());
	    }
	    throw new Error('Value type ' + type + ' cannot be hashed.');
	  }

	  function cachedHashString(string) {
	    var hash = stringHashCache[string];
	    if (hash === undefined) {
	      hash = hashString(string);
	      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
	        STRING_HASH_CACHE_SIZE = 0;
	        stringHashCache = {};
	      }
	      STRING_HASH_CACHE_SIZE++;
	      stringHashCache[string] = hash;
	    }
	    return hash;
	  }

	  // http://jsperf.com/hashing-strings
	  function hashString(string) {
	    // This is the hash from JVM
	    // The hash code for a string is computed as
	    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
	    // where s[i] is the ith character of the string and n is the length of
	    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
	    // (exclusive) by dropping high bits.
	    var hash = 0;
	    for (var ii = 0; ii < string.length; ii++) {
	      hash = 31 * hash + string.charCodeAt(ii) | 0;
	    }
	    return smi(hash);
	  }

	  function hashJSObj(obj) {
	    var hash;
	    if (usingWeakMap) {
	      hash = weakMap.get(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = obj[UID_HASH_KEY];
	    if (hash !== undefined) {
	      return hash;
	    }

	    if (!canDefineProperty) {
	      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
	      if (hash !== undefined) {
	        return hash;
	      }

	      hash = getIENodeHash(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = ++objHashUID;
	    if (objHashUID & 0x40000000) {
	      objHashUID = 0;
	    }

	    if (usingWeakMap) {
	      weakMap.set(obj, hash);
	    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
	      throw new Error('Non-extensible objects are not allowed as keys.');
	    } else if (canDefineProperty) {
	      Object.defineProperty(obj, UID_HASH_KEY, {
	        'enumerable': false,
	        'configurable': false,
	        'writable': false,
	        'value': hash
	      });
	    } else if (obj.propertyIsEnumerable !== undefined &&
	               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
	      // Since we can't define a non-enumerable property on the object
	      // we'll hijack one of the less-used non-enumerable properties to
	      // save our hash on it. Since this is a function it will not show up in
	      // `JSON.stringify` which is what we want.
	      obj.propertyIsEnumerable = function() {
	        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
	      };
	      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
	    } else if (obj.nodeType !== undefined) {
	      // At this point we couldn't get the IE `uniqueID` to use as a hash
	      // and we couldn't use a non-enumerable property to exploit the
	      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
	      // itself.
	      obj[UID_HASH_KEY] = hash;
	    } else {
	      throw new Error('Unable to set a non-enumerable property on object.');
	    }

	    return hash;
	  }

	  // Get references to ES5 object methods.
	  var isExtensible = Object.isExtensible;

	  // True if Object.defineProperty works as expected. IE8 fails this test.
	  var canDefineProperty = (function() {
	    try {
	      Object.defineProperty({}, '@', {});
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }());

	  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
	  // and avoid memory leaks from the IE cloneNode bug.
	  function getIENodeHash(node) {
	    if (node && node.nodeType > 0) {
	      switch (node.nodeType) {
	        case 1: // Element
	          return node.uniqueID;
	        case 9: // Document
	          return node.documentElement && node.documentElement.uniqueID;
	      }
	    }
	  }

	  // If possible, use a WeakMap.
	  var usingWeakMap = typeof WeakMap === 'function';
	  var weakMap;
	  if (usingWeakMap) {
	    weakMap = new WeakMap();
	  }

	  var objHashUID = 0;

	  var UID_HASH_KEY = '__immutablehash__';
	  if (typeof Symbol === 'function') {
	    UID_HASH_KEY = Symbol(UID_HASH_KEY);
	  }

	  var STRING_HASH_CACHE_MIN_STRLEN = 16;
	  var STRING_HASH_CACHE_MAX_SIZE = 255;
	  var STRING_HASH_CACHE_SIZE = 0;
	  var stringHashCache = {};

	  function assertNotInfinite(size) {
	    invariant(
	      size !== Infinity,
	      'Cannot perform this action with an infinite size.'
	    );
	  }

	  createClass(Map, KeyedCollection);

	    // @pragma Construction

	    function Map(value) {
	      return value === null || value === undefined ? emptyMap() :
	        isMap(value) && !isOrdered(value) ? value :
	        emptyMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);
	      return emptyMap().withMutations(function(map ) {
	        for (var i = 0; i < keyValues.length; i += 2) {
	          if (i + 1 >= keyValues.length) {
	            throw new Error('Missing value for key: ' + keyValues[i]);
	          }
	          map.set(keyValues[i], keyValues[i + 1]);
	        }
	      });
	    };

	    Map.prototype.toString = function() {
	      return this.__toString('Map {', '}');
	    };

	    // @pragma Access

	    Map.prototype.get = function(k, notSetValue) {
	      return this._root ?
	        this._root.get(0, undefined, k, notSetValue) :
	        notSetValue;
	    };

	    // @pragma Modification

	    Map.prototype.set = function(k, v) {
	      return updateMap(this, k, v);
	    };

	    Map.prototype.setIn = function(keyPath, v) {
	      return this.updateIn(keyPath, NOT_SET, function()  {return v});
	    };

	    Map.prototype.remove = function(k) {
	      return updateMap(this, k, NOT_SET);
	    };

	    Map.prototype.deleteIn = function(keyPath) {
	      return this.updateIn(keyPath, function()  {return NOT_SET});
	    };

	    Map.prototype.update = function(k, notSetValue, updater) {
	      return arguments.length === 1 ?
	        k(this) :
	        this.updateIn([k], notSetValue, updater);
	    };

	    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {
	      if (!updater) {
	        updater = notSetValue;
	        notSetValue = undefined;
	      }
	      var updatedValue = updateInDeepMap(
	        this,
	        forceIterator(keyPath),
	        notSetValue,
	        updater
	      );
	      return updatedValue === NOT_SET ? undefined : updatedValue;
	    };

	    Map.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._root = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyMap();
	    };

	    // @pragma Composition

	    Map.prototype.merge = function(/*...iters*/) {
	      return mergeIntoMapWith(this, undefined, arguments);
	    };

	    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, merger, iters);
	    };

	    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.merge === 'function' ?
	          m.merge.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoMapWith(this, deepMerger, arguments);
	    };

	    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
	    };

	    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.mergeDeep === 'function' ?
	          m.mergeDeep.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator));
	    };

	    Map.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator, mapper));
	    };

	    // @pragma Mutability

	    Map.prototype.withMutations = function(fn) {
	      var mutable = this.asMutable();
	      fn(mutable);
	      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
	    };

	    Map.prototype.asMutable = function() {
	      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
	    };

	    Map.prototype.asImmutable = function() {
	      return this.__ensureOwner();
	    };

	    Map.prototype.wasAltered = function() {
	      return this.__altered;
	    };

	    Map.prototype.__iterator = function(type, reverse) {
	      return new MapIterator(this, type, reverse);
	    };

	    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      this._root && this._root.iterate(function(entry ) {
	        iterations++;
	        return fn(entry[1], entry[0], this$0);
	      }, reverse);
	      return iterations;
	    };

	    Map.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeMap(this.size, this._root, ownerID, this.__hash);
	    };


	  function isMap(maybeMap) {
	    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
	  }

	  Map.isMap = isMap;

	  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

	  var MapPrototype = Map.prototype;
	  MapPrototype[IS_MAP_SENTINEL] = true;
	  MapPrototype[DELETE] = MapPrototype.remove;
	  MapPrototype.removeIn = MapPrototype.deleteIn;


	  // #pragma Trie Nodes



	    function ArrayMapNode(ownerID, entries) {
	      this.ownerID = ownerID;
	      this.entries = entries;
	    }

	    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && entries.length === 1) {
	        return; // undefined
	      }

	      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
	        return createNodes(ownerID, entries, key, value);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new ArrayMapNode(ownerID, newEntries);
	    };




	    function BitmapIndexedNode(ownerID, bitmap, nodes) {
	      this.ownerID = ownerID;
	      this.bitmap = bitmap;
	      this.nodes = nodes;
	    }

	    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));
	      var bitmap = this.bitmap;
	      return (bitmap & bit) === 0 ? notSetValue :
	        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);
	    };

	    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var bit = 1 << keyHashFrag;
	      var bitmap = this.bitmap;
	      var exists = (bitmap & bit) !== 0;

	      if (!exists && value === NOT_SET) {
	        return this;
	      }

	      var idx = popCount(bitmap & (bit - 1));
	      var nodes = this.nodes;
	      var node = exists ? nodes[idx] : undefined;
	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

	      if (newNode === node) {
	        return this;
	      }

	      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
	        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
	      }

	      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
	        return nodes[idx ^ 1];
	      }

	      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
	        return newNode;
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
	      var newNodes = exists ? newNode ?
	        setIn(nodes, idx, newNode, isEditable) :
	        spliceOut(nodes, idx, isEditable) :
	        spliceIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.bitmap = newBitmap;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
	    };




	    function HashArrayMapNode(ownerID, count, nodes) {
	      this.ownerID = ownerID;
	      this.count = count;
	      this.nodes = nodes;
	    }

	    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var node = this.nodes[idx];
	      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
	    };

	    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var removed = value === NOT_SET;
	      var nodes = this.nodes;
	      var node = nodes[idx];

	      if (removed && !node) {
	        return this;
	      }

	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
	      if (newNode === node) {
	        return this;
	      }

	      var newCount = this.count;
	      if (!node) {
	        newCount++;
	      } else if (!newNode) {
	        newCount--;
	        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
	          return packNodes(ownerID, nodes, newCount, idx);
	        }
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newNodes = setIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.count = newCount;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new HashArrayMapNode(ownerID, newCount, newNodes);
	    };




	    function HashCollisionNode(ownerID, keyHash, entries) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entries = entries;
	    }

	    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }

	      var removed = value === NOT_SET;

	      if (keyHash !== this.keyHash) {
	        if (removed) {
	          return this;
	        }
	        SetRef(didAlter);
	        SetRef(didChangeSize);
	        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
	      }

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && len === 2) {
	        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
	    };




	    function ValueNode(ownerID, keyHash, entry) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entry = entry;
	    }

	    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
	    };

	    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;
	      var keyMatch = is(key, this.entry[0]);
	      if (keyMatch ? value === this.entry[1] : removed) {
	        return this;
	      }

	      SetRef(didAlter);

	      if (removed) {
	        SetRef(didChangeSize);
	        return; // undefined
	      }

	      if (keyMatch) {
	        if (ownerID && ownerID === this.ownerID) {
	          this.entry[1] = value;
	          return this;
	        }
	        return new ValueNode(ownerID, this.keyHash, [key, value]);
	      }

	      SetRef(didChangeSize);
	      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
	    };



	  // #pragma Iterators

	  ArrayMapNode.prototype.iterate =
	  HashCollisionNode.prototype.iterate = function (fn, reverse) {
	    var entries = this.entries;
	    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
	      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
	        return false;
	      }
	    }
	  }

	  BitmapIndexedNode.prototype.iterate =
	  HashArrayMapNode.prototype.iterate = function (fn, reverse) {
	    var nodes = this.nodes;
	    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
	      var node = nodes[reverse ? maxIndex - ii : ii];
	      if (node && node.iterate(fn, reverse) === false) {
	        return false;
	      }
	    }
	  }

	  ValueNode.prototype.iterate = function (fn, reverse) {
	    return fn(this.entry);
	  }

	  createClass(MapIterator, Iterator);

	    function MapIterator(map, type, reverse) {
	      this._type = type;
	      this._reverse = reverse;
	      this._stack = map._root && mapIteratorFrame(map._root);
	    }

	    MapIterator.prototype.next = function() {
	      var type = this._type;
	      var stack = this._stack;
	      while (stack) {
	        var node = stack.node;
	        var index = stack.index++;
	        var maxIndex;
	        if (node.entry) {
	          if (index === 0) {
	            return mapIteratorValue(type, node.entry);
	          }
	        } else if (node.entries) {
	          maxIndex = node.entries.length - 1;
	          if (index <= maxIndex) {
	            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
	          }
	        } else {
	          maxIndex = node.nodes.length - 1;
	          if (index <= maxIndex) {
	            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
	            if (subNode) {
	              if (subNode.entry) {
	                return mapIteratorValue(type, subNode.entry);
	              }
	              stack = this._stack = mapIteratorFrame(subNode, stack);
	            }
	            continue;
	          }
	        }
	        stack = this._stack = this._stack.__prev;
	      }
	      return iteratorDone();
	    };


	  function mapIteratorValue(type, entry) {
	    return iteratorValue(type, entry[0], entry[1]);
	  }

	  function mapIteratorFrame(node, prev) {
	    return {
	      node: node,
	      index: 0,
	      __prev: prev
	    };
	  }

	  function makeMap(size, root, ownerID, hash) {
	    var map = Object.create(MapPrototype);
	    map.size = size;
	    map._root = root;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_MAP;
	  function emptyMap() {
	    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
	  }

	  function updateMap(map, k, v) {
	    var newRoot;
	    var newSize;
	    if (!map._root) {
	      if (v === NOT_SET) {
	        return map;
	      }
	      newSize = 1;
	      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
	    } else {
	      var didChangeSize = MakeRef(CHANGE_LENGTH);
	      var didAlter = MakeRef(DID_ALTER);
	      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
	      if (!didAlter.value) {
	        return map;
	      }
	      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
	    }
	    if (map.__ownerID) {
	      map.size = newSize;
	      map._root = newRoot;
	      map.__hash = undefined;
	      map.__altered = true;
	      return map;
	    }
	    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
	  }

	  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	    if (!node) {
	      if (value === NOT_SET) {
	        return node;
	      }
	      SetRef(didAlter);
	      SetRef(didChangeSize);
	      return new ValueNode(ownerID, keyHash, [key, value]);
	    }
	    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
	  }

	  function isLeafNode(node) {
	    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
	  }

	  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
	    if (node.keyHash === keyHash) {
	      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
	    }

	    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
	    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

	    var newNode;
	    var nodes = idx1 === idx2 ?
	      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :
	      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);

	    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
	  }

	  function createNodes(ownerID, entries, key, value) {
	    if (!ownerID) {
	      ownerID = new OwnerID();
	    }
	    var node = new ValueNode(ownerID, hash(key), [key, value]);
	    for (var ii = 0; ii < entries.length; ii++) {
	      var entry = entries[ii];
	      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
	    }
	    return node;
	  }

	  function packNodes(ownerID, nodes, count, excluding) {
	    var bitmap = 0;
	    var packedII = 0;
	    var packedNodes = new Array(count);
	    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
	      var node = nodes[ii];
	      if (node !== undefined && ii !== excluding) {
	        bitmap |= bit;
	        packedNodes[packedII++] = node;
	      }
	    }
	    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
	  }

	  function expandNodes(ownerID, nodes, bitmap, including, node) {
	    var count = 0;
	    var expandedNodes = new Array(SIZE);
	    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
	      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
	    }
	    expandedNodes[including] = node;
	    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
	  }

	  function mergeIntoMapWith(map, merger, iterables) {
	    var iters = [];
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = KeyedIterable(value);
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    return mergeIntoCollectionWith(map, merger, iters);
	  }

	  function deepMerger(existing, value, key) {
	    return existing && existing.mergeDeep && isIterable(value) ?
	      existing.mergeDeep(value) :
	      is(existing, value) ? existing : value;
	  }

	  function deepMergerWith(merger) {
	    return function(existing, value, key)  {
	      if (existing && existing.mergeDeepWith && isIterable(value)) {
	        return existing.mergeDeepWith(merger, value);
	      }
	      var nextValue = merger(existing, value, key);
	      return is(existing, nextValue) ? existing : nextValue;
	    };
	  }

	  function mergeIntoCollectionWith(collection, merger, iters) {
	    iters = iters.filter(function(x ) {return x.size !== 0});
	    if (iters.length === 0) {
	      return collection;
	    }
	    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
	      return collection.constructor(iters[0]);
	    }
	    return collection.withMutations(function(collection ) {
	      var mergeIntoMap = merger ?
	        function(value, key)  {
	          collection.update(key, NOT_SET, function(existing )
	            {return existing === NOT_SET ? value : merger(existing, value, key)}
	          );
	        } :
	        function(value, key)  {
	          collection.set(key, value);
	        }
	      for (var ii = 0; ii < iters.length; ii++) {
	        iters[ii].forEach(mergeIntoMap);
	      }
	    });
	  }

	  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
	    var isNotSet = existing === NOT_SET;
	    var step = keyPathIter.next();
	    if (step.done) {
	      var existingValue = isNotSet ? notSetValue : existing;
	      var newValue = updater(existingValue);
	      return newValue === existingValue ? existing : newValue;
	    }
	    invariant(
	      isNotSet || (existing && existing.set),
	      'invalid keyPath'
	    );
	    var key = step.value;
	    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
	    var nextUpdated = updateInDeepMap(
	      nextExisting,
	      keyPathIter,
	      notSetValue,
	      updater
	    );
	    return nextUpdated === nextExisting ? existing :
	      nextUpdated === NOT_SET ? existing.remove(key) :
	      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
	  }

	  function popCount(x) {
	    x = x - ((x >> 1) & 0x55555555);
	    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
	    x = (x + (x >> 4)) & 0x0f0f0f0f;
	    x = x + (x >> 8);
	    x = x + (x >> 16);
	    return x & 0x7f;
	  }

	  function setIn(array, idx, val, canEdit) {
	    var newArray = canEdit ? array : arrCopy(array);
	    newArray[idx] = val;
	    return newArray;
	  }

	  function spliceIn(array, idx, val, canEdit) {
	    var newLen = array.length + 1;
	    if (canEdit && idx + 1 === newLen) {
	      array[idx] = val;
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        newArray[ii] = val;
	        after = -1;
	      } else {
	        newArray[ii] = array[ii + after];
	      }
	    }
	    return newArray;
	  }

	  function spliceOut(array, idx, canEdit) {
	    var newLen = array.length - 1;
	    if (canEdit && idx === newLen) {
	      array.pop();
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        after = 1;
	      }
	      newArray[ii] = array[ii + after];
	    }
	    return newArray;
	  }

	  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
	  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
	  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

	  createClass(List, IndexedCollection);

	    // @pragma Construction

	    function List(value) {
	      var empty = emptyList();
	      if (value === null || value === undefined) {
	        return empty;
	      }
	      if (isList(value)) {
	        return value;
	      }
	      var iter = IndexedIterable(value);
	      var size = iter.size;
	      if (size === 0) {
	        return empty;
	      }
	      assertNotInfinite(size);
	      if (size > 0 && size < SIZE) {
	        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
	      }
	      return empty.withMutations(function(list ) {
	        list.setSize(size);
	        iter.forEach(function(v, i)  {return list.set(i, v)});
	      });
	    }

	    List.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    List.prototype.toString = function() {
	      return this.__toString('List [', ']');
	    };

	    // @pragma Access

	    List.prototype.get = function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      if (index >= 0 && index < this.size) {
	        index += this._origin;
	        var node = listNodeFor(this, index);
	        return node && node.array[index & MASK];
	      }
	      return notSetValue;
	    };

	    // @pragma Modification

	    List.prototype.set = function(index, value) {
	      return updateList(this, index, value);
	    };

	    List.prototype.remove = function(index) {
	      return !this.has(index) ? this :
	        index === 0 ? this.shift() :
	        index === this.size - 1 ? this.pop() :
	        this.splice(index, 1);
	    };

	    List.prototype.insert = function(index, value) {
	      return this.splice(index, 0, value);
	    };

	    List.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = this._origin = this._capacity = 0;
	        this._level = SHIFT;
	        this._root = this._tail = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyList();
	    };

	    List.prototype.push = function(/*...values*/) {
	      var values = arguments;
	      var oldSize = this.size;
	      return this.withMutations(function(list ) {
	        setListBounds(list, 0, oldSize + values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(oldSize + ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.pop = function() {
	      return setListBounds(this, 0, -1);
	    };

	    List.prototype.unshift = function(/*...values*/) {
	      var values = arguments;
	      return this.withMutations(function(list ) {
	        setListBounds(list, -values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.shift = function() {
	      return setListBounds(this, 1);
	    };

	    // @pragma Composition

	    List.prototype.merge = function(/*...iters*/) {
	      return mergeIntoListWith(this, undefined, arguments);
	    };

	    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, merger, iters);
	    };

	    List.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoListWith(this, deepMerger, arguments);
	    };

	    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, deepMergerWith(merger), iters);
	    };

	    List.prototype.setSize = function(size) {
	      return setListBounds(this, 0, size);
	    };

	    // @pragma Iteration

	    List.prototype.slice = function(begin, end) {
	      var size = this.size;
	      if (wholeSlice(begin, end, size)) {
	        return this;
	      }
	      return setListBounds(
	        this,
	        resolveBegin(begin, size),
	        resolveEnd(end, size)
	      );
	    };

	    List.prototype.__iterator = function(type, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      return new Iterator(function()  {
	        var value = values();
	        return value === DONE ?
	          iteratorDone() :
	          iteratorValue(type, index++, value);
	      });
	    };

	    List.prototype.__iterate = function(fn, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      var value;
	      while ((value = values()) !== DONE) {
	        if (fn(value, index++, this) === false) {
	          break;
	        }
	      }
	      return index;
	    };

	    List.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        return this;
	      }
	      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
	    };


	  function isList(maybeList) {
	    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
	  }

	  List.isList = isList;

	  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

	  var ListPrototype = List.prototype;
	  ListPrototype[IS_LIST_SENTINEL] = true;
	  ListPrototype[DELETE] = ListPrototype.remove;
	  ListPrototype.setIn = MapPrototype.setIn;
	  ListPrototype.deleteIn =
	  ListPrototype.removeIn = MapPrototype.removeIn;
	  ListPrototype.update = MapPrototype.update;
	  ListPrototype.updateIn = MapPrototype.updateIn;
	  ListPrototype.mergeIn = MapPrototype.mergeIn;
	  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  ListPrototype.withMutations = MapPrototype.withMutations;
	  ListPrototype.asMutable = MapPrototype.asMutable;
	  ListPrototype.asImmutable = MapPrototype.asImmutable;
	  ListPrototype.wasAltered = MapPrototype.wasAltered;



	    function VNode(array, ownerID) {
	      this.array = array;
	      this.ownerID = ownerID;
	    }

	    // TODO: seems like these methods are very similar

	    VNode.prototype.removeBefore = function(ownerID, level, index) {
	      if (index === level ? 1 << level : 0 || this.array.length === 0) {
	        return this;
	      }
	      var originIndex = (index >>> level) & MASK;
	      if (originIndex >= this.array.length) {
	        return new VNode([], ownerID);
	      }
	      var removingFirst = originIndex === 0;
	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[originIndex];
	        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && removingFirst) {
	          return this;
	        }
	      }
	      if (removingFirst && !newChild) {
	        return this;
	      }
	      var editable = editableVNode(this, ownerID);
	      if (!removingFirst) {
	        for (var ii = 0; ii < originIndex; ii++) {
	          editable.array[ii] = undefined;
	        }
	      }
	      if (newChild) {
	        editable.array[originIndex] = newChild;
	      }
	      return editable;
	    };

	    VNode.prototype.removeAfter = function(ownerID, level, index) {
	      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
	        return this;
	      }
	      var sizeIndex = ((index - 1) >>> level) & MASK;
	      if (sizeIndex >= this.array.length) {
	        return this;
	      }

	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[sizeIndex];
	        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
	          return this;
	        }
	      }

	      var editable = editableVNode(this, ownerID);
	      editable.array.splice(sizeIndex + 1);
	      if (newChild) {
	        editable.array[sizeIndex] = newChild;
	      }
	      return editable;
	    };



	  var DONE = {};

	  function iterateList(list, reverse) {
	    var left = list._origin;
	    var right = list._capacity;
	    var tailPos = getTailOffset(right);
	    var tail = list._tail;

	    return iterateNodeOrLeaf(list._root, list._level, 0);

	    function iterateNodeOrLeaf(node, level, offset) {
	      return level === 0 ?
	        iterateLeaf(node, offset) :
	        iterateNode(node, level, offset);
	    }

	    function iterateLeaf(node, offset) {
	      var array = offset === tailPos ? tail && tail.array : node && node.array;
	      var from = offset > left ? 0 : left - offset;
	      var to = right - offset;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        if (from === to) {
	          return DONE;
	        }
	        var idx = reverse ? --to : from++;
	        return array && array[idx];
	      };
	    }

	    function iterateNode(node, level, offset) {
	      var values;
	      var array = node && node.array;
	      var from = offset > left ? 0 : (left - offset) >> level;
	      var to = ((right - offset) >> level) + 1;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        do {
	          if (values) {
	            var value = values();
	            if (value !== DONE) {
	              return value;
	            }
	            values = null;
	          }
	          if (from === to) {
	            return DONE;
	          }
	          var idx = reverse ? --to : from++;
	          values = iterateNodeOrLeaf(
	            array && array[idx], level - SHIFT, offset + (idx << level)
	          );
	        } while (true);
	      };
	    }
	  }

	  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
	    var list = Object.create(ListPrototype);
	    list.size = capacity - origin;
	    list._origin = origin;
	    list._capacity = capacity;
	    list._level = level;
	    list._root = root;
	    list._tail = tail;
	    list.__ownerID = ownerID;
	    list.__hash = hash;
	    list.__altered = false;
	    return list;
	  }

	  var EMPTY_LIST;
	  function emptyList() {
	    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
	  }

	  function updateList(list, index, value) {
	    index = wrapIndex(list, index);

	    if (index !== index) {
	      return list;
	    }

	    if (index >= list.size || index < 0) {
	      return list.withMutations(function(list ) {
	        index < 0 ?
	          setListBounds(list, index).set(0, value) :
	          setListBounds(list, 0, index + 1).set(index, value)
	      });
	    }

	    index += list._origin;

	    var newTail = list._tail;
	    var newRoot = list._root;
	    var didAlter = MakeRef(DID_ALTER);
	    if (index >= getTailOffset(list._capacity)) {
	      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
	    } else {
	      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
	    }

	    if (!didAlter.value) {
	      return list;
	    }

	    if (list.__ownerID) {
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
	  }

	  function updateVNode(node, ownerID, level, index, value, didAlter) {
	    var idx = (index >>> level) & MASK;
	    var nodeHas = node && idx < node.array.length;
	    if (!nodeHas && value === undefined) {
	      return node;
	    }

	    var newNode;

	    if (level > 0) {
	      var lowerNode = node && node.array[idx];
	      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
	      if (newLowerNode === lowerNode) {
	        return node;
	      }
	      newNode = editableVNode(node, ownerID);
	      newNode.array[idx] = newLowerNode;
	      return newNode;
	    }

	    if (nodeHas && node.array[idx] === value) {
	      return node;
	    }

	    SetRef(didAlter);

	    newNode = editableVNode(node, ownerID);
	    if (value === undefined && idx === newNode.array.length - 1) {
	      newNode.array.pop();
	    } else {
	      newNode.array[idx] = value;
	    }
	    return newNode;
	  }

	  function editableVNode(node, ownerID) {
	    if (ownerID && node && ownerID === node.ownerID) {
	      return node;
	    }
	    return new VNode(node ? node.array.slice() : [], ownerID);
	  }

	  function listNodeFor(list, rawIndex) {
	    if (rawIndex >= getTailOffset(list._capacity)) {
	      return list._tail;
	    }
	    if (rawIndex < 1 << (list._level + SHIFT)) {
	      var node = list._root;
	      var level = list._level;
	      while (node && level > 0) {
	        node = node.array[(rawIndex >>> level) & MASK];
	        level -= SHIFT;
	      }
	      return node;
	    }
	  }

	  function setListBounds(list, begin, end) {
	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      end = end | 0;
	    }
	    var owner = list.__ownerID || new OwnerID();
	    var oldOrigin = list._origin;
	    var oldCapacity = list._capacity;
	    var newOrigin = oldOrigin + begin;
	    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
	    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
	      return list;
	    }

	    // If it's going to end after it starts, it's empty.
	    if (newOrigin >= newCapacity) {
	      return list.clear();
	    }

	    var newLevel = list._level;
	    var newRoot = list._root;

	    // New origin might need creating a higher root.
	    var offsetShift = 0;
	    while (newOrigin + offsetShift < 0) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
	      newLevel += SHIFT;
	      offsetShift += 1 << newLevel;
	    }
	    if (offsetShift) {
	      newOrigin += offsetShift;
	      oldOrigin += offsetShift;
	      newCapacity += offsetShift;
	      oldCapacity += offsetShift;
	    }

	    var oldTailOffset = getTailOffset(oldCapacity);
	    var newTailOffset = getTailOffset(newCapacity);

	    // New size might need creating a higher root.
	    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
	      newLevel += SHIFT;
	    }

	    // Locate or create the new tail.
	    var oldTail = list._tail;
	    var newTail = newTailOffset < oldTailOffset ?
	      listNodeFor(list, newCapacity - 1) :
	      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

	    // Merge Tail into tree.
	    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
	      newRoot = editableVNode(newRoot, owner);
	      var node = newRoot;
	      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
	        var idx = (oldTailOffset >>> level) & MASK;
	        node = node.array[idx] = editableVNode(node.array[idx], owner);
	      }
	      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
	    }

	    // If the size has been reduced, there's a chance the tail needs to be trimmed.
	    if (newCapacity < oldCapacity) {
	      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
	    }

	    // If the new origin is within the tail, then we do not need a root.
	    if (newOrigin >= newTailOffset) {
	      newOrigin -= newTailOffset;
	      newCapacity -= newTailOffset;
	      newLevel = SHIFT;
	      newRoot = null;
	      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

	    // Otherwise, if the root has been trimmed, garbage collect.
	    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
	      offsetShift = 0;

	      // Identify the new top root node of the subtree of the old root.
	      while (newRoot) {
	        var beginIndex = (newOrigin >>> newLevel) & MASK;
	        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {
	          break;
	        }
	        if (beginIndex) {
	          offsetShift += (1 << newLevel) * beginIndex;
	        }
	        newLevel -= SHIFT;
	        newRoot = newRoot.array[beginIndex];
	      }

	      // Trim the new sides of the new root.
	      if (newRoot && newOrigin > oldOrigin) {
	        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
	      }
	      if (newRoot && newTailOffset < oldTailOffset) {
	        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
	      }
	      if (offsetShift) {
	        newOrigin -= offsetShift;
	        newCapacity -= offsetShift;
	      }
	    }

	    if (list.__ownerID) {
	      list.size = newCapacity - newOrigin;
	      list._origin = newOrigin;
	      list._capacity = newCapacity;
	      list._level = newLevel;
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
	  }

	  function mergeIntoListWith(list, merger, iterables) {
	    var iters = [];
	    var maxSize = 0;
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = IndexedIterable(value);
	      if (iter.size > maxSize) {
	        maxSize = iter.size;
	      }
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    if (maxSize > list.size) {
	      list = list.setSize(maxSize);
	    }
	    return mergeIntoCollectionWith(list, merger, iters);
	  }

	  function getTailOffset(size) {
	    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);
	  }

	  createClass(OrderedMap, Map);

	    // @pragma Construction

	    function OrderedMap(value) {
	      return value === null || value === undefined ? emptyOrderedMap() :
	        isOrderedMap(value) ? value :
	        emptyOrderedMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    OrderedMap.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedMap.prototype.toString = function() {
	      return this.__toString('OrderedMap {', '}');
	    };

	    // @pragma Access

	    OrderedMap.prototype.get = function(k, notSetValue) {
	      var index = this._map.get(k);
	      return index !== undefined ? this._list.get(index)[1] : notSetValue;
	    };

	    // @pragma Modification

	    OrderedMap.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._map.clear();
	        this._list.clear();
	        return this;
	      }
	      return emptyOrderedMap();
	    };

	    OrderedMap.prototype.set = function(k, v) {
	      return updateOrderedMap(this, k, v);
	    };

	    OrderedMap.prototype.remove = function(k) {
	      return updateOrderedMap(this, k, NOT_SET);
	    };

	    OrderedMap.prototype.wasAltered = function() {
	      return this._map.wasAltered() || this._list.wasAltered();
	    };

	    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._list.__iterate(
	        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},
	        reverse
	      );
	    };

	    OrderedMap.prototype.__iterator = function(type, reverse) {
	      return this._list.fromEntrySeq().__iterator(type, reverse);
	    };

	    OrderedMap.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      var newList = this._list.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        this._list = newList;
	        return this;
	      }
	      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
	    };


	  function isOrderedMap(maybeOrderedMap) {
	    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
	  }

	  OrderedMap.isOrderedMap = isOrderedMap;

	  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
	  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



	  function makeOrderedMap(map, list, ownerID, hash) {
	    var omap = Object.create(OrderedMap.prototype);
	    omap.size = map ? map.size : 0;
	    omap._map = map;
	    omap._list = list;
	    omap.__ownerID = ownerID;
	    omap.__hash = hash;
	    return omap;
	  }

	  var EMPTY_ORDERED_MAP;
	  function emptyOrderedMap() {
	    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
	  }

	  function updateOrderedMap(omap, k, v) {
	    var map = omap._map;
	    var list = omap._list;
	    var i = map.get(k);
	    var has = i !== undefined;
	    var newMap;
	    var newList;
	    if (v === NOT_SET) { // removed
	      if (!has) {
	        return omap;
	      }
	      if (list.size >= SIZE && list.size >= map.size * 2) {
	        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});
	        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();
	        if (omap.__ownerID) {
	          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
	        }
	      } else {
	        newMap = map.remove(k);
	        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
	      }
	    } else {
	      if (has) {
	        if (v === list.get(i)[1]) {
	          return omap;
	        }
	        newMap = map;
	        newList = list.set(i, [k, v]);
	      } else {
	        newMap = map.set(k, list.size);
	        newList = list.set(list.size, [k, v]);
	      }
	    }
	    if (omap.__ownerID) {
	      omap.size = newMap.size;
	      omap._map = newMap;
	      omap._list = newList;
	      omap.__hash = undefined;
	      return omap;
	    }
	    return makeOrderedMap(newMap, newList);
	  }

	  createClass(ToKeyedSequence, KeyedSeq);
	    function ToKeyedSequence(indexed, useKeys) {
	      this._iter = indexed;
	      this._useKeys = useKeys;
	      this.size = indexed.size;
	    }

	    ToKeyedSequence.prototype.get = function(key, notSetValue) {
	      return this._iter.get(key, notSetValue);
	    };

	    ToKeyedSequence.prototype.has = function(key) {
	      return this._iter.has(key);
	    };

	    ToKeyedSequence.prototype.valueSeq = function() {
	      return this._iter.valueSeq();
	    };

	    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;
	      var reversedSequence = reverseFactory(this, true);
	      if (!this._useKeys) {
	        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};
	      }
	      return reversedSequence;
	    };

	    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;
	      var mappedSequence = mapFactory(this, mapper, context);
	      if (!this._useKeys) {
	        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};
	      }
	      return mappedSequence;
	    };

	    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var ii;
	      return this._iter.__iterate(
	        this._useKeys ?
	          function(v, k)  {return fn(v, k, this$0)} :
	          ((ii = reverse ? resolveSize(this) : 0),
	            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),
	        reverse
	      );
	    };

	    ToKeyedSequence.prototype.__iterator = function(type, reverse) {
	      if (this._useKeys) {
	        return this._iter.__iterator(type, reverse);
	      }
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var ii = reverse ? resolveSize(this) : 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, reverse ? --ii : ii++, step.value, step);
	      });
	    };

	  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(ToIndexedSequence, IndexedSeq);
	    function ToIndexedSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToIndexedSequence.prototype.includes = function(value) {
	      return this._iter.includes(value);
	    };

	    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);
	    };

	    ToIndexedSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, iterations++, step.value, step)
	      });
	    };



	  createClass(ToSetSequence, SetSeq);
	    function ToSetSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToSetSequence.prototype.has = function(key) {
	      return this._iter.includes(key);
	    };

	    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);
	    };

	    ToSetSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, step.value, step.value, step);
	      });
	    };



	  createClass(FromEntriesSequence, KeyedSeq);
	    function FromEntriesSequence(entries) {
	      this._iter = entries;
	      this.size = entries.size;
	    }

	    FromEntriesSequence.prototype.entrySeq = function() {
	      return this._iter.toSeq();
	    };

	    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(entry ) {
	        // Check if entry exists first so array access doesn't throw for holes
	        // in the parent iteration.
	        if (entry) {
	          validateEntry(entry);
	          var indexedIterable = isIterable(entry);
	          return fn(
	            indexedIterable ? entry.get(1) : entry[1],
	            indexedIterable ? entry.get(0) : entry[0],
	            this$0
	          );
	        }
	      }, reverse);
	    };

	    FromEntriesSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          // Check if entry exists first so array access doesn't throw for holes
	          // in the parent iteration.
	          if (entry) {
	            validateEntry(entry);
	            var indexedIterable = isIterable(entry);
	            return iteratorValue(
	              type,
	              indexedIterable ? entry.get(0) : entry[0],
	              indexedIterable ? entry.get(1) : entry[1],
	              step
	            );
	          }
	        }
	      });
	    };


	  ToIndexedSequence.prototype.cacheResult =
	  ToKeyedSequence.prototype.cacheResult =
	  ToSetSequence.prototype.cacheResult =
	  FromEntriesSequence.prototype.cacheResult =
	    cacheResultThrough;


	  function flipFactory(iterable) {
	    var flipSequence = makeSequence(iterable);
	    flipSequence._iter = iterable;
	    flipSequence.size = iterable.size;
	    flipSequence.flip = function()  {return iterable};
	    flipSequence.reverse = function () {
	      var reversedSequence = iterable.reverse.apply(this); // super.reverse()
	      reversedSequence.flip = function()  {return iterable.reverse()};
	      return reversedSequence;
	    };
	    flipSequence.has = function(key ) {return iterable.includes(key)};
	    flipSequence.includes = function(key ) {return iterable.has(key)};
	    flipSequence.cacheResult = cacheResultThrough;
	    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);
	    }
	    flipSequence.__iteratorUncached = function(type, reverse) {
	      if (type === ITERATE_ENTRIES) {
	        var iterator = iterable.__iterator(type, reverse);
	        return new Iterator(function()  {
	          var step = iterator.next();
	          if (!step.done) {
	            var k = step.value[0];
	            step.value[0] = step.value[1];
	            step.value[1] = k;
	          }
	          return step;
	        });
	      }
	      return iterable.__iterator(
	        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
	        reverse
	      );
	    }
	    return flipSequence;
	  }


	  function mapFactory(iterable, mapper, context) {
	    var mappedSequence = makeSequence(iterable);
	    mappedSequence.size = iterable.size;
	    mappedSequence.has = function(key ) {return iterable.has(key)};
	    mappedSequence.get = function(key, notSetValue)  {
	      var v = iterable.get(key, NOT_SET);
	      return v === NOT_SET ?
	        notSetValue :
	        mapper.call(context, v, key, iterable);
	    };
	    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(
	        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},
	        reverse
	      );
	    }
	    mappedSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var key = entry[0];
	        return iteratorValue(
	          type,
	          key,
	          mapper.call(context, entry[1], key, iterable),
	          step
	        );
	      });
	    }
	    return mappedSequence;
	  }


	  function reverseFactory(iterable, useKeys) {
	    var reversedSequence = makeSequence(iterable);
	    reversedSequence._iter = iterable;
	    reversedSequence.size = iterable.size;
	    reversedSequence.reverse = function()  {return iterable};
	    if (iterable.flip) {
	      reversedSequence.flip = function () {
	        var flipSequence = flipFactory(iterable);
	        flipSequence.reverse = function()  {return iterable.flip()};
	        return flipSequence;
	      };
	    }
	    reversedSequence.get = function(key, notSetValue) 
	      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};
	    reversedSequence.has = function(key )
	      {return iterable.has(useKeys ? key : -1 - key)};
	    reversedSequence.includes = function(value ) {return iterable.includes(value)};
	    reversedSequence.cacheResult = cacheResultThrough;
	    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);
	    };
	    reversedSequence.__iterator =
	      function(type, reverse)  {return iterable.__iterator(type, !reverse)};
	    return reversedSequence;
	  }


	  function filterFactory(iterable, predicate, context, useKeys) {
	    var filterSequence = makeSequence(iterable);
	    if (useKeys) {
	      filterSequence.has = function(key ) {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
	      };
	      filterSequence.get = function(key, notSetValue)  {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?
	          v : notSetValue;
	      };
	    }
	    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      }, reverse);
	      return iterations;
	    };
	    filterSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          var key = entry[0];
	          var value = entry[1];
	          if (predicate.call(context, value, key, iterable)) {
	            return iteratorValue(type, useKeys ? key : iterations++, value, step);
	          }
	        }
	      });
	    }
	    return filterSequence;
	  }


	  function countByFactory(iterable, grouper, context) {
	    var groups = Map().asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        0,
	        function(a ) {return a + 1}
	      );
	    });
	    return groups.asImmutable();
	  }


	  function groupByFactory(iterable, grouper, context) {
	    var isKeyedIter = isKeyed(iterable);
	    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}
	      );
	    });
	    var coerce = iterableClass(iterable);
	    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});
	  }


	  function sliceFactory(iterable, begin, end, useKeys) {
	    var originalSize = iterable.size;

	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      if (end === Infinity) {
	        end = originalSize;
	      } else {
	        end = end | 0;
	      }
	    }

	    if (wholeSlice(begin, end, originalSize)) {
	      return iterable;
	    }

	    var resolvedBegin = resolveBegin(begin, originalSize);
	    var resolvedEnd = resolveEnd(end, originalSize);

	    // begin or end will be NaN if they were provided as negative numbers and
	    // this iterable's size is unknown. In that case, cache first so there is
	    // a known size and these do not resolve to NaN.
	    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
	      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
	    }

	    // Note: resolvedEnd is undefined when the original sequence's length is
	    // unknown and this slice did not supply an end and should contain all
	    // elements after resolvedBegin.
	    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
	    var resolvedSize = resolvedEnd - resolvedBegin;
	    var sliceSize;
	    if (resolvedSize === resolvedSize) {
	      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
	    }

	    var sliceSeq = makeSequence(iterable);

	    // If iterable.size is undefined, the size of the realized sliceSeq is
	    // unknown at this point unless the number of items to slice is 0
	    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

	    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
	      sliceSeq.get = function (index, notSetValue) {
	        index = wrapIndex(this, index);
	        return index >= 0 && index < sliceSize ?
	          iterable.get(index + resolvedBegin, notSetValue) :
	          notSetValue;
	      }
	    }

	    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (sliceSize === 0) {
	        return 0;
	      }
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var skipped = 0;
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k)  {
	        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&
	                 iterations !== sliceSize;
	        }
	      });
	      return iterations;
	    };

	    sliceSeq.__iteratorUncached = function(type, reverse) {
	      if (sliceSize !== 0 && reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      // Don't bother instantiating parent iterator if taking 0.
	      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
	      var skipped = 0;
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (skipped++ < resolvedBegin) {
	          iterator.next();
	        }
	        if (++iterations > sliceSize) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (useKeys || type === ITERATE_VALUES) {
	          return step;
	        } else if (type === ITERATE_KEYS) {
	          return iteratorValue(type, iterations - 1, undefined, step);
	        } else {
	          return iteratorValue(type, iterations - 1, step.value[1], step);
	        }
	      });
	    }

	    return sliceSeq;
	  }


	  function takeWhileFactory(iterable, predicate, context) {
	    var takeSequence = makeSequence(iterable);
	    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c) 
	        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}
	      );
	      return iterations;
	    };
	    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterating = true;
	      return new Iterator(function()  {
	        if (!iterating) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var k = entry[0];
	        var v = entry[1];
	        if (!predicate.call(context, v, k, this$0)) {
	          iterating = false;
	          return iteratorDone();
	        }
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return takeSequence;
	  }


	  function skipWhileFactory(iterable, predicate, context, useKeys) {
	    var skipSequence = makeSequence(iterable);
	    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      });
	      return iterations;
	    };
	    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var skipping = true;
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step, k, v;
	        do {
	          step = iterator.next();
	          if (step.done) {
	            if (useKeys || type === ITERATE_VALUES) {
	              return step;
	            } else if (type === ITERATE_KEYS) {
	              return iteratorValue(type, iterations++, undefined, step);
	            } else {
	              return iteratorValue(type, iterations++, step.value[1], step);
	            }
	          }
	          var entry = step.value;
	          k = entry[0];
	          v = entry[1];
	          skipping && (skipping = predicate.call(context, v, k, this$0));
	        } while (skipping);
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return skipSequence;
	  }


	  function concatFactory(iterable, values) {
	    var isKeyedIterable = isKeyed(iterable);
	    var iters = [iterable].concat(values).map(function(v ) {
	      if (!isIterable(v)) {
	        v = isKeyedIterable ?
	          keyedSeqFromValue(v) :
	          indexedSeqFromValue(Array.isArray(v) ? v : [v]);
	      } else if (isKeyedIterable) {
	        v = KeyedIterable(v);
	      }
	      return v;
	    }).filter(function(v ) {return v.size !== 0});

	    if (iters.length === 0) {
	      return iterable;
	    }

	    if (iters.length === 1) {
	      var singleton = iters[0];
	      if (singleton === iterable ||
	          isKeyedIterable && isKeyed(singleton) ||
	          isIndexed(iterable) && isIndexed(singleton)) {
	        return singleton;
	      }
	    }

	    var concatSeq = new ArraySeq(iters);
	    if (isKeyedIterable) {
	      concatSeq = concatSeq.toKeyedSeq();
	    } else if (!isIndexed(iterable)) {
	      concatSeq = concatSeq.toSetSeq();
	    }
	    concatSeq = concatSeq.flatten(true);
	    concatSeq.size = iters.reduce(
	      function(sum, seq)  {
	        if (sum !== undefined) {
	          var size = seq.size;
	          if (size !== undefined) {
	            return sum + size;
	          }
	        }
	      },
	      0
	    );
	    return concatSeq;
	  }


	  function flattenFactory(iterable, depth, useKeys) {
	    var flatSequence = makeSequence(iterable);
	    flatSequence.__iterateUncached = function(fn, reverse) {
	      var iterations = 0;
	      var stopped = false;
	      function flatDeep(iter, currentDepth) {var this$0 = this;
	        iter.__iterate(function(v, k)  {
	          if ((!depth || currentDepth < depth) && isIterable(v)) {
	            flatDeep(v, currentDepth + 1);
	          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
	            stopped = true;
	          }
	          return !stopped;
	        }, reverse);
	      }
	      flatDeep(iterable, 0);
	      return iterations;
	    }
	    flatSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(type, reverse);
	      var stack = [];
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (iterator) {
	          var step = iterator.next();
	          if (step.done !== false) {
	            iterator = stack.pop();
	            continue;
	          }
	          var v = step.value;
	          if (type === ITERATE_ENTRIES) {
	            v = v[1];
	          }
	          if ((!depth || stack.length < depth) && isIterable(v)) {
	            stack.push(iterator);
	            iterator = v.__iterator(type, reverse);
	          } else {
	            return useKeys ? step : iteratorValue(type, iterations++, v, step);
	          }
	        }
	        return iteratorDone();
	      });
	    }
	    return flatSequence;
	  }


	  function flatMapFactory(iterable, mapper, context) {
	    var coerce = iterableClass(iterable);
	    return iterable.toSeq().map(
	      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}
	    ).flatten(true);
	  }


	  function interposeFactory(iterable, separator) {
	    var interposedSequence = makeSequence(iterable);
	    interposedSequence.size = iterable.size && iterable.size * 2 -1;
	    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k) 
	        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&
	        fn(v, iterations++, this$0) !== false},
	        reverse
	      );
	      return iterations;
	    };
	    interposedSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      var step;
	      return new Iterator(function()  {
	        if (!step || iterations % 2) {
	          step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	        }
	        return iterations % 2 ?
	          iteratorValue(type, iterations++, separator) :
	          iteratorValue(type, iterations++, step.value, step);
	      });
	    };
	    return interposedSequence;
	  }


	  function sortFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    var isKeyedIterable = isKeyed(iterable);
	    var index = 0;
	    var entries = iterable.toSeq().map(
	      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}
	    ).toArray();
	    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(
	      isKeyedIterable ?
	      function(v, i)  { entries[i].length = 2; } :
	      function(v, i)  { entries[i] = v[1]; }
	    );
	    return isKeyedIterable ? KeyedSeq(entries) :
	      isIndexed(iterable) ? IndexedSeq(entries) :
	      SetSeq(entries);
	  }


	  function maxFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    if (mapper) {
	      var entry = iterable.toSeq()
	        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})
	        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});
	      return entry && entry[0];
	    } else {
	      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});
	    }
	  }

	  function maxCompare(comparator, a, b) {
	    var comp = comparator(b, a);
	    // b is considered the new max if the comparator declares them equal, but
	    // they are not equal and b is in fact a nullish value.
	    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
	  }


	  function zipWithFactory(keyIter, zipper, iters) {
	    var zipSequence = makeSequence(keyIter);
	    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();
	    // Note: this a generic base implementation of __iterate in terms of
	    // __iterator which may be more generically useful in the future.
	    zipSequence.__iterate = function(fn, reverse) {
	      /* generic:
	      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        iterations++;
	        if (fn(step.value[1], step.value[0], this) === false) {
	          break;
	        }
	      }
	      return iterations;
	      */
	      // indexed:
	      var iterator = this.__iterator(ITERATE_VALUES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        if (fn(step.value, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };
	    zipSequence.__iteratorUncached = function(type, reverse) {
	      var iterators = iters.map(function(i )
	        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}
	      );
	      var iterations = 0;
	      var isDone = false;
	      return new Iterator(function()  {
	        var steps;
	        if (!isDone) {
	          steps = iterators.map(function(i ) {return i.next()});
	          isDone = steps.some(function(s ) {return s.done});
	        }
	        if (isDone) {
	          return iteratorDone();
	        }
	        return iteratorValue(
	          type,
	          iterations++,
	          zipper.apply(null, steps.map(function(s ) {return s.value}))
	        );
	      });
	    };
	    return zipSequence
	  }


	  // #pragma Helper Functions

	  function reify(iter, seq) {
	    return isSeq(iter) ? seq : iter.constructor(seq);
	  }

	  function validateEntry(entry) {
	    if (entry !== Object(entry)) {
	      throw new TypeError('Expected [K, V] tuple: ' + entry);
	    }
	  }

	  function resolveSize(iter) {
	    assertNotInfinite(iter.size);
	    return ensureSize(iter);
	  }

	  function iterableClass(iterable) {
	    return isKeyed(iterable) ? KeyedIterable :
	      isIndexed(iterable) ? IndexedIterable :
	      SetIterable;
	  }

	  function makeSequence(iterable) {
	    return Object.create(
	      (
	        isKeyed(iterable) ? KeyedSeq :
	        isIndexed(iterable) ? IndexedSeq :
	        SetSeq
	      ).prototype
	    );
	  }

	  function cacheResultThrough() {
	    if (this._iter.cacheResult) {
	      this._iter.cacheResult();
	      this.size = this._iter.size;
	      return this;
	    } else {
	      return Seq.prototype.cacheResult.call(this);
	    }
	  }

	  function defaultComparator(a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	  }

	  function forceIterator(keyPath) {
	    var iter = getIterator(keyPath);
	    if (!iter) {
	      // Array might not be iterable in this environment, so we need a fallback
	      // to our wrapped type.
	      if (!isArrayLike(keyPath)) {
	        throw new TypeError('Expected iterable or array-like: ' + keyPath);
	      }
	      iter = getIterator(Iterable(keyPath));
	    }
	    return iter;
	  }

	  createClass(Record, KeyedCollection);

	    function Record(defaultValues, name) {
	      var hasInitialized;

	      var RecordType = function Record(values) {
	        if (values instanceof RecordType) {
	          return values;
	        }
	        if (!(this instanceof RecordType)) {
	          return new RecordType(values);
	        }
	        if (!hasInitialized) {
	          hasInitialized = true;
	          var keys = Object.keys(defaultValues);
	          setProps(RecordTypePrototype, keys);
	          RecordTypePrototype.size = keys.length;
	          RecordTypePrototype._name = name;
	          RecordTypePrototype._keys = keys;
	          RecordTypePrototype._defaultValues = defaultValues;
	        }
	        this._map = Map(values);
	      };

	      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
	      RecordTypePrototype.constructor = RecordType;

	      return RecordType;
	    }

	    Record.prototype.toString = function() {
	      return this.__toString(recordName(this) + ' {', '}');
	    };

	    // @pragma Access

	    Record.prototype.has = function(k) {
	      return this._defaultValues.hasOwnProperty(k);
	    };

	    Record.prototype.get = function(k, notSetValue) {
	      if (!this.has(k)) {
	        return notSetValue;
	      }
	      var defaultVal = this._defaultValues[k];
	      return this._map ? this._map.get(k, defaultVal) : defaultVal;
	    };

	    // @pragma Modification

	    Record.prototype.clear = function() {
	      if (this.__ownerID) {
	        this._map && this._map.clear();
	        return this;
	      }
	      var RecordType = this.constructor;
	      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
	    };

	    Record.prototype.set = function(k, v) {
	      if (!this.has(k)) {
	        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
	      }
	      if (this._map && !this._map.has(k)) {
	        var defaultVal = this._defaultValues[k];
	        if (v === defaultVal) {
	          return this;
	        }
	      }
	      var newMap = this._map && this._map.set(k, v);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.remove = function(k) {
	      if (!this.has(k)) {
	        return this;
	      }
	      var newMap = this._map && this._map.remove(k);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);
	    };

	    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);
	    };

	    Record.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map && this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return makeRecord(this, newMap, ownerID);
	    };


	  var RecordPrototype = Record.prototype;
	  RecordPrototype[DELETE] = RecordPrototype.remove;
	  RecordPrototype.deleteIn =
	  RecordPrototype.removeIn = MapPrototype.removeIn;
	  RecordPrototype.merge = MapPrototype.merge;
	  RecordPrototype.mergeWith = MapPrototype.mergeWith;
	  RecordPrototype.mergeIn = MapPrototype.mergeIn;
	  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
	  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
	  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  RecordPrototype.setIn = MapPrototype.setIn;
	  RecordPrototype.update = MapPrototype.update;
	  RecordPrototype.updateIn = MapPrototype.updateIn;
	  RecordPrototype.withMutations = MapPrototype.withMutations;
	  RecordPrototype.asMutable = MapPrototype.asMutable;
	  RecordPrototype.asImmutable = MapPrototype.asImmutable;


	  function makeRecord(likeRecord, map, ownerID) {
	    var record = Object.create(Object.getPrototypeOf(likeRecord));
	    record._map = map;
	    record.__ownerID = ownerID;
	    return record;
	  }

	  function recordName(record) {
	    return record._name || record.constructor.name || 'Record';
	  }

	  function setProps(prototype, names) {
	    try {
	      names.forEach(setProp.bind(undefined, prototype));
	    } catch (error) {
	      // Object.defineProperty failed. Probably IE8.
	    }
	  }

	  function setProp(prototype, name) {
	    Object.defineProperty(prototype, name, {
	      get: function() {
	        return this.get(name);
	      },
	      set: function(value) {
	        invariant(this.__ownerID, 'Cannot set on an immutable record.');
	        this.set(name, value);
	      }
	    });
	  }

	  createClass(Set, SetCollection);

	    // @pragma Construction

	    function Set(value) {
	      return value === null || value === undefined ? emptySet() :
	        isSet(value) && !isOrdered(value) ? value :
	        emptySet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    Set.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Set.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    Set.prototype.toString = function() {
	      return this.__toString('Set {', '}');
	    };

	    // @pragma Access

	    Set.prototype.has = function(value) {
	      return this._map.has(value);
	    };

	    // @pragma Modification

	    Set.prototype.add = function(value) {
	      return updateSet(this, this._map.set(value, true));
	    };

	    Set.prototype.remove = function(value) {
	      return updateSet(this, this._map.remove(value));
	    };

	    Set.prototype.clear = function() {
	      return updateSet(this, this._map.clear());
	    };

	    // @pragma Composition

	    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);
	      iters = iters.filter(function(x ) {return x.size !== 0});
	      if (iters.length === 0) {
	        return this;
	      }
	      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
	        return this.constructor(iters[0]);
	      }
	      return this.withMutations(function(set ) {
	        for (var ii = 0; ii < iters.length; ii++) {
	          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});
	        }
	      });
	    };

	    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (!iters.every(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (iters.some(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.merge = function() {
	      return this.union.apply(this, arguments);
	    };

	    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return this.union.apply(this, iters);
	    };

	    Set.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator));
	    };

	    Set.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator, mapper));
	    };

	    Set.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);
	    };

	    Set.prototype.__iterator = function(type, reverse) {
	      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);
	    };

	    Set.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return this.__make(newMap, ownerID);
	    };


	  function isSet(maybeSet) {
	    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
	  }

	  Set.isSet = isSet;

	  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

	  var SetPrototype = Set.prototype;
	  SetPrototype[IS_SET_SENTINEL] = true;
	  SetPrototype[DELETE] = SetPrototype.remove;
	  SetPrototype.mergeDeep = SetPrototype.merge;
	  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
	  SetPrototype.withMutations = MapPrototype.withMutations;
	  SetPrototype.asMutable = MapPrototype.asMutable;
	  SetPrototype.asImmutable = MapPrototype.asImmutable;

	  SetPrototype.__empty = emptySet;
	  SetPrototype.__make = makeSet;

	  function updateSet(set, newMap) {
	    if (set.__ownerID) {
	      set.size = newMap.size;
	      set._map = newMap;
	      return set;
	    }
	    return newMap === set._map ? set :
	      newMap.size === 0 ? set.__empty() :
	      set.__make(newMap);
	  }

	  function makeSet(map, ownerID) {
	    var set = Object.create(SetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_SET;
	  function emptySet() {
	    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
	  }

	  createClass(OrderedSet, Set);

	    // @pragma Construction

	    function OrderedSet(value) {
	      return value === null || value === undefined ? emptyOrderedSet() :
	        isOrderedSet(value) ? value :
	        emptyOrderedSet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    OrderedSet.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedSet.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    OrderedSet.prototype.toString = function() {
	      return this.__toString('OrderedSet {', '}');
	    };


	  function isOrderedSet(maybeOrderedSet) {
	    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
	  }

	  OrderedSet.isOrderedSet = isOrderedSet;

	  var OrderedSetPrototype = OrderedSet.prototype;
	  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

	  OrderedSetPrototype.__empty = emptyOrderedSet;
	  OrderedSetPrototype.__make = makeOrderedSet;

	  function makeOrderedSet(map, ownerID) {
	    var set = Object.create(OrderedSetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_ORDERED_SET;
	  function emptyOrderedSet() {
	    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
	  }

	  createClass(Stack, IndexedCollection);

	    // @pragma Construction

	    function Stack(value) {
	      return value === null || value === undefined ? emptyStack() :
	        isStack(value) ? value :
	        emptyStack().unshiftAll(value);
	    }

	    Stack.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Stack.prototype.toString = function() {
	      return this.__toString('Stack [', ']');
	    };

	    // @pragma Access

	    Stack.prototype.get = function(index, notSetValue) {
	      var head = this._head;
	      index = wrapIndex(this, index);
	      while (head && index--) {
	        head = head.next;
	      }
	      return head ? head.value : notSetValue;
	    };

	    Stack.prototype.peek = function() {
	      return this._head && this._head.value;
	    };

	    // @pragma Modification

	    Stack.prototype.push = function(/*...values*/) {
	      if (arguments.length === 0) {
	        return this;
	      }
	      var newSize = this.size + arguments.length;
	      var head = this._head;
	      for (var ii = arguments.length - 1; ii >= 0; ii--) {
	        head = {
	          value: arguments[ii],
	          next: head
	        };
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pushAll = function(iter) {
	      iter = IndexedIterable(iter);
	      if (iter.size === 0) {
	        return this;
	      }
	      assertNotInfinite(iter.size);
	      var newSize = this.size;
	      var head = this._head;
	      iter.reverse().forEach(function(value ) {
	        newSize++;
	        head = {
	          value: value,
	          next: head
	        };
	      });
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pop = function() {
	      return this.slice(1);
	    };

	    Stack.prototype.unshift = function(/*...values*/) {
	      return this.push.apply(this, arguments);
	    };

	    Stack.prototype.unshiftAll = function(iter) {
	      return this.pushAll(iter);
	    };

	    Stack.prototype.shift = function() {
	      return this.pop.apply(this, arguments);
	    };

	    Stack.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._head = undefined;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyStack();
	    };

	    Stack.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      var resolvedBegin = resolveBegin(begin, this.size);
	      var resolvedEnd = resolveEnd(end, this.size);
	      if (resolvedEnd !== this.size) {
	        // super.slice(begin, end);
	        return IndexedCollection.prototype.slice.call(this, begin, end);
	      }
	      var newSize = this.size - resolvedBegin;
	      var head = this._head;
	      while (resolvedBegin--) {
	        head = head.next;
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    // @pragma Mutability

	    Stack.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeStack(this.size, this._head, ownerID, this.__hash);
	    };

	    // @pragma Iteration

	    Stack.prototype.__iterate = function(fn, reverse) {
	      if (reverse) {
	        return this.reverse().__iterate(fn);
	      }
	      var iterations = 0;
	      var node = this._head;
	      while (node) {
	        if (fn(node.value, iterations++, this) === false) {
	          break;
	        }
	        node = node.next;
	      }
	      return iterations;
	    };

	    Stack.prototype.__iterator = function(type, reverse) {
	      if (reverse) {
	        return this.reverse().__iterator(type);
	      }
	      var iterations = 0;
	      var node = this._head;
	      return new Iterator(function()  {
	        if (node) {
	          var value = node.value;
	          node = node.next;
	          return iteratorValue(type, iterations++, value);
	        }
	        return iteratorDone();
	      });
	    };


	  function isStack(maybeStack) {
	    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
	  }

	  Stack.isStack = isStack;

	  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

	  var StackPrototype = Stack.prototype;
	  StackPrototype[IS_STACK_SENTINEL] = true;
	  StackPrototype.withMutations = MapPrototype.withMutations;
	  StackPrototype.asMutable = MapPrototype.asMutable;
	  StackPrototype.asImmutable = MapPrototype.asImmutable;
	  StackPrototype.wasAltered = MapPrototype.wasAltered;


	  function makeStack(size, head, ownerID, hash) {
	    var map = Object.create(StackPrototype);
	    map.size = size;
	    map._head = head;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_STACK;
	  function emptyStack() {
	    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
	  }

	  /**
	   * Contributes additional methods to a constructor
	   */
	  function mixin(ctor, methods) {
	    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };
	    Object.keys(methods).forEach(keyCopier);
	    Object.getOwnPropertySymbols &&
	      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
	    return ctor;
	  }

	  Iterable.Iterator = Iterator;

	  mixin(Iterable, {

	    // ### Conversion to other types

	    toArray: function() {
	      assertNotInfinite(this.size);
	      var array = new Array(this.size || 0);
	      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });
	      return array;
	    },

	    toIndexedSeq: function() {
	      return new ToIndexedSequence(this);
	    },

	    toJS: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}
	      ).__toJS();
	    },

	    toJSON: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}
	      ).__toJS();
	    },

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, true);
	    },

	    toMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Map(this.toKeyedSeq());
	    },

	    toObject: function() {
	      assertNotInfinite(this.size);
	      var object = {};
	      this.__iterate(function(v, k)  { object[k] = v; });
	      return object;
	    },

	    toOrderedMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedMap(this.toKeyedSeq());
	    },

	    toOrderedSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Set(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSetSeq: function() {
	      return new ToSetSequence(this);
	    },

	    toSeq: function() {
	      return isIndexed(this) ? this.toIndexedSeq() :
	        isKeyed(this) ? this.toKeyedSeq() :
	        this.toSetSeq();
	    },

	    toStack: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Stack(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toList: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return List(isKeyed(this) ? this.valueSeq() : this);
	    },


	    // ### Common JavaScript methods and properties

	    toString: function() {
	      return '[Iterable]';
	    },

	    __toString: function(head, tail) {
	      if (this.size === 0) {
	        return head + tail;
	      }
	      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    concat: function() {var values = SLICE$0.call(arguments, 0);
	      return reify(this, concatFactory(this, values));
	    },

	    includes: function(searchValue) {
	      return this.some(function(value ) {return is(value, searchValue)});
	    },

	    entries: function() {
	      return this.__iterator(ITERATE_ENTRIES);
	    },

	    every: function(predicate, context) {
	      assertNotInfinite(this.size);
	      var returnValue = true;
	      this.__iterate(function(v, k, c)  {
	        if (!predicate.call(context, v, k, c)) {
	          returnValue = false;
	          return false;
	        }
	      });
	      return returnValue;
	    },

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, true));
	    },

	    find: function(predicate, context, notSetValue) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[1] : notSetValue;
	    },

	    forEach: function(sideEffect, context) {
	      assertNotInfinite(this.size);
	      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
	    },

	    join: function(separator) {
	      assertNotInfinite(this.size);
	      separator = separator !== undefined ? '' + separator : ',';
	      var joined = '';
	      var isFirst = true;
	      this.__iterate(function(v ) {
	        isFirst ? (isFirst = false) : (joined += separator);
	        joined += v !== null && v !== undefined ? v.toString() : '';
	      });
	      return joined;
	    },

	    keys: function() {
	      return this.__iterator(ITERATE_KEYS);
	    },

	    map: function(mapper, context) {
	      return reify(this, mapFactory(this, mapper, context));
	    },

	    reduce: function(reducer, initialReduction, context) {
	      assertNotInfinite(this.size);
	      var reduction;
	      var useFirst;
	      if (arguments.length < 2) {
	        useFirst = true;
	      } else {
	        reduction = initialReduction;
	      }
	      this.__iterate(function(v, k, c)  {
	        if (useFirst) {
	          useFirst = false;
	          reduction = v;
	        } else {
	          reduction = reducer.call(context, reduction, v, k, c);
	        }
	      });
	      return reduction;
	    },

	    reduceRight: function(reducer, initialReduction, context) {
	      var reversed = this.toKeyedSeq().reverse();
	      return reversed.reduce.apply(reversed, arguments);
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, true));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, true));
	    },

	    some: function(predicate, context) {
	      return !this.every(not(predicate), context);
	    },

	    sort: function(comparator) {
	      return reify(this, sortFactory(this, comparator));
	    },

	    values: function() {
	      return this.__iterator(ITERATE_VALUES);
	    },


	    // ### More sequential methods

	    butLast: function() {
	      return this.slice(0, -1);
	    },

	    isEmpty: function() {
	      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});
	    },

	    count: function(predicate, context) {
	      return ensureSize(
	        predicate ? this.toSeq().filter(predicate, context) : this
	      );
	    },

	    countBy: function(grouper, context) {
	      return countByFactory(this, grouper, context);
	    },

	    equals: function(other) {
	      return deepEqual(this, other);
	    },

	    entrySeq: function() {
	      var iterable = this;
	      if (iterable._cache) {
	        // We cache as an entries array, so we can just return the cache!
	        return new ArraySeq(iterable._cache);
	      }
	      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
	      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};
	      return entriesSequence;
	    },

	    filterNot: function(predicate, context) {
	      return this.filter(not(predicate), context);
	    },

	    findEntry: function(predicate, context, notSetValue) {
	      var found = notSetValue;
	      this.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          found = [k, v];
	          return false;
	        }
	      });
	      return found;
	    },

	    findKey: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry && entry[0];
	    },

	    findLast: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
	    },

	    findLastEntry: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
	    },

	    findLastKey: function(predicate, context) {
	      return this.toKeyedSeq().reverse().findKey(predicate, context);
	    },

	    first: function() {
	      return this.find(returnTrue);
	    },

	    flatMap: function(mapper, context) {
	      return reify(this, flatMapFactory(this, mapper, context));
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, true));
	    },

	    fromEntrySeq: function() {
	      return new FromEntriesSequence(this);
	    },

	    get: function(searchKey, notSetValue) {
	      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);
	    },

	    getIn: function(searchKeyPath, notSetValue) {
	      var nested = this;
	      // Note: in an ES6 environment, we would prefer:
	      // for (var key of searchKeyPath) {
	      var iter = forceIterator(searchKeyPath);
	      var step;
	      while (!(step = iter.next()).done) {
	        var key = step.value;
	        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
	        if (nested === NOT_SET) {
	          return notSetValue;
	        }
	      }
	      return nested;
	    },

	    groupBy: function(grouper, context) {
	      return groupByFactory(this, grouper, context);
	    },

	    has: function(searchKey) {
	      return this.get(searchKey, NOT_SET) !== NOT_SET;
	    },

	    hasIn: function(searchKeyPath) {
	      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
	    },

	    isSubset: function(iter) {
	      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
	      return this.every(function(value ) {return iter.includes(value)});
	    },

	    isSuperset: function(iter) {
	      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
	      return iter.isSubset(this);
	    },

	    keyOf: function(searchValue) {
	      return this.findKey(function(value ) {return is(value, searchValue)});
	    },

	    keySeq: function() {
	      return this.toSeq().map(keyMapper).toIndexedSeq();
	    },

	    last: function() {
	      return this.toSeq().reverse().first();
	    },

	    lastKeyOf: function(searchValue) {
	      return this.toKeyedSeq().reverse().keyOf(searchValue);
	    },

	    max: function(comparator) {
	      return maxFactory(this, comparator);
	    },

	    maxBy: function(mapper, comparator) {
	      return maxFactory(this, comparator, mapper);
	    },

	    min: function(comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
	    },

	    minBy: function(mapper, comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
	    },

	    rest: function() {
	      return this.slice(1);
	    },

	    skip: function(amount) {
	      return this.slice(Math.max(0, amount));
	    },

	    skipLast: function(amount) {
	      return reify(this, this.toSeq().reverse().skip(amount).reverse());
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, true));
	    },

	    skipUntil: function(predicate, context) {
	      return this.skipWhile(not(predicate), context);
	    },

	    sortBy: function(mapper, comparator) {
	      return reify(this, sortFactory(this, comparator, mapper));
	    },

	    take: function(amount) {
	      return this.slice(0, Math.max(0, amount));
	    },

	    takeLast: function(amount) {
	      return reify(this, this.toSeq().reverse().take(amount).reverse());
	    },

	    takeWhile: function(predicate, context) {
	      return reify(this, takeWhileFactory(this, predicate, context));
	    },

	    takeUntil: function(predicate, context) {
	      return this.takeWhile(not(predicate), context);
	    },

	    valueSeq: function() {
	      return this.toIndexedSeq();
	    },


	    // ### Hashable Object

	    hashCode: function() {
	      return this.__hash || (this.__hash = hashIterable(this));
	    }


	    // ### Internal

	    // abstract __iterate(fn, reverse)

	    // abstract __iterator(type, reverse)
	  });

	  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  var IterablePrototype = Iterable.prototype;
	  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
	  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
	  IterablePrototype.__toJS = IterablePrototype.toArray;
	  IterablePrototype.__toStringMapper = quoteString;
	  IterablePrototype.inspect =
	  IterablePrototype.toSource = function() { return this.toString(); };
	  IterablePrototype.chain = IterablePrototype.flatMap;
	  IterablePrototype.contains = IterablePrototype.includes;

	  mixin(KeyedIterable, {

	    // ### More sequential methods

	    flip: function() {
	      return reify(this, flipFactory(this));
	    },

	    mapEntries: function(mapper, context) {var this$0 = this;
	      var iterations = 0;
	      return reify(this,
	        this.toSeq().map(
	          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}
	        ).fromEntrySeq()
	      );
	    },

	    mapKeys: function(mapper, context) {var this$0 = this;
	      return reify(this,
	        this.toSeq().flip().map(
	          function(k, v)  {return mapper.call(context, k, v, this$0)}
	        ).flip()
	      );
	    }

	  });

	  var KeyedIterablePrototype = KeyedIterable.prototype;
	  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
	  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
	  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
	  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};



	  mixin(IndexedIterable, {

	    // ### Conversion to other types

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, false);
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, false));
	    },

	    findIndex: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    indexOf: function(searchValue) {
	      var key = this.keyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    lastIndexOf: function(searchValue) {
	      var key = this.lastKeyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, false));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, false));
	    },

	    splice: function(index, removeNum /*, ...values*/) {
	      var numArgs = arguments.length;
	      removeNum = Math.max(removeNum | 0, 0);
	      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
	        return this;
	      }
	      // If index is negative, it should resolve relative to the size of the
	      // collection. However size may be expensive to compute if not cached, so
	      // only call count() if the number is in fact negative.
	      index = resolveBegin(index, index < 0 ? this.count() : this.size);
	      var spliced = this.slice(0, index);
	      return reify(
	        this,
	        numArgs === 1 ?
	          spliced :
	          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
	      );
	    },


	    // ### More collection methods

	    findLastIndex: function(predicate, context) {
	      var entry = this.findLastEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    first: function() {
	      return this.get(0);
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, false));
	    },

	    get: function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      return (index < 0 || (this.size === Infinity ||
	          (this.size !== undefined && index > this.size))) ?
	        notSetValue :
	        this.find(function(_, key)  {return key === index}, undefined, notSetValue);
	    },

	    has: function(index) {
	      index = wrapIndex(this, index);
	      return index >= 0 && (this.size !== undefined ?
	        this.size === Infinity || index < this.size :
	        this.indexOf(index) !== -1
	      );
	    },

	    interpose: function(separator) {
	      return reify(this, interposeFactory(this, separator));
	    },

	    interleave: function(/*...iterables*/) {
	      var iterables = [this].concat(arrCopy(arguments));
	      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
	      var interleaved = zipped.flatten(true);
	      if (zipped.size) {
	        interleaved.size = zipped.size * iterables.length;
	      }
	      return reify(this, interleaved);
	    },

	    keySeq: function() {
	      return Range(0, this.size);
	    },

	    last: function() {
	      return this.get(-1);
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, false));
	    },

	    zip: function(/*, ...iterables */) {
	      var iterables = [this].concat(arrCopy(arguments));
	      return reify(this, zipWithFactory(this, defaultZipper, iterables));
	    },

	    zipWith: function(zipper/*, ...iterables */) {
	      var iterables = arrCopy(arguments);
	      iterables[0] = this;
	      return reify(this, zipWithFactory(this, zipper, iterables));
	    }

	  });

	  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
	  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



	  mixin(SetIterable, {

	    // ### ES6 Collection methods (ES6 Array and Map)

	    get: function(value, notSetValue) {
	      return this.has(value) ? value : notSetValue;
	    },

	    includes: function(value) {
	      return this.has(value);
	    },


	    // ### More sequential methods

	    keySeq: function() {
	      return this.valueSeq();
	    }

	  });

	  SetIterable.prototype.has = IterablePrototype.includes;
	  SetIterable.prototype.contains = SetIterable.prototype.includes;


	  // Mixin subclasses

	  mixin(KeyedSeq, KeyedIterable.prototype);
	  mixin(IndexedSeq, IndexedIterable.prototype);
	  mixin(SetSeq, SetIterable.prototype);

	  mixin(KeyedCollection, KeyedIterable.prototype);
	  mixin(IndexedCollection, IndexedIterable.prototype);
	  mixin(SetCollection, SetIterable.prototype);


	  // #pragma Helper functions

	  function keyMapper(v, k) {
	    return k;
	  }

	  function entryMapper(v, k) {
	    return [k, v];
	  }

	  function not(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    }
	  }

	  function neg(predicate) {
	    return function() {
	      return -predicate.apply(this, arguments);
	    }
	  }

	  function quoteString(value) {
	    return typeof value === 'string' ? JSON.stringify(value) : String(value);
	  }

	  function defaultZipper() {
	    return arrCopy(arguments);
	  }

	  function defaultNegComparator(a, b) {
	    return a < b ? 1 : a > b ? -1 : 0;
	  }

	  function hashIterable(iterable) {
	    if (iterable.size === Infinity) {
	      return 0;
	    }
	    var ordered = isOrdered(iterable);
	    var keyed = isKeyed(iterable);
	    var h = ordered ? 1 : 0;
	    var size = iterable.__iterate(
	      keyed ?
	        ordered ?
	          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :
	          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :
	        ordered ?
	          function(v ) { h = 31 * h + hash(v) | 0; } :
	          function(v ) { h = h + hash(v) | 0; }
	    );
	    return murmurHashOfSize(size, h);
	  }

	  function murmurHashOfSize(size, h) {
	    h = imul(h, 0xCC9E2D51);
	    h = imul(h << 15 | h >>> -15, 0x1B873593);
	    h = imul(h << 13 | h >>> -13, 5);
	    h = (h + 0xE6546B64 | 0) ^ size;
	    h = imul(h ^ h >>> 16, 0x85EBCA6B);
	    h = imul(h ^ h >>> 13, 0xC2B2AE35);
	    h = smi(h ^ h >>> 16);
	    return h;
	  }

	  function hashMerge(a, b) {
	    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
	  }

	  var Immutable = {

	    Iterable: Iterable,

	    Seq: Seq,
	    Collection: Collection,
	    Map: Map,
	    OrderedMap: OrderedMap,
	    List: List,
	    Stack: Stack,
	    Set: Set,
	    OrderedSet: OrderedSet,

	    Record: Record,
	    Range: Range,
	    Repeat: Repeat,

	    is: is,
	    fromJS: fromJS

	  };

	  return Immutable;

	}));

/***/ },
/* 302 */
/***/ function(module, exports) {

	module.exports=function(n){function r(e){if(t[e])return t[e].exports;var o=t[e]={exports:{},id:e,loaded:!1};return n[e].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var t={};return r.m=n,r.c=t,r.p="",r(0)}([function(n,r,t){"use strict";var e=t(1);"undefined"!=typeof Immutable&&(Immutable.installDevTools=install.bind(null,Immutable));var o=!1;n.exports=function(n){if("undefined"==typeof window)throw new Error("Can only install immutable-devtools in a browser environment.");o!==!0&&(window.devtoolsFormatters=window.devtoolsFormatters||[],window.devtoolsFormatters.push(e(n)),o=!0)}},function(n,r){"use strict";function t(n){if(Array.isArray(n)){for(var r=0,t=Array(n.length);r<n.length;r++)t[r]=n[r];return t}return Array.from(n)}var e={style:"list-style-type: none; padding: 0; margin: 0 0 0 12px"},o={style:"color:#881391"};n.exports=function(n){function r(n,r){return["object",{object:n,config:r}]}function u(n){return n.size>0}function a(n){return["span",o,n+": "]}function i(n){var o=n.map(function(n,t){return["li",a(t),r(n)]}).toList().toJS();return["ol",e].concat(t(o))}function d(n){var o=n.map(function(n){return["li",r(n)]}).toJS();return["ol",e].concat(t(o))}function s(r){return r instanceof n.Record?v:Object.keys(w).filter(function(t){return n[t]["is"+t](r)}).map(function(n){return w[n]}).concat(f)[0]}var c={},f={header:function(n,t){return t===c?null:r(n,c)},hasBody:function(n,r){return!1},body:function(n,r){return null}},l={header:function(){return["span","Map"]},hasBody:u,body:i},y={header:function(){return["span","OrderedMap"]},hasBody:u,body:i},p={header:function(){return["span","List"]},hasBody:u,body:i},h={header:function(){return["span","Stack"]},hasBody:u,body:d},m={header:function(){return["span","Set"]},hasBody:u,body:d},b={header:function(){return["span","OrderedSet"]},hasBody:u,body:d},v={header:function(){return["span","Record"]},hasBody:u,body:function(n){var o=n.keySeq().map(function(t){return["li",a(t),r(n.get(t))]}).toJS();return["ol",e].concat(t(o))}},w={OrderedMap:y,OrderedSet:b,List:p,Map:l,Set:m,Stack:h};return{header:function(n,r){return s(n).header(n,r)},hasBody:function(n,r){return s(n).hasBody(n,r)},body:function(n,r){return s(n).body(n,r)}}}}]);

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _chai = __webpack_require__(304);

	var _index = __webpack_require__(344);

	var _index2 = _interopRequireDefault(_index);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 *  Copyright (c) 2015, The Regents of the University of California,
	 *  through Lawrence Berkeley National Laboratory (subject to receipt
	 *  of any required approvals from the U.S. Dept. of Energy).
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree.
	 */

	/* global it, describe */
	/* eslint no-unused-expressions: 0 */
	/* eslint-disable max-len */

	describe("Indexes", function () {

	    describe("Index creation", function () {

	        it("can create a daily index", function (done) {
	            var index = new _index2.default("1d-12355");
	            var expected = "[Thu, 30 Oct 2003 00:00:00 GMT, Fri, 31 Oct 2003 00:00:00 GMT]";
	            (0, _chai.expect)(index.asTimerange().toUTCString()).to.equal(expected);
	            (0, _chai.expect)(index.asTimerange().humanizeDuration()).to.equal("a day");
	            done();
	        });

	        it("can create a hourly index", function (done) {
	            var index = new _index2.default("1h-123554");
	            var expected = "[Sun, 05 Feb 1984 02:00:00 GMT, Sun, 05 Feb 1984 03:00:00 GMT]";
	            (0, _chai.expect)(index.asTimerange().toUTCString()).to.equal(expected);
	            (0, _chai.expect)(index.asTimerange().humanizeDuration()).to.equal("an hour");
	            done();
	        });

	        it("can create a 5 minute index", function (done) {
	            var index = new _index2.default("5m-4135541");
	            var expected = "[Sat, 25 Apr 2009 12:25:00 GMT, Sat, 25 Apr 2009 12:30:00 GMT]";
	            (0, _chai.expect)(index.asTimerange().toUTCString()).to.equal(expected);
	            (0, _chai.expect)(index.asTimerange().humanizeDuration()).to.equal("5 minutes");
	            done();
	        });

	        it("can create a 30 second index", function (done) {
	            var index = new _index2.default("30s-41135541");
	            var expected = "[Sun, 08 Feb 2009 04:10:30 GMT, Sun, 08 Feb 2009 04:11:00 GMT]";
	            (0, _chai.expect)(index.asTimerange().toUTCString()).to.equal(expected);
	            (0, _chai.expect)(index.asTimerange().humanizeDuration()).to.equal("a few seconds");
	            done();
	        });

	        it("can create a year index", function (done) {
	            var index = new _index2.default("2014");
	            var expected = "[Wed, 01 Jan 2014 00:00:00 GMT, Wed, 31 Dec 2014 23:59:59 GMT]";
	            (0, _chai.expect)(index.asTimerange().toUTCString()).to.equal(expected);
	            (0, _chai.expect)(index.asTimerange().humanizeDuration()).to.equal("a year");
	            done();
	        });

	        it("can create a month index", function (done) {
	            var index = new _index2.default("2014-09");
	            var expected = "[Mon, 01 Sep 2014 00:00:00 GMT, Tue, 30 Sep 2014 23:59:59 GMT]";
	            (0, _chai.expect)(index.asTimerange().toUTCString()).to.equal(expected);
	            (0, _chai.expect)(index.asTimerange().humanizeDuration()).to.equal("a month");
	            done();
	        });

	        it("can create a day index", function (done) {
	            var index = new _index2.default("2014-09-17");
	            var expected = "[Wed, 17 Sep 2014 00:00:00 GMT, Wed, 17 Sep 2014 23:59:59 GMT]";
	            (0, _chai.expect)(index.asTimerange().toUTCString()).to.equal(expected);
	            (0, _chai.expect)(index.asTimerange().humanizeDuration()).to.equal("a day");
	            done();
	        });
	    });

	    describe("Index nice names", function () {

	        it("can create a year index", function (done) {
	            var index = new _index2.default("2014");
	            var expected = "2014";
	            (0, _chai.expect)(index.toNiceString()).to.equal(expected);
	            done();
	        });

	        it("can create a month index..", function (done) {
	            var index = new _index2.default("2014-09");
	            var expected = "September";
	            (0, _chai.expect)(index.toNiceString()).to.equal(expected);
	            done();
	        });

	        it("can create a day index", function (done) {
	            var index = new _index2.default("2014-09-17");
	            var expected = "September 17th 2014";
	            (0, _chai.expect)(index.toNiceString()).to.equal(expected);
	            done();
	        });

	        it("can create a day index", function (done) {
	            var index = new _index2.default("2014-09-17");
	            var expected = "17 Sep 2014";
	            (0, _chai.expect)(index.toNiceString("DD MMM YYYY")).to.equal(expected);
	            done();
	        });
	    });

	    describe("Index bucketing from a date", function () {

	        it("can create a day index for a date", function (done) {
	            var date = new Date(1429673400000);
	            var expected = "2015-04-21";
	            (0, _chai.expect)(_index2.default.getDailyIndexString(date)).to.equal(expected);
	            done();
	        });

	        it("can create a month index for a date", function (done) {
	            var date = new Date(1429673400000);
	            var expected = "2015-04";
	            (0, _chai.expect)(_index2.default.getMonthlyIndexString(date)).to.equal(expected);
	            done();
	        });

	        it("can create a year index for a date", function (done) {
	            var date = new Date(1429673400000);
	            var expected = "2015";
	            (0, _chai.expect)(_index2.default.getYearlyIndexString(date)).to.equal(expected);
	            done();
	        });
	    });
	});

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(305);


/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	var used = []
	  , exports = module.exports = {};

	/*!
	 * Chai version
	 */

	exports.version = '3.5.0';

	/*!
	 * Assertion Error
	 */

	exports.AssertionError = __webpack_require__(306);

	/*!
	 * Utils for plugins (not exported)
	 */

	var util = __webpack_require__(307);

	/**
	 * # .use(function)
	 *
	 * Provides a way to extend the internals of Chai
	 *
	 * @param {Function}
	 * @returns {this} for chaining
	 * @api public
	 */

	exports.use = function (fn) {
	  if (!~used.indexOf(fn)) {
	    fn(this, util);
	    used.push(fn);
	  }

	  return this;
	};

	/*!
	 * Utility Functions
	 */

	exports.util = util;

	/*!
	 * Configuration
	 */

	var config = __webpack_require__(320);
	exports.config = config;

	/*!
	 * Primary `Assertion` prototype
	 */

	var assertion = __webpack_require__(339);
	exports.use(assertion);

	/*!
	 * Core Assertions
	 */

	var core = __webpack_require__(340);
	exports.use(core);

	/*!
	 * Expect interface
	 */

	var expect = __webpack_require__(341);
	exports.use(expect);

	/*!
	 * Should interface
	 */

	var should = __webpack_require__(342);
	exports.use(should);

	/*!
	 * Assert interface
	 */

	var assert = __webpack_require__(343);
	exports.use(assert);


/***/ },
/* 306 */
/***/ function(module, exports) {

	/*!
	 * assertion-error
	 * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>
	 * MIT Licensed
	 */

	/*!
	 * Return a function that will copy properties from
	 * one object to another excluding any originally
	 * listed. Returned function will create a new `{}`.
	 *
	 * @param {String} excluded properties ...
	 * @return {Function}
	 */

	function exclude () {
	  var excludes = [].slice.call(arguments);

	  function excludeProps (res, obj) {
	    Object.keys(obj).forEach(function (key) {
	      if (!~excludes.indexOf(key)) res[key] = obj[key];
	    });
	  }

	  return function extendExclude () {
	    var args = [].slice.call(arguments)
	      , i = 0
	      , res = {};

	    for (; i < args.length; i++) {
	      excludeProps(res, args[i]);
	    }

	    return res;
	  };
	};

	/*!
	 * Primary Exports
	 */

	module.exports = AssertionError;

	/**
	 * ### AssertionError
	 *
	 * An extension of the JavaScript `Error` constructor for
	 * assertion and validation scenarios.
	 *
	 * @param {String} message
	 * @param {Object} properties to include (optional)
	 * @param {callee} start stack function (optional)
	 */

	function AssertionError (message, _props, ssf) {
	  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')
	    , props = extend(_props || {});

	  // default values
	  this.message = message || 'Unspecified AssertionError';
	  this.showDiff = false;

	  // copy from properties
	  for (var key in props) {
	    this[key] = props[key];
	  }

	  // capture stack trace
	  ssf = ssf || arguments.callee;
	  if (ssf && Error.captureStackTrace) {
	    Error.captureStackTrace(this, ssf);
	  } else {
	    try {
	      throw new Error();
	    } catch(e) {
	      this.stack = e.stack;
	    }
	  }
	}

	/*!
	 * Inherit from Error.prototype
	 */

	AssertionError.prototype = Object.create(Error.prototype);

	/*!
	 * Statically set name
	 */

	AssertionError.prototype.name = 'AssertionError';

	/*!
	 * Ensure correct constructor
	 */

	AssertionError.prototype.constructor = AssertionError;

	/**
	 * Allow errors to be converted to JSON for static transfer.
	 *
	 * @param {Boolean} include stack (default: `true`)
	 * @return {Object} object that can be `JSON.stringify`
	 */

	AssertionError.prototype.toJSON = function (stack) {
	  var extend = exclude('constructor', 'toJSON', 'stack')
	    , props = extend({ name: this.name }, this);

	  // include stack if exists and not turned off
	  if (false !== stack && this.stack) {
	    props.stack = this.stack;
	  }

	  return props;
	};


/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * chai
	 * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Main exports
	 */

	var exports = module.exports = {};

	/*!
	 * test utility
	 */

	exports.test = __webpack_require__(308);

	/*!
	 * type utility
	 */

	exports.type = __webpack_require__(310);

	/*!
	 * expectTypes utility
	 */
	exports.expectTypes = __webpack_require__(312);

	/*!
	 * message utility
	 */

	exports.getMessage = __webpack_require__(313);

	/*!
	 * actual utility
	 */

	exports.getActual = __webpack_require__(314);

	/*!
	 * Inspect util
	 */

	exports.inspect = __webpack_require__(315);

	/*!
	 * Object Display util
	 */

	exports.objDisplay = __webpack_require__(319);

	/*!
	 * Flag utility
	 */

	exports.flag = __webpack_require__(309);

	/*!
	 * Flag transferring utility
	 */

	exports.transferFlags = __webpack_require__(321);

	/*!
	 * Deep equal utility
	 */

	exports.eql = __webpack_require__(322);

	/*!
	 * Deep path value
	 */

	exports.getPathValue = __webpack_require__(330);

	/*!
	 * Deep path info
	 */

	exports.getPathInfo = __webpack_require__(331);

	/*!
	 * Check if a property exists
	 */

	exports.hasProperty = __webpack_require__(332);

	/*!
	 * Function name
	 */

	exports.getName = __webpack_require__(316);

	/*!
	 * add Property
	 */

	exports.addProperty = __webpack_require__(333);

	/*!
	 * add Method
	 */

	exports.addMethod = __webpack_require__(334);

	/*!
	 * overwrite Property
	 */

	exports.overwriteProperty = __webpack_require__(335);

	/*!
	 * overwrite Method
	 */

	exports.overwriteMethod = __webpack_require__(336);

	/*!
	 * Add a chainable method
	 */

	exports.addChainableMethod = __webpack_require__(337);

	/*!
	 * Overwrite chainable method
	 */

	exports.overwriteChainableMethod = __webpack_require__(338);


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - test utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Module dependancies
	 */

	var flag = __webpack_require__(309);

	/**
	 * # test(object, expression)
	 *
	 * Test and object for expression.
	 *
	 * @param {Object} object (constructed Assertion)
	 * @param {Arguments} chai.Assertion.prototype.assert arguments
	 * @namespace Utils
	 * @name test
	 */

	module.exports = function (obj, args) {
	  var negate = flag(obj, 'negate')
	    , expr = args[0];
	  return negate ? !expr : expr;
	};


/***/ },
/* 309 */
/***/ function(module, exports) {

	/*!
	 * Chai - flag utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### flag(object, key, [value])
	 *
	 * Get or set a flag value on an object. If a
	 * value is provided it will be set, else it will
	 * return the currently set value or `undefined` if
	 * the value is not set.
	 *
	 *     utils.flag(this, 'foo', 'bar'); // setter
	 *     utils.flag(this, 'foo'); // getter, returns `bar`
	 *
	 * @param {Object} object constructed Assertion
	 * @param {String} key
	 * @param {Mixed} value (optional)
	 * @namespace Utils
	 * @name flag
	 * @api private
	 */

	module.exports = function (obj, key, value) {
	  var flags = obj.__flags || (obj.__flags = Object.create(null));
	  if (arguments.length === 3) {
	    flags[key] = value;
	  } else {
	    return flags[key];
	  }
	};


/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(311);


/***/ },
/* 311 */
/***/ function(module, exports) {

	/*!
	 * type-detect
	 * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Primary Exports
	 */

	var exports = module.exports = getType;

	/**
	 * ### typeOf (obj)
	 *
	 * Use several different techniques to determine
	 * the type of object being tested.
	 *
	 *
	 * @param {Mixed} object
	 * @return {String} object type
	 * @api public
	 */
	var objectTypeRegexp = /^\[object (.*)\]$/;

	function getType(obj) {
	  var type = Object.prototype.toString.call(obj).match(objectTypeRegexp)[1].toLowerCase();
	  // Let "new String('')" return 'object'
	  if (typeof Promise === 'function' && obj instanceof Promise) return 'promise';
	  // PhantomJS has type "DOMWindow" for null
	  if (obj === null) return 'null';
	  // PhantomJS has type "DOMWindow" for undefined
	  if (obj === undefined) return 'undefined';
	  return type;
	}

	exports.Library = Library;

	/**
	 * ### Library
	 *
	 * Create a repository for custom type detection.
	 *
	 * ```js
	 * var lib = new type.Library;
	 * ```
	 *
	 */

	function Library() {
	  if (!(this instanceof Library)) return new Library();
	  this.tests = {};
	}

	/**
	 * #### .of (obj)
	 *
	 * Expose replacement `typeof` detection to the library.
	 *
	 * ```js
	 * if ('string' === lib.of('hello world')) {
	 *   // ...
	 * }
	 * ```
	 *
	 * @param {Mixed} object to test
	 * @return {String} type
	 */

	Library.prototype.of = getType;

	/**
	 * #### .define (type, test)
	 *
	 * Add a test to for the `.test()` assertion.
	 *
	 * Can be defined as a regular expression:
	 *
	 * ```js
	 * lib.define('int', /^[0-9]+$/);
	 * ```
	 *
	 * ... or as a function:
	 *
	 * ```js
	 * lib.define('bln', function (obj) {
	 *   if ('boolean' === lib.of(obj)) return true;
	 *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];
	 *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();
	 *   return !! ~blns.indexOf(obj);
	 * });
	 * ```
	 *
	 * @param {String} type
	 * @param {RegExp|Function} test
	 * @api public
	 */

	Library.prototype.define = function(type, test) {
	  if (arguments.length === 1) return this.tests[type];
	  this.tests[type] = test;
	  return this;
	};

	/**
	 * #### .test (obj, test)
	 *
	 * Assert that an object is of type. Will first
	 * check natives, and if that does not pass it will
	 * use the user defined custom tests.
	 *
	 * ```js
	 * assert(lib.test('1', 'int'));
	 * assert(lib.test('yes', 'bln'));
	 * ```
	 *
	 * @param {Mixed} object
	 * @param {String} type
	 * @return {Boolean} result
	 * @api public
	 */

	Library.prototype.test = function(obj, type) {
	  if (type === getType(obj)) return true;
	  var test = this.tests[type];

	  if (test && 'regexp' === getType(test)) {
	    return test.test(obj);
	  } else if (test && 'function' === getType(test)) {
	    return test(obj);
	  } else {
	    throw new ReferenceError('Type test "' + type + '" not defined or invalid.');
	  }
	};


/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - expectTypes utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### expectTypes(obj, types)
	 *
	 * Ensures that the object being tested against is of a valid type.
	 *
	 *     utils.expectTypes(this, ['array', 'object', 'string']);
	 *
	 * @param {Mixed} obj constructed Assertion
	 * @param {Array} type A list of allowed types for this assertion
	 * @namespace Utils
	 * @name expectTypes
	 * @api public
	 */

	var AssertionError = __webpack_require__(306);
	var flag = __webpack_require__(309);
	var type = __webpack_require__(310);

	module.exports = function (obj, types) {
	  var obj = flag(obj, 'object');
	  types = types.map(function (t) { return t.toLowerCase(); });
	  types.sort();

	  // Transforms ['lorem', 'ipsum'] into 'a lirum, or an ipsum'
	  var str = types.map(function (t, index) {
	    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';
	    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';
	    return or + art + ' ' + t;
	  }).join(', ');

	  if (!types.some(function (expected) { return type(obj) === expected; })) {
	    throw new AssertionError(
	      'object tested must be ' + str + ', but ' + type(obj) + ' given'
	    );
	  }
	};


/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - message composition utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Module dependancies
	 */

	var flag = __webpack_require__(309)
	  , getActual = __webpack_require__(314)
	  , inspect = __webpack_require__(315)
	  , objDisplay = __webpack_require__(319);

	/**
	 * ### .getMessage(object, message, negateMessage)
	 *
	 * Construct the error message based on flags
	 * and template tags. Template tags will return
	 * a stringified inspection of the object referenced.
	 *
	 * Message template tags:
	 * - `#{this}` current asserted object
	 * - `#{act}` actual value
	 * - `#{exp}` expected value
	 *
	 * @param {Object} object (constructed Assertion)
	 * @param {Arguments} chai.Assertion.prototype.assert arguments
	 * @namespace Utils
	 * @name getMessage
	 * @api public
	 */

	module.exports = function (obj, args) {
	  var negate = flag(obj, 'negate')
	    , val = flag(obj, 'object')
	    , expected = args[3]
	    , actual = getActual(obj, args)
	    , msg = negate ? args[2] : args[1]
	    , flagMsg = flag(obj, 'message');

	  if(typeof msg === "function") msg = msg();
	  msg = msg || '';
	  msg = msg
	    .replace(/#\{this\}/g, function () { return objDisplay(val); })
	    .replace(/#\{act\}/g, function () { return objDisplay(actual); })
	    .replace(/#\{exp\}/g, function () { return objDisplay(expected); });

	  return flagMsg ? flagMsg + ': ' + msg : msg;
	};


/***/ },
/* 314 */
/***/ function(module, exports) {

	/*!
	 * Chai - getActual utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * # getActual(object, [actual])
	 *
	 * Returns the `actual` value for an Assertion
	 *
	 * @param {Object} object (constructed Assertion)
	 * @param {Arguments} chai.Assertion.prototype.assert arguments
	 * @namespace Utils
	 * @name getActual
	 */

	module.exports = function (obj, args) {
	  return args.length > 4 ? args[4] : obj._obj;
	};


/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	// This is (almost) directly from Node.js utils
	// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js

	var getName = __webpack_require__(316);
	var getProperties = __webpack_require__(317);
	var getEnumerableProperties = __webpack_require__(318);

	module.exports = inspect;

	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Boolean} showHidden Flag that shows hidden (not enumerable)
	 *    properties of objects.
	 * @param {Number} depth Depth in which to descend in object. Default is 2.
	 * @param {Boolean} colors Flag to turn on ANSI escape codes to color the
	 *    output. Default is false (no coloring).
	 * @namespace Utils
	 * @name inspect
	 */
	function inspect(obj, showHidden, depth, colors) {
	  var ctx = {
	    showHidden: showHidden,
	    seen: [],
	    stylize: function (str) { return str; }
	  };
	  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));
	}

	// Returns true if object is a DOM element.
	var isDOMElement = function (object) {
	  if (typeof HTMLElement === 'object') {
	    return object instanceof HTMLElement;
	  } else {
	    return object &&
	      typeof object === 'object' &&
	      object.nodeType === 1 &&
	      typeof object.nodeName === 'string';
	  }
	};

	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (value && typeof value.inspect === 'function' &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes);
	    if (typeof ret !== 'string') {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }

	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }

	  // If this is a DOM element, try to get the outer HTML.
	  if (isDOMElement(value)) {
	    if ('outerHTML' in value) {
	      return value.outerHTML;
	      // This value does not have an outerHTML attribute,
	      //   it could still be an XML element
	    } else {
	      // Attempt to serialize it
	      try {
	        if (document.xmlVersion) {
	          var xmlSerializer = new XMLSerializer();
	          return xmlSerializer.serializeToString(value);
	        } else {
	          // Firefox 11- do not support outerHTML
	          //   It does, however, support innerHTML
	          //   Use the following to render the element
	          var ns = "http://www.w3.org/1999/xhtml";
	          var container = document.createElementNS(ns, '_');

	          container.appendChild(value.cloneNode(false));
	          html = container.innerHTML
	            .replace('><', '>' + value.innerHTML + '<');
	          container.innerHTML = '';
	          return html;
	        }
	      } catch (err) {
	        // This could be a non-native DOM implementation,
	        //   continue with the normal flow:
	        //   printing the element as if it is an object.
	      }
	    }
	  }

	  // Look up the keys of the object.
	  var visibleKeys = getEnumerableProperties(value);
	  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;

	  // Some type of object without properties can be shortcutted.
	  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,
	  // a `stack` plus `description` property; ignore those for consistency.
	  if (keys.length === 0 || (isError(value) && (
	      (keys.length === 1 && keys[0] === 'stack') ||
	      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')
	     ))) {
	    if (typeof value === 'function') {
	      var name = getName(value);
	      var nameSuffix = name ? ': ' + name : '';
	      return ctx.stylize('[Function' + nameSuffix + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '', array = false, braces = ['{', '}'];

	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }

	  // Make functions say that they are functions
	  if (typeof value === 'function') {
	    var name = getName(value);
	    var nameSuffix = name ? ': ' + name : '';
	    base = ' [Function' + nameSuffix + ']';
	  }

	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }

	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }

	  // Make error with message first say the error
	  if (isError(value)) {
	    return formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);

	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();

	  return reduceToSingleString(output, base, braces);
	}


	function formatPrimitive(ctx, value) {
	  switch (typeof value) {
	    case 'undefined':
	      return ctx.stylize('undefined', 'undefined');

	    case 'string':
	      var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                               .replace(/'/g, "\\'")
	                                               .replace(/\\"/g, '"') + '\'';
	      return ctx.stylize(simple, 'string');

	    case 'number':
	      if (value === 0 && (1/value) === -Infinity) {
	        return ctx.stylize('-0', 'number');
	      }
	      return ctx.stylize('' + value, 'number');

	    case 'boolean':
	      return ctx.stylize('' + value, 'boolean');
	  }
	  // For some reason typeof null is "object", so special case here.
	  if (value === null) {
	    return ctx.stylize('null', 'null');
	  }
	}


	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}


	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (Object.prototype.hasOwnProperty.call(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}


	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str;
	  if (value.__lookupGetter__) {
	    if (value.__lookupGetter__(key)) {
	      if (value.__lookupSetter__(key)) {
	        str = ctx.stylize('[Getter/Setter]', 'special');
	      } else {
	        str = ctx.stylize('[Getter]', 'special');
	      }
	    } else {
	      if (value.__lookupSetter__(key)) {
	        str = ctx.stylize('[Setter]', 'special');
	      }
	    }
	  }
	  if (visibleKeys.indexOf(key) < 0) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(value[key]) < 0) {
	      if (recurseTimes === null) {
	        str = formatValue(ctx, value[key], null);
	      } else {
	        str = formatValue(ctx, value[key], recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (typeof name === 'undefined') {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}


	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}

	function isArray(ar) {
	  return Array.isArray(ar) ||
	         (typeof ar === 'object' && objectToString(ar) === '[object Array]');
	}

	function isRegExp(re) {
	  return typeof re === 'object' && objectToString(re) === '[object RegExp]';
	}

	function isDate(d) {
	  return typeof d === 'object' && objectToString(d) === '[object Date]';
	}

	function isError(e) {
	  return typeof e === 'object' && objectToString(e) === '[object Error]';
	}

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}


/***/ },
/* 316 */
/***/ function(module, exports) {

	/*!
	 * Chai - getName utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * # getName(func)
	 *
	 * Gets the name of a function, in a cross-browser way.
	 *
	 * @param {Function} a function (usually a constructor)
	 * @namespace Utils
	 * @name getName
	 */

	module.exports = function (func) {
	  if (func.name) return func.name;

	  var match = /^\s?function ([^(]*)\(/.exec(func);
	  return match && match[1] ? match[1] : "";
	};


/***/ },
/* 317 */
/***/ function(module, exports) {

	/*!
	 * Chai - getProperties utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### .getProperties(object)
	 *
	 * This allows the retrieval of property names of an object, enumerable or not,
	 * inherited or not.
	 *
	 * @param {Object} object
	 * @returns {Array}
	 * @namespace Utils
	 * @name getProperties
	 * @api public
	 */

	module.exports = function getProperties(object) {
	  var result = Object.getOwnPropertyNames(object);

	  function addProperty(property) {
	    if (result.indexOf(property) === -1) {
	      result.push(property);
	    }
	  }

	  var proto = Object.getPrototypeOf(object);
	  while (proto !== null) {
	    Object.getOwnPropertyNames(proto).forEach(addProperty);
	    proto = Object.getPrototypeOf(proto);
	  }

	  return result;
	};


/***/ },
/* 318 */
/***/ function(module, exports) {

	/*!
	 * Chai - getEnumerableProperties utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### .getEnumerableProperties(object)
	 *
	 * This allows the retrieval of enumerable property names of an object,
	 * inherited or not.
	 *
	 * @param {Object} object
	 * @returns {Array}
	 * @namespace Utils
	 * @name getEnumerableProperties
	 * @api public
	 */

	module.exports = function getEnumerableProperties(object) {
	  var result = [];
	  for (var name in object) {
	    result.push(name);
	  }
	  return result;
	};


/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - flag utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Module dependancies
	 */

	var inspect = __webpack_require__(315);
	var config = __webpack_require__(320);

	/**
	 * ### .objDisplay (object)
	 *
	 * Determines if an object or an array matches
	 * criteria to be inspected in-line for error
	 * messages or should be truncated.
	 *
	 * @param {Mixed} javascript object to inspect
	 * @name objDisplay
	 * @namespace Utils
	 * @api public
	 */

	module.exports = function (obj) {
	  var str = inspect(obj)
	    , type = Object.prototype.toString.call(obj);

	  if (config.truncateThreshold && str.length >= config.truncateThreshold) {
	    if (type === '[object Function]') {
	      return !obj.name || obj.name === ''
	        ? '[Function]'
	        : '[Function: ' + obj.name + ']';
	    } else if (type === '[object Array]') {
	      return '[ Array(' + obj.length + ') ]';
	    } else if (type === '[object Object]') {
	      var keys = Object.keys(obj)
	        , kstr = keys.length > 2
	          ? keys.splice(0, 2).join(', ') + ', ...'
	          : keys.join(', ');
	      return '{ Object (' + kstr + ') }';
	    } else {
	      return str;
	    }
	  } else {
	    return str;
	  }
	};


/***/ },
/* 320 */
/***/ function(module, exports) {

	module.exports = {

	  /**
	   * ### config.includeStack
	   *
	   * User configurable property, influences whether stack trace
	   * is included in Assertion error message. Default of false
	   * suppresses stack trace in the error message.
	   *
	   *     chai.config.includeStack = true;  // enable stack on error
	   *
	   * @param {Boolean}
	   * @api public
	   */

	   includeStack: false,

	  /**
	   * ### config.showDiff
	   *
	   * User configurable property, influences whether or not
	   * the `showDiff` flag should be included in the thrown
	   * AssertionErrors. `false` will always be `false`; `true`
	   * will be true when the assertion has requested a diff
	   * be shown.
	   *
	   * @param {Boolean}
	   * @api public
	   */

	  showDiff: true,

	  /**
	   * ### config.truncateThreshold
	   *
	   * User configurable property, sets length threshold for actual and
	   * expected values in assertion errors. If this threshold is exceeded, for
	   * example for large data structures, the value is replaced with something
	   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.
	   *
	   * Set it to zero if you want to disable truncating altogether.
	   *
	   * This is especially userful when doing assertions on arrays: having this
	   * set to a reasonable large value makes the failure messages readily
	   * inspectable.
	   *
	   *     chai.config.truncateThreshold = 0;  // disable truncating
	   *
	   * @param {Number}
	   * @api public
	   */

	  truncateThreshold: 40

	};


/***/ },
/* 321 */
/***/ function(module, exports) {

	/*!
	 * Chai - transferFlags utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### transferFlags(assertion, object, includeAll = true)
	 *
	 * Transfer all the flags for `assertion` to `object`. If
	 * `includeAll` is set to `false`, then the base Chai
	 * assertion flags (namely `object`, `ssfi`, and `message`)
	 * will not be transferred.
	 *
	 *
	 *     var newAssertion = new Assertion();
	 *     utils.transferFlags(assertion, newAssertion);
	 *
	 *     var anotherAsseriton = new Assertion(myObj);
	 *     utils.transferFlags(assertion, anotherAssertion, false);
	 *
	 * @param {Assertion} assertion the assertion to transfer the flags from
	 * @param {Object} object the object to transfer the flags to; usually a new assertion
	 * @param {Boolean} includeAll
	 * @namespace Utils
	 * @name transferFlags
	 * @api private
	 */

	module.exports = function (assertion, object, includeAll) {
	  var flags = assertion.__flags || (assertion.__flags = Object.create(null));

	  if (!object.__flags) {
	    object.__flags = Object.create(null);
	  }

	  includeAll = arguments.length === 3 ? includeAll : true;

	  for (var flag in flags) {
	    if (includeAll ||
	        (flag !== 'object' && flag !== 'ssfi' && flag != 'message')) {
	      object.__flags[flag] = flags[flag];
	    }
	  }
	};


/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(323);


/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * deep-eql
	 * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Module dependencies
	 */

	var type = __webpack_require__(324);

	/*!
	 * Buffer.isBuffer browser shim
	 */

	var Buffer;
	try { Buffer = __webpack_require__(326).Buffer; }
	catch(ex) {
	  Buffer = {};
	  Buffer.isBuffer = function() { return false; }
	}

	/*!
	 * Primary Export
	 */

	module.exports = deepEqual;

	/**
	 * Assert super-strict (egal) equality between
	 * two objects of any type.
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @param {Array} memoised (optional)
	 * @return {Boolean} equal match
	 */

	function deepEqual(a, b, m) {
	  if (sameValue(a, b)) {
	    return true;
	  } else if ('date' === type(a)) {
	    return dateEqual(a, b);
	  } else if ('regexp' === type(a)) {
	    return regexpEqual(a, b);
	  } else if (Buffer.isBuffer(a)) {
	    return bufferEqual(a, b);
	  } else if ('arguments' === type(a)) {
	    return argumentsEqual(a, b, m);
	  } else if (!typeEqual(a, b)) {
	    return false;
	  } else if (('object' !== type(a) && 'object' !== type(b))
	  && ('array' !== type(a) && 'array' !== type(b))) {
	    return sameValue(a, b);
	  } else {
	    return objectEqual(a, b, m);
	  }
	}

	/*!
	 * Strict (egal) equality test. Ensures that NaN always
	 * equals NaN and `-0` does not equal `+0`.
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} equal match
	 */

	function sameValue(a, b) {
	  if (a === b) return a !== 0 || 1 / a === 1 / b;
	  return a !== a && b !== b;
	}

	/*!
	 * Compare the types of two given objects and
	 * return if they are equal. Note that an Array
	 * has a type of `array` (not `object`) and arguments
	 * have a type of `arguments` (not `array`/`object`).
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */

	function typeEqual(a, b) {
	  return type(a) === type(b);
	}

	/*!
	 * Compare two Date objects by asserting that
	 * the time values are equal using `saveValue`.
	 *
	 * @param {Date} a
	 * @param {Date} b
	 * @return {Boolean} result
	 */

	function dateEqual(a, b) {
	  if ('date' !== type(b)) return false;
	  return sameValue(a.getTime(), b.getTime());
	}

	/*!
	 * Compare two regular expressions by converting them
	 * to string and checking for `sameValue`.
	 *
	 * @param {RegExp} a
	 * @param {RegExp} b
	 * @return {Boolean} result
	 */

	function regexpEqual(a, b) {
	  if ('regexp' !== type(b)) return false;
	  return sameValue(a.toString(), b.toString());
	}

	/*!
	 * Assert deep equality of two `arguments` objects.
	 * Unfortunately, these must be sliced to arrays
	 * prior to test to ensure no bad behavior.
	 *
	 * @param {Arguments} a
	 * @param {Arguments} b
	 * @param {Array} memoize (optional)
	 * @return {Boolean} result
	 */

	function argumentsEqual(a, b, m) {
	  if ('arguments' !== type(b)) return false;
	  a = [].slice.call(a);
	  b = [].slice.call(b);
	  return deepEqual(a, b, m);
	}

	/*!
	 * Get enumerable properties of a given object.
	 *
	 * @param {Object} a
	 * @return {Array} property names
	 */

	function enumerable(a) {
	  var res = [];
	  for (var key in a) res.push(key);
	  return res;
	}

	/*!
	 * Simple equality for flat iterable objects
	 * such as Arrays or Node.js buffers.
	 *
	 * @param {Iterable} a
	 * @param {Iterable} b
	 * @return {Boolean} result
	 */

	function iterableEqual(a, b) {
	  if (a.length !==  b.length) return false;

	  var i = 0;
	  var match = true;

	  for (; i < a.length; i++) {
	    if (a[i] !== b[i]) {
	      match = false;
	      break;
	    }
	  }

	  return match;
	}

	/*!
	 * Extension to `iterableEqual` specifically
	 * for Node.js Buffers.
	 *
	 * @param {Buffer} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */

	function bufferEqual(a, b) {
	  if (!Buffer.isBuffer(b)) return false;
	  return iterableEqual(a, b);
	}

	/*!
	 * Block for `objectEqual` ensuring non-existing
	 * values don't get in.
	 *
	 * @param {Mixed} object
	 * @return {Boolean} result
	 */

	function isValue(a) {
	  return a !== null && a !== undefined;
	}

	/*!
	 * Recursively check the equality of two objects.
	 * Once basic sameness has been established it will
	 * defer to `deepEqual` for each enumerable key
	 * in the object.
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */

	function objectEqual(a, b, m) {
	  if (!isValue(a) || !isValue(b)) {
	    return false;
	  }

	  if (a.prototype !== b.prototype) {
	    return false;
	  }

	  var i;
	  if (m) {
	    for (i = 0; i < m.length; i++) {
	      if ((m[i][0] === a && m[i][1] === b)
	      ||  (m[i][0] === b && m[i][1] === a)) {
	        return true;
	      }
	    }
	  } else {
	    m = [];
	  }

	  try {
	    var ka = enumerable(a);
	    var kb = enumerable(b);
	  } catch (ex) {
	    return false;
	  }

	  ka.sort();
	  kb.sort();

	  if (!iterableEqual(ka, kb)) {
	    return false;
	  }

	  m.push([ a, b ]);

	  var key;
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], m)) {
	      return false;
	    }
	  }

	  return true;
	}


/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(325);


/***/ },
/* 325 */
/***/ function(module, exports) {

	/*!
	 * type-detect
	 * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Primary Exports
	 */

	var exports = module.exports = getType;

	/*!
	 * Detectable javascript natives
	 */

	var natives = {
	    '[object Array]': 'array'
	  , '[object RegExp]': 'regexp'
	  , '[object Function]': 'function'
	  , '[object Arguments]': 'arguments'
	  , '[object Date]': 'date'
	};

	/**
	 * ### typeOf (obj)
	 *
	 * Use several different techniques to determine
	 * the type of object being tested.
	 *
	 *
	 * @param {Mixed} object
	 * @return {String} object type
	 * @api public
	 */

	function getType (obj) {
	  var str = Object.prototype.toString.call(obj);
	  if (natives[str]) return natives[str];
	  if (obj === null) return 'null';
	  if (obj === undefined) return 'undefined';
	  if (obj === Object(obj)) return 'object';
	  return typeof obj;
	}

	exports.Library = Library;

	/**
	 * ### Library
	 *
	 * Create a repository for custom type detection.
	 *
	 * ```js
	 * var lib = new type.Library;
	 * ```
	 *
	 */

	function Library () {
	  this.tests = {};
	}

	/**
	 * #### .of (obj)
	 *
	 * Expose replacement `typeof` detection to the library.
	 *
	 * ```js
	 * if ('string' === lib.of('hello world')) {
	 *   // ...
	 * }
	 * ```
	 *
	 * @param {Mixed} object to test
	 * @return {String} type
	 */

	Library.prototype.of = getType;

	/**
	 * #### .define (type, test)
	 *
	 * Add a test to for the `.test()` assertion.
	 *
	 * Can be defined as a regular expression:
	 *
	 * ```js
	 * lib.define('int', /^[0-9]+$/);
	 * ```
	 *
	 * ... or as a function:
	 *
	 * ```js
	 * lib.define('bln', function (obj) {
	 *   if ('boolean' === lib.of(obj)) return true;
	 *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];
	 *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();
	 *   return !! ~blns.indexOf(obj);
	 * });
	 * ```
	 *
	 * @param {String} type
	 * @param {RegExp|Function} test
	 * @api public
	 */

	Library.prototype.define = function (type, test) {
	  if (arguments.length === 1) return this.tests[type];
	  this.tests[type] = test;
	  return this;
	};

	/**
	 * #### .test (obj, test)
	 *
	 * Assert that an object is of type. Will first
	 * check natives, and if that does not pass it will
	 * use the user defined custom tests.
	 *
	 * ```js
	 * assert(lib.test('1', 'int'));
	 * assert(lib.test('yes', 'bln'));
	 * ```
	 *
	 * @param {Mixed} object
	 * @param {String} type
	 * @return {Boolean} result
	 * @api public
	 */

	Library.prototype.test = function (obj, type) {
	  if (type === getType(obj)) return true;
	  var test = this.tests[type];

	  if (test && 'regexp' === getType(test)) {
	    return test.test(obj);
	  } else if (test && 'function' === getType(test)) {
	    return test(obj);
	  } else {
	    throw new ReferenceError('Type test "' + type + '" not defined or invalid.');
	  }
	};


/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict'

	var base64 = __webpack_require__(327)
	var ieee754 = __webpack_require__(328)
	var isArray = __webpack_require__(329)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()

	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }

	  return that
	}

	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */

	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}

	Buffer.poolSize = 8192 // not used by this implementation

	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}

	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }

	  return fromObject(that, value)
	}

	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}

	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}

	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}

	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}

	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }

	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)

	  var actual = that.write(string, encoding)

	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }

	  return that
	}

	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }

	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}

	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)

	    if (that.length === 0) {
	      return that
	    }

	    obj.copy(that, 0, 0, len)
	    return that
	  }

	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}

	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.

	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length
	  }

	  if (end <= 0) {
	    return ''
	  }

	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0

	  if (end <= start) {
	    return ''
	  }

	  if (!encoding) encoding = 'utf8'

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true

	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}

	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}

	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}

	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }

	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }

	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0

	  if (this === target) return 0

	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)

	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1

	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }

	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }

	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }

	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }

	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }

	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }

	  return -1
	}

	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}

	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }

	  return len
	}

	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }

	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }

	  if (end <= start) {
	    return this
	  }

	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0

	  if (!val) val = 0

	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }

	  return this
	}

	// HELPER FUNCTIONS
	// ================

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(326).Buffer, (function() { return this; }())))

/***/ },
/* 327 */
/***/ function(module, exports) {

	'use strict'

	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray

	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}

	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63

	function placeHoldersCount (b64) {
	  var len = b64.length
	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }

	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
	}

	function byteLength (b64) {
	  // base64 is 4/3 + up to two characters of the original data
	  return b64.length * 3 / 4 - placeHoldersCount(b64)
	}

	function toByteArray (b64) {
	  var i, j, l, tmp, placeHolders, arr
	  var len = b64.length
	  placeHolders = placeHoldersCount(b64)

	  arr = new Arr(len * 3 / 4 - placeHolders)

	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len

	  var L = 0

	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
	    arr[L++] = (tmp >> 16) & 0xFF
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }

	  if (placeHolders === 2) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[L++] = tmp & 0xFF
	  } else if (placeHolders === 1) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }

	  return arr
	}

	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
	}

	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}

	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var output = ''
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3

	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }

	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    output += lookup[tmp >> 2]
	    output += lookup[(tmp << 4) & 0x3F]
	    output += '=='
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
	    output += lookup[tmp >> 10]
	    output += lookup[(tmp >> 4) & 0x3F]
	    output += lookup[(tmp << 2) & 0x3F]
	    output += '='
	  }

	  parts.push(output)

	  return parts.join('')
	}


/***/ },
/* 328 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]

	  i += d

	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

	  value = Math.abs(value)

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }

	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 329 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - getPathValue utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * @see https://github.com/logicalparadox/filtr
	 * MIT Licensed
	 */

	var getPathInfo = __webpack_require__(331);

	/**
	 * ### .getPathValue(path, object)
	 *
	 * This allows the retrieval of values in an
	 * object given a string path.
	 *
	 *     var obj = {
	 *         prop1: {
	 *             arr: ['a', 'b', 'c']
	 *           , str: 'Hello'
	 *         }
	 *       , prop2: {
	 *             arr: [ { nested: 'Universe' } ]
	 *           , str: 'Hello again!'
	 *         }
	 *     }
	 *
	 * The following would be the results.
	 *
	 *     getPathValue('prop1.str', obj); // Hello
	 *     getPathValue('prop1.att[2]', obj); // b
	 *     getPathValue('prop2.arr[0].nested', obj); // Universe
	 *
	 * @param {String} path
	 * @param {Object} object
	 * @returns {Object} value or `undefined`
	 * @namespace Utils
	 * @name getPathValue
	 * @api public
	 */
	module.exports = function(path, obj) {
	  var info = getPathInfo(path, obj);
	  return info.value;
	};


/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - getPathInfo utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	var hasProperty = __webpack_require__(332);

	/**
	 * ### .getPathInfo(path, object)
	 *
	 * This allows the retrieval of property info in an
	 * object given a string path.
	 *
	 * The path info consists of an object with the
	 * following properties:
	 *
	 * * parent - The parent object of the property referenced by `path`
	 * * name - The name of the final property, a number if it was an array indexer
	 * * value - The value of the property, if it exists, otherwise `undefined`
	 * * exists - Whether the property exists or not
	 *
	 * @param {String} path
	 * @param {Object} object
	 * @returns {Object} info
	 * @namespace Utils
	 * @name getPathInfo
	 * @api public
	 */

	module.exports = function getPathInfo(path, obj) {
	  var parsed = parsePath(path),
	      last = parsed[parsed.length - 1];

	  var info = {
	    parent: parsed.length > 1 ? _getPathValue(parsed, obj, parsed.length - 1) : obj,
	    name: last.p || last.i,
	    value: _getPathValue(parsed, obj)
	  };
	  info.exists = hasProperty(info.name, info.parent);

	  return info;
	};


	/*!
	 * ## parsePath(path)
	 *
	 * Helper function used to parse string object
	 * paths. Use in conjunction with `_getPathValue`.
	 *
	 *      var parsed = parsePath('myobject.property.subprop');
	 *
	 * ### Paths:
	 *
	 * * Can be as near infinitely deep and nested
	 * * Arrays are also valid using the formal `myobject.document[3].property`.
	 * * Literal dots and brackets (not delimiter) must be backslash-escaped.
	 *
	 * @param {String} path
	 * @returns {Object} parsed
	 * @api private
	 */

	function parsePath (path) {
	  var str = path.replace(/([^\\])\[/g, '$1.[')
	    , parts = str.match(/(\\\.|[^.]+?)+/g);
	  return parts.map(function (value) {
	    var re = /^\[(\d+)\]$/
	      , mArr = re.exec(value);
	    if (mArr) return { i: parseFloat(mArr[1]) };
	    else return { p: value.replace(/\\([.\[\]])/g, '$1') };
	  });
	}


	/*!
	 * ## _getPathValue(parsed, obj)
	 *
	 * Helper companion function for `.parsePath` that returns
	 * the value located at the parsed address.
	 *
	 *      var value = getPathValue(parsed, obj);
	 *
	 * @param {Object} parsed definition from `parsePath`.
	 * @param {Object} object to search against
	 * @param {Number} object to search against
	 * @returns {Object|Undefined} value
	 * @api private
	 */

	function _getPathValue (parsed, obj, index) {
	  var tmp = obj
	    , res;

	  index = (index === undefined ? parsed.length : index);

	  for (var i = 0, l = index; i < l; i++) {
	    var part = parsed[i];
	    if (tmp) {
	      if ('undefined' !== typeof part.p)
	        tmp = tmp[part.p];
	      else if ('undefined' !== typeof part.i)
	        tmp = tmp[part.i];
	      if (i == (l - 1)) res = tmp;
	    } else {
	      res = undefined;
	    }
	  }
	  return res;
	}


/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - hasProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	var type = __webpack_require__(310);

	/**
	 * ### .hasProperty(object, name)
	 *
	 * This allows checking whether an object has
	 * named property or numeric array index.
	 *
	 * Basically does the same thing as the `in`
	 * operator but works properly with natives
	 * and null/undefined values.
	 *
	 *     var obj = {
	 *         arr: ['a', 'b', 'c']
	 *       , str: 'Hello'
	 *     }
	 *
	 * The following would be the results.
	 *
	 *     hasProperty('str', obj);  // true
	 *     hasProperty('constructor', obj);  // true
	 *     hasProperty('bar', obj);  // false
	 *
	 *     hasProperty('length', obj.str); // true
	 *     hasProperty(1, obj.str);  // true
	 *     hasProperty(5, obj.str);  // false
	 *
	 *     hasProperty('length', obj.arr);  // true
	 *     hasProperty(2, obj.arr);  // true
	 *     hasProperty(3, obj.arr);  // false
	 *
	 * @param {Objuect} object
	 * @param {String|Number} name
	 * @returns {Boolean} whether it exists
	 * @namespace Utils
	 * @name getPathInfo
	 * @api public
	 */

	var literals = {
	    'number': Number
	  , 'string': String
	};

	module.exports = function hasProperty(name, obj) {
	  var ot = type(obj);

	  // Bad Object, obviously no props at all
	  if(ot === 'null' || ot === 'undefined')
	    return false;

	  // The `in` operator does not work with certain literals
	  // box these before the check
	  if(literals[ot] && typeof obj !== 'object')
	    obj = new literals[ot](obj);

	  return name in obj;
	};


/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - addProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	var config = __webpack_require__(320);
	var flag = __webpack_require__(309);

	/**
	 * ### addProperty (ctx, name, getter)
	 *
	 * Adds a property to the prototype of an object.
	 *
	 *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {
	 *       var obj = utils.flag(this, 'object');
	 *       new chai.Assertion(obj).to.be.instanceof(Foo);
	 *     });
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.addProperty('foo', fn);
	 *
	 * Then can be used as any other assertion.
	 *
	 *     expect(myFoo).to.be.foo;
	 *
	 * @param {Object} ctx object to which the property is added
	 * @param {String} name of property to add
	 * @param {Function} getter function to be used for name
	 * @namespace Utils
	 * @name addProperty
	 * @api public
	 */

	module.exports = function (ctx, name, getter) {
	  Object.defineProperty(ctx, name,
	    { get: function addProperty() {
	        var old_ssfi = flag(this, 'ssfi');
	        if (old_ssfi && config.includeStack === false)
	          flag(this, 'ssfi', addProperty);

	        var result = getter.call(this);
	        return result === undefined ? this : result;
	      }
	    , configurable: true
	  });
	};


/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - addMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	var config = __webpack_require__(320);

	/**
	 * ### .addMethod (ctx, name, method)
	 *
	 * Adds a method to the prototype of an object.
	 *
	 *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {
	 *       var obj = utils.flag(this, 'object');
	 *       new chai.Assertion(obj).to.be.equal(str);
	 *     });
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.addMethod('foo', fn);
	 *
	 * Then can be used as any other assertion.
	 *
	 *     expect(fooStr).to.be.foo('bar');
	 *
	 * @param {Object} ctx object to which the method is added
	 * @param {String} name of method to add
	 * @param {Function} method function to be used for name
	 * @namespace Utils
	 * @name addMethod
	 * @api public
	 */
	var flag = __webpack_require__(309);

	module.exports = function (ctx, name, method) {
	  ctx[name] = function () {
	    var old_ssfi = flag(this, 'ssfi');
	    if (old_ssfi && config.includeStack === false)
	      flag(this, 'ssfi', ctx[name]);
	    var result = method.apply(this, arguments);
	    return result === undefined ? this : result;
	  };
	};


/***/ },
/* 335 */
/***/ function(module, exports) {

	/*!
	 * Chai - overwriteProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### overwriteProperty (ctx, name, fn)
	 *
	 * Overwites an already existing property getter and provides
	 * access to previous value. Must return function to use as getter.
	 *
	 *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {
	 *       return function () {
	 *         var obj = utils.flag(this, 'object');
	 *         if (obj instanceof Foo) {
	 *           new chai.Assertion(obj.name).to.equal('bar');
	 *         } else {
	 *           _super.call(this);
	 *         }
	 *       }
	 *     });
	 *
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.overwriteProperty('foo', fn);
	 *
	 * Then can be used as any other assertion.
	 *
	 *     expect(myFoo).to.be.ok;
	 *
	 * @param {Object} ctx object whose property is to be overwritten
	 * @param {String} name of property to overwrite
	 * @param {Function} getter function that returns a getter function to be used for name
	 * @namespace Utils
	 * @name overwriteProperty
	 * @api public
	 */

	module.exports = function (ctx, name, getter) {
	  var _get = Object.getOwnPropertyDescriptor(ctx, name)
	    , _super = function () {};

	  if (_get && 'function' === typeof _get.get)
	    _super = _get.get

	  Object.defineProperty(ctx, name,
	    { get: function () {
	        var result = getter(_super).call(this);
	        return result === undefined ? this : result;
	      }
	    , configurable: true
	  });
	};


/***/ },
/* 336 */
/***/ function(module, exports) {

	/*!
	 * Chai - overwriteMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### overwriteMethod (ctx, name, fn)
	 *
	 * Overwites an already existing method and provides
	 * access to previous function. Must return function
	 * to be used for name.
	 *
	 *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {
	 *       return function (str) {
	 *         var obj = utils.flag(this, 'object');
	 *         if (obj instanceof Foo) {
	 *           new chai.Assertion(obj.value).to.equal(str);
	 *         } else {
	 *           _super.apply(this, arguments);
	 *         }
	 *       }
	 *     });
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.overwriteMethod('foo', fn);
	 *
	 * Then can be used as any other assertion.
	 *
	 *     expect(myFoo).to.equal('bar');
	 *
	 * @param {Object} ctx object whose method is to be overwritten
	 * @param {String} name of method to overwrite
	 * @param {Function} method function that returns a function to be used for name
	 * @namespace Utils
	 * @name overwriteMethod
	 * @api public
	 */

	module.exports = function (ctx, name, method) {
	  var _method = ctx[name]
	    , _super = function () { return this; };

	  if (_method && 'function' === typeof _method)
	    _super = _method;

	  ctx[name] = function () {
	    var result = method(_super).apply(this, arguments);
	    return result === undefined ? this : result;
	  }
	};


/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - addChainingMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Module dependencies
	 */

	var transferFlags = __webpack_require__(321);
	var flag = __webpack_require__(309);
	var config = __webpack_require__(320);

	/*!
	 * Module variables
	 */

	// Check whether `__proto__` is supported
	var hasProtoSupport = '__proto__' in Object;

	// Without `__proto__` support, this module will need to add properties to a function.
	// However, some Function.prototype methods cannot be overwritten,
	// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).
	var excludeNames = /^(?:length|name|arguments|caller)$/;

	// Cache `Function` properties
	var call  = Function.prototype.call,
	    apply = Function.prototype.apply;

	/**
	 * ### addChainableMethod (ctx, name, method, chainingBehavior)
	 *
	 * Adds a method to an object, such that the method can also be chained.
	 *
	 *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {
	 *       var obj = utils.flag(this, 'object');
	 *       new chai.Assertion(obj).to.be.equal(str);
	 *     });
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);
	 *
	 * The result can then be used as both a method assertion, executing both `method` and
	 * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.
	 *
	 *     expect(fooStr).to.be.foo('bar');
	 *     expect(fooStr).to.be.foo.equal('foo');
	 *
	 * @param {Object} ctx object to which the method is added
	 * @param {String} name of method to add
	 * @param {Function} method function to be used for `name`, when called
	 * @param {Function} chainingBehavior function to be called every time the property is accessed
	 * @namespace Utils
	 * @name addChainableMethod
	 * @api public
	 */

	module.exports = function (ctx, name, method, chainingBehavior) {
	  if (typeof chainingBehavior !== 'function') {
	    chainingBehavior = function () { };
	  }

	  var chainableBehavior = {
	      method: method
	    , chainingBehavior: chainingBehavior
	  };

	  // save the methods so we can overwrite them later, if we need to.
	  if (!ctx.__methods) {
	    ctx.__methods = {};
	  }
	  ctx.__methods[name] = chainableBehavior;

	  Object.defineProperty(ctx, name,
	    { get: function () {
	        chainableBehavior.chainingBehavior.call(this);

	        var assert = function assert() {
	          var old_ssfi = flag(this, 'ssfi');
	          if (old_ssfi && config.includeStack === false)
	            flag(this, 'ssfi', assert);
	          var result = chainableBehavior.method.apply(this, arguments);
	          return result === undefined ? this : result;
	        };

	        // Use `__proto__` if available
	        if (hasProtoSupport) {
	          // Inherit all properties from the object by replacing the `Function` prototype
	          var prototype = assert.__proto__ = Object.create(this);
	          // Restore the `call` and `apply` methods from `Function`
	          prototype.call = call;
	          prototype.apply = apply;
	        }
	        // Otherwise, redefine all properties (slow!)
	        else {
	          var asserterNames = Object.getOwnPropertyNames(ctx);
	          asserterNames.forEach(function (asserterName) {
	            if (!excludeNames.test(asserterName)) {
	              var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);
	              Object.defineProperty(assert, asserterName, pd);
	            }
	          });
	        }

	        transferFlags(this, assert);
	        return assert;
	      }
	    , configurable: true
	  });
	};


/***/ },
/* 338 */
/***/ function(module, exports) {

	/*!
	 * Chai - overwriteChainableMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### overwriteChainableMethod (ctx, name, method, chainingBehavior)
	 *
	 * Overwites an already existing chainable method
	 * and provides access to the previous function or
	 * property.  Must return functions to be used for
	 * name.
	 *
	 *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'length',
	 *       function (_super) {
	 *       }
	 *     , function (_super) {
	 *       }
	 *     );
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);
	 *
	 * Then can be used as any other assertion.
	 *
	 *     expect(myFoo).to.have.length(3);
	 *     expect(myFoo).to.have.length.above(3);
	 *
	 * @param {Object} ctx object whose method / property is to be overwritten
	 * @param {String} name of method / property to overwrite
	 * @param {Function} method function that returns a function to be used for name
	 * @param {Function} chainingBehavior function that returns a function to be used for property
	 * @namespace Utils
	 * @name overwriteChainableMethod
	 * @api public
	 */

	module.exports = function (ctx, name, method, chainingBehavior) {
	  var chainableBehavior = ctx.__methods[name];

	  var _chainingBehavior = chainableBehavior.chainingBehavior;
	  chainableBehavior.chainingBehavior = function () {
	    var result = chainingBehavior(_chainingBehavior).call(this);
	    return result === undefined ? this : result;
	  };

	  var _method = chainableBehavior.method;
	  chainableBehavior.method = function () {
	    var result = method(_method).apply(this, arguments);
	    return result === undefined ? this : result;
	  };
	};


/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * chai
	 * http://chaijs.com
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	var config = __webpack_require__(320);

	module.exports = function (_chai, util) {
	  /*!
	   * Module dependencies.
	   */

	  var AssertionError = _chai.AssertionError
	    , flag = util.flag;

	  /*!
	   * Module export.
	   */

	  _chai.Assertion = Assertion;

	  /*!
	   * Assertion Constructor
	   *
	   * Creates object for chaining.
	   *
	   * @api private
	   */

	  function Assertion (obj, msg, stack) {
	    flag(this, 'ssfi', stack || arguments.callee);
	    flag(this, 'object', obj);
	    flag(this, 'message', msg);
	  }

	  Object.defineProperty(Assertion, 'includeStack', {
	    get: function() {
	      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');
	      return config.includeStack;
	    },
	    set: function(value) {
	      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');
	      config.includeStack = value;
	    }
	  });

	  Object.defineProperty(Assertion, 'showDiff', {
	    get: function() {
	      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');
	      return config.showDiff;
	    },
	    set: function(value) {
	      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');
	      config.showDiff = value;
	    }
	  });

	  Assertion.addProperty = function (name, fn) {
	    util.addProperty(this.prototype, name, fn);
	  };

	  Assertion.addMethod = function (name, fn) {
	    util.addMethod(this.prototype, name, fn);
	  };

	  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {
	    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);
	  };

	  Assertion.overwriteProperty = function (name, fn) {
	    util.overwriteProperty(this.prototype, name, fn);
	  };

	  Assertion.overwriteMethod = function (name, fn) {
	    util.overwriteMethod(this.prototype, name, fn);
	  };

	  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {
	    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);
	  };

	  /**
	   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)
	   *
	   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.
	   *
	   * @name assert
	   * @param {Philosophical} expression to be tested
	   * @param {String|Function} message or function that returns message to display if expression fails
	   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails
	   * @param {Mixed} expected value (remember to check for negation)
	   * @param {Mixed} actual (optional) will default to `this.obj`
	   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails
	   * @api private
	   */

	  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {
	    var ok = util.test(this, arguments);
	    if (true !== showDiff) showDiff = false;
	    if (true !== config.showDiff) showDiff = false;

	    if (!ok) {
	      var msg = util.getMessage(this, arguments)
	        , actual = util.getActual(this, arguments);
	      throw new AssertionError(msg, {
	          actual: actual
	        , expected: expected
	        , showDiff: showDiff
	      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));
	    }
	  };

	  /*!
	   * ### ._obj
	   *
	   * Quick reference to stored `actual` value for plugin developers.
	   *
	   * @api private
	   */

	  Object.defineProperty(Assertion.prototype, '_obj',
	    { get: function () {
	        return flag(this, 'object');
	      }
	    , set: function (val) {
	        flag(this, 'object', val);
	      }
	  });
	};


/***/ },
/* 340 */
/***/ function(module, exports) {

	/*!
	 * chai
	 * http://chaijs.com
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	module.exports = function (chai, _) {
	  var Assertion = chai.Assertion
	    , toString = Object.prototype.toString
	    , flag = _.flag;

	  /**
	   * ### Language Chains
	   *
	   * The following are provided as chainable getters to
	   * improve the readability of your assertions. They
	   * do not provide testing capabilities unless they
	   * have been overwritten by a plugin.
	   *
	   * **Chains**
	   *
	   * - to
	   * - be
	   * - been
	   * - is
	   * - that
	   * - which
	   * - and
	   * - has
	   * - have
	   * - with
	   * - at
	   * - of
	   * - same
	   *
	   * @name language chains
	   * @namespace BDD
	   * @api public
	   */

	  [ 'to', 'be', 'been'
	  , 'is', 'and', 'has', 'have'
	  , 'with', 'that', 'which', 'at'
	  , 'of', 'same' ].forEach(function (chain) {
	    Assertion.addProperty(chain, function () {
	      return this;
	    });
	  });

	  /**
	   * ### .not
	   *
	   * Negates any of assertions following in the chain.
	   *
	   *     expect(foo).to.not.equal('bar');
	   *     expect(goodFn).to.not.throw(Error);
	   *     expect({ foo: 'baz' }).to.have.property('foo')
	   *       .and.not.equal('bar');
	   *
	   * @name not
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('not', function () {
	    flag(this, 'negate', true);
	  });

	  /**
	   * ### .deep
	   *
	   * Sets the `deep` flag, later used by the `equal` and
	   * `property` assertions.
	   *
	   *     expect(foo).to.deep.equal({ bar: 'baz' });
	   *     expect({ foo: { bar: { baz: 'quux' } } })
	   *       .to.have.deep.property('foo.bar.baz', 'quux');
	   *
	   * `.deep.property` special characters can be escaped
	   * by adding two slashes before the `.` or `[]`.
	   *
	   *     var deepCss = { '.link': { '[target]': 42 }};
	   *     expect(deepCss).to.have.deep.property('\\.link.\\[target\\]', 42);
	   *
	   * @name deep
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('deep', function () {
	    flag(this, 'deep', true);
	  });

	  /**
	   * ### .any
	   *
	   * Sets the `any` flag, (opposite of the `all` flag)
	   * later used in the `keys` assertion.
	   *
	   *     expect(foo).to.have.any.keys('bar', 'baz');
	   *
	   * @name any
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('any', function () {
	    flag(this, 'any', true);
	    flag(this, 'all', false)
	  });


	  /**
	   * ### .all
	   *
	   * Sets the `all` flag (opposite of the `any` flag)
	   * later used by the `keys` assertion.
	   *
	   *     expect(foo).to.have.all.keys('bar', 'baz');
	   *
	   * @name all
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('all', function () {
	    flag(this, 'all', true);
	    flag(this, 'any', false);
	  });

	  /**
	   * ### .a(type)
	   *
	   * The `a` and `an` assertions are aliases that can be
	   * used either as language chains or to assert a value's
	   * type.
	   *
	   *     // typeof
	   *     expect('test').to.be.a('string');
	   *     expect({ foo: 'bar' }).to.be.an('object');
	   *     expect(null).to.be.a('null');
	   *     expect(undefined).to.be.an('undefined');
	   *     expect(new Error).to.be.an('error');
	   *     expect(new Promise).to.be.a('promise');
	   *     expect(new Float32Array()).to.be.a('float32array');
	   *     expect(Symbol()).to.be.a('symbol');
	   *
	   *     // es6 overrides
	   *     expect({[Symbol.toStringTag]:()=>'foo'}).to.be.a('foo');
	   *
	   *     // language chain
	   *     expect(foo).to.be.an.instanceof(Foo);
	   *
	   * @name a
	   * @alias an
	   * @param {String} type
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function an (type, msg) {
	    if (msg) flag(this, 'message', msg);
	    type = type.toLowerCase();
	    var obj = flag(this, 'object')
	      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';

	    this.assert(
	        type === _.type(obj)
	      , 'expected #{this} to be ' + article + type
	      , 'expected #{this} not to be ' + article + type
	    );
	  }

	  Assertion.addChainableMethod('an', an);
	  Assertion.addChainableMethod('a', an);

	  /**
	   * ### .include(value)
	   *
	   * The `include` and `contain` assertions can be used as either property
	   * based language chains or as methods to assert the inclusion of an object
	   * in an array or a substring in a string. When used as language chains,
	   * they toggle the `contains` flag for the `keys` assertion.
	   *
	   *     expect([1,2,3]).to.include(2);
	   *     expect('foobar').to.contain('foo');
	   *     expect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');
	   *
	   * @name include
	   * @alias contain
	   * @alias includes
	   * @alias contains
	   * @param {Object|String|Number} obj
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function includeChainingBehavior () {
	    flag(this, 'contains', true);
	  }

	  function include (val, msg) {
	    _.expectTypes(this, ['array', 'object', 'string']);

	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    var expected = false;

	    if (_.type(obj) === 'array' && _.type(val) === 'object') {
	      for (var i in obj) {
	        if (_.eql(obj[i], val)) {
	          expected = true;
	          break;
	        }
	      }
	    } else if (_.type(val) === 'object') {
	      if (!flag(this, 'negate')) {
	        for (var k in val) new Assertion(obj).property(k, val[k]);
	        return;
	      }
	      var subset = {};
	      for (var k in val) subset[k] = obj[k];
	      expected = _.eql(subset, val);
	    } else {
	      expected = (obj != undefined) && ~obj.indexOf(val);
	    }
	    this.assert(
	        expected
	      , 'expected #{this} to include ' + _.inspect(val)
	      , 'expected #{this} to not include ' + _.inspect(val));
	  }

	  Assertion.addChainableMethod('include', include, includeChainingBehavior);
	  Assertion.addChainableMethod('contain', include, includeChainingBehavior);
	  Assertion.addChainableMethod('contains', include, includeChainingBehavior);
	  Assertion.addChainableMethod('includes', include, includeChainingBehavior);

	  /**
	   * ### .ok
	   *
	   * Asserts that the target is truthy.
	   *
	   *     expect('everything').to.be.ok;
	   *     expect(1).to.be.ok;
	   *     expect(false).to.not.be.ok;
	   *     expect(undefined).to.not.be.ok;
	   *     expect(null).to.not.be.ok;
	   *
	   * @name ok
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('ok', function () {
	    this.assert(
	        flag(this, 'object')
	      , 'expected #{this} to be truthy'
	      , 'expected #{this} to be falsy');
	  });

	  /**
	   * ### .true
	   *
	   * Asserts that the target is `true`.
	   *
	   *     expect(true).to.be.true;
	   *     expect(1).to.not.be.true;
	   *
	   * @name true
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('true', function () {
	    this.assert(
	        true === flag(this, 'object')
	      , 'expected #{this} to be true'
	      , 'expected #{this} to be false'
	      , this.negate ? false : true
	    );
	  });

	  /**
	   * ### .false
	   *
	   * Asserts that the target is `false`.
	   *
	   *     expect(false).to.be.false;
	   *     expect(0).to.not.be.false;
	   *
	   * @name false
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('false', function () {
	    this.assert(
	        false === flag(this, 'object')
	      , 'expected #{this} to be false'
	      , 'expected #{this} to be true'
	      , this.negate ? true : false
	    );
	  });

	  /**
	   * ### .null
	   *
	   * Asserts that the target is `null`.
	   *
	   *     expect(null).to.be.null;
	   *     expect(undefined).to.not.be.null;
	   *
	   * @name null
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('null', function () {
	    this.assert(
	        null === flag(this, 'object')
	      , 'expected #{this} to be null'
	      , 'expected #{this} not to be null'
	    );
	  });

	  /**
	   * ### .undefined
	   *
	   * Asserts that the target is `undefined`.
	   *
	   *     expect(undefined).to.be.undefined;
	   *     expect(null).to.not.be.undefined;
	   *
	   * @name undefined
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('undefined', function () {
	    this.assert(
	        undefined === flag(this, 'object')
	      , 'expected #{this} to be undefined'
	      , 'expected #{this} not to be undefined'
	    );
	  });

	  /**
	   * ### .NaN
	   * Asserts that the target is `NaN`.
	   *
	   *     expect('foo').to.be.NaN;
	   *     expect(4).not.to.be.NaN;
	   *
	   * @name NaN
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('NaN', function () {
	    this.assert(
	        isNaN(flag(this, 'object'))
	        , 'expected #{this} to be NaN'
	        , 'expected #{this} not to be NaN'
	    );
	  });

	  /**
	   * ### .exist
	   *
	   * Asserts that the target is neither `null` nor `undefined`.
	   *
	   *     var foo = 'hi'
	   *       , bar = null
	   *       , baz;
	   *
	   *     expect(foo).to.exist;
	   *     expect(bar).to.not.exist;
	   *     expect(baz).to.not.exist;
	   *
	   * @name exist
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('exist', function () {
	    this.assert(
	        null != flag(this, 'object')
	      , 'expected #{this} to exist'
	      , 'expected #{this} to not exist'
	    );
	  });


	  /**
	   * ### .empty
	   *
	   * Asserts that the target's length is `0`. For arrays and strings, it checks
	   * the `length` property. For objects, it gets the count of
	   * enumerable keys.
	   *
	   *     expect([]).to.be.empty;
	   *     expect('').to.be.empty;
	   *     expect({}).to.be.empty;
	   *
	   * @name empty
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('empty', function () {
	    var obj = flag(this, 'object')
	      , expected = obj;

	    if (Array.isArray(obj) || 'string' === typeof object) {
	      expected = obj.length;
	    } else if (typeof obj === 'object') {
	      expected = Object.keys(obj).length;
	    }

	    this.assert(
	        !expected
	      , 'expected #{this} to be empty'
	      , 'expected #{this} not to be empty'
	    );
	  });

	  /**
	   * ### .arguments
	   *
	   * Asserts that the target is an arguments object.
	   *
	   *     function test () {
	   *       expect(arguments).to.be.arguments;
	   *     }
	   *
	   * @name arguments
	   * @alias Arguments
	   * @namespace BDD
	   * @api public
	   */

	  function checkArguments () {
	    var obj = flag(this, 'object')
	      , type = Object.prototype.toString.call(obj);
	    this.assert(
	        '[object Arguments]' === type
	      , 'expected #{this} to be arguments but got ' + type
	      , 'expected #{this} to not be arguments'
	    );
	  }

	  Assertion.addProperty('arguments', checkArguments);
	  Assertion.addProperty('Arguments', checkArguments);

	  /**
	   * ### .equal(value)
	   *
	   * Asserts that the target is strictly equal (`===`) to `value`.
	   * Alternately, if the `deep` flag is set, asserts that
	   * the target is deeply equal to `value`.
	   *
	   *     expect('hello').to.equal('hello');
	   *     expect(42).to.equal(42);
	   *     expect(1).to.not.equal(true);
	   *     expect({ foo: 'bar' }).to.not.equal({ foo: 'bar' });
	   *     expect({ foo: 'bar' }).to.deep.equal({ foo: 'bar' });
	   *
	   * @name equal
	   * @alias equals
	   * @alias eq
	   * @alias deep.equal
	   * @param {Mixed} value
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertEqual (val, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    if (flag(this, 'deep')) {
	      return this.eql(val);
	    } else {
	      this.assert(
	          val === obj
	        , 'expected #{this} to equal #{exp}'
	        , 'expected #{this} to not equal #{exp}'
	        , val
	        , this._obj
	        , true
	      );
	    }
	  }

	  Assertion.addMethod('equal', assertEqual);
	  Assertion.addMethod('equals', assertEqual);
	  Assertion.addMethod('eq', assertEqual);

	  /**
	   * ### .eql(value)
	   *
	   * Asserts that the target is deeply equal to `value`.
	   *
	   *     expect({ foo: 'bar' }).to.eql({ foo: 'bar' });
	   *     expect([ 1, 2, 3 ]).to.eql([ 1, 2, 3 ]);
	   *
	   * @name eql
	   * @alias eqls
	   * @param {Mixed} value
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertEql(obj, msg) {
	    if (msg) flag(this, 'message', msg);
	    this.assert(
	        _.eql(obj, flag(this, 'object'))
	      , 'expected #{this} to deeply equal #{exp}'
	      , 'expected #{this} to not deeply equal #{exp}'
	      , obj
	      , this._obj
	      , true
	    );
	  }

	  Assertion.addMethod('eql', assertEql);
	  Assertion.addMethod('eqls', assertEql);

	  /**
	   * ### .above(value)
	   *
	   * Asserts that the target is greater than `value`.
	   *
	   *     expect(10).to.be.above(5);
	   *
	   * Can also be used in conjunction with `length` to
	   * assert a minimum length. The benefit being a
	   * more informative error message than if the length
	   * was supplied directly.
	   *
	   *     expect('foo').to.have.length.above(2);
	   *     expect([ 1, 2, 3 ]).to.have.length.above(2);
	   *
	   * @name above
	   * @alias gt
	   * @alias greaterThan
	   * @param {Number} value
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertAbove (n, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    if (flag(this, 'doLength')) {
	      new Assertion(obj, msg).to.have.property('length');
	      var len = obj.length;
	      this.assert(
	          len > n
	        , 'expected #{this} to have a length above #{exp} but got #{act}'
	        , 'expected #{this} to not have a length above #{exp}'
	        , n
	        , len
	      );
	    } else {
	      this.assert(
	          obj > n
	        , 'expected #{this} to be above ' + n
	        , 'expected #{this} to be at most ' + n
	      );
	    }
	  }

	  Assertion.addMethod('above', assertAbove);
	  Assertion.addMethod('gt', assertAbove);
	  Assertion.addMethod('greaterThan', assertAbove);

	  /**
	   * ### .least(value)
	   *
	   * Asserts that the target is greater than or equal to `value`.
	   *
	   *     expect(10).to.be.at.least(10);
	   *
	   * Can also be used in conjunction with `length` to
	   * assert a minimum length. The benefit being a
	   * more informative error message than if the length
	   * was supplied directly.
	   *
	   *     expect('foo').to.have.length.of.at.least(2);
	   *     expect([ 1, 2, 3 ]).to.have.length.of.at.least(3);
	   *
	   * @name least
	   * @alias gte
	   * @param {Number} value
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertLeast (n, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    if (flag(this, 'doLength')) {
	      new Assertion(obj, msg).to.have.property('length');
	      var len = obj.length;
	      this.assert(
	          len >= n
	        , 'expected #{this} to have a length at least #{exp} but got #{act}'
	        , 'expected #{this} to have a length below #{exp}'
	        , n
	        , len
	      );
	    } else {
	      this.assert(
	          obj >= n
	        , 'expected #{this} to be at least ' + n
	        , 'expected #{this} to be below ' + n
	      );
	    }
	  }

	  Assertion.addMethod('least', assertLeast);
	  Assertion.addMethod('gte', assertLeast);

	  /**
	   * ### .below(value)
	   *
	   * Asserts that the target is less than `value`.
	   *
	   *     expect(5).to.be.below(10);
	   *
	   * Can also be used in conjunction with `length` to
	   * assert a maximum length. The benefit being a
	   * more informative error message than if the length
	   * was supplied directly.
	   *
	   *     expect('foo').to.have.length.below(4);
	   *     expect([ 1, 2, 3 ]).to.have.length.below(4);
	   *
	   * @name below
	   * @alias lt
	   * @alias lessThan
	   * @param {Number} value
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertBelow (n, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    if (flag(this, 'doLength')) {
	      new Assertion(obj, msg).to.have.property('length');
	      var len = obj.length;
	      this.assert(
	          len < n
	        , 'expected #{this} to have a length below #{exp} but got #{act}'
	        , 'expected #{this} to not have a length below #{exp}'
	        , n
	        , len
	      );
	    } else {
	      this.assert(
	          obj < n
	        , 'expected #{this} to be below ' + n
	        , 'expected #{this} to be at least ' + n
	      );
	    }
	  }

	  Assertion.addMethod('below', assertBelow);
	  Assertion.addMethod('lt', assertBelow);
	  Assertion.addMethod('lessThan', assertBelow);

	  /**
	   * ### .most(value)
	   *
	   * Asserts that the target is less than or equal to `value`.
	   *
	   *     expect(5).to.be.at.most(5);
	   *
	   * Can also be used in conjunction with `length` to
	   * assert a maximum length. The benefit being a
	   * more informative error message than if the length
	   * was supplied directly.
	   *
	   *     expect('foo').to.have.length.of.at.most(4);
	   *     expect([ 1, 2, 3 ]).to.have.length.of.at.most(3);
	   *
	   * @name most
	   * @alias lte
	   * @param {Number} value
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertMost (n, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    if (flag(this, 'doLength')) {
	      new Assertion(obj, msg).to.have.property('length');
	      var len = obj.length;
	      this.assert(
	          len <= n
	        , 'expected #{this} to have a length at most #{exp} but got #{act}'
	        , 'expected #{this} to have a length above #{exp}'
	        , n
	        , len
	      );
	    } else {
	      this.assert(
	          obj <= n
	        , 'expected #{this} to be at most ' + n
	        , 'expected #{this} to be above ' + n
	      );
	    }
	  }

	  Assertion.addMethod('most', assertMost);
	  Assertion.addMethod('lte', assertMost);

	  /**
	   * ### .within(start, finish)
	   *
	   * Asserts that the target is within a range.
	   *
	   *     expect(7).to.be.within(5,10);
	   *
	   * Can also be used in conjunction with `length` to
	   * assert a length range. The benefit being a
	   * more informative error message than if the length
	   * was supplied directly.
	   *
	   *     expect('foo').to.have.length.within(2,4);
	   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);
	   *
	   * @name within
	   * @param {Number} start lowerbound inclusive
	   * @param {Number} finish upperbound inclusive
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addMethod('within', function (start, finish, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object')
	      , range = start + '..' + finish;
	    if (flag(this, 'doLength')) {
	      new Assertion(obj, msg).to.have.property('length');
	      var len = obj.length;
	      this.assert(
	          len >= start && len <= finish
	        , 'expected #{this} to have a length within ' + range
	        , 'expected #{this} to not have a length within ' + range
	      );
	    } else {
	      this.assert(
	          obj >= start && obj <= finish
	        , 'expected #{this} to be within ' + range
	        , 'expected #{this} to not be within ' + range
	      );
	    }
	  });

	  /**
	   * ### .instanceof(constructor)
	   *
	   * Asserts that the target is an instance of `constructor`.
	   *
	   *     var Tea = function (name) { this.name = name; }
	   *       , Chai = new Tea('chai');
	   *
	   *     expect(Chai).to.be.an.instanceof(Tea);
	   *     expect([ 1, 2, 3 ]).to.be.instanceof(Array);
	   *
	   * @name instanceof
	   * @param {Constructor} constructor
	   * @param {String} message _optional_
	   * @alias instanceOf
	   * @namespace BDD
	   * @api public
	   */

	  function assertInstanceOf (constructor, msg) {
	    if (msg) flag(this, 'message', msg);
	    var name = _.getName(constructor);
	    this.assert(
	        flag(this, 'object') instanceof constructor
	      , 'expected #{this} to be an instance of ' + name
	      , 'expected #{this} to not be an instance of ' + name
	    );
	  };

	  Assertion.addMethod('instanceof', assertInstanceOf);
	  Assertion.addMethod('instanceOf', assertInstanceOf);

	  /**
	   * ### .property(name, [value])
	   *
	   * Asserts that the target has a property `name`, optionally asserting that
	   * the value of that property is strictly equal to  `value`.
	   * If the `deep` flag is set, you can use dot- and bracket-notation for deep
	   * references into objects and arrays.
	   *
	   *     // simple referencing
	   *     var obj = { foo: 'bar' };
	   *     expect(obj).to.have.property('foo');
	   *     expect(obj).to.have.property('foo', 'bar');
	   *
	   *     // deep referencing
	   *     var deepObj = {
	   *         green: { tea: 'matcha' }
	   *       , teas: [ 'chai', 'matcha', { tea: 'konacha' } ]
	   *     };
	   *
	   *     expect(deepObj).to.have.deep.property('green.tea', 'matcha');
	   *     expect(deepObj).to.have.deep.property('teas[1]', 'matcha');
	   *     expect(deepObj).to.have.deep.property('teas[2].tea', 'konacha');
	   *
	   * You can also use an array as the starting point of a `deep.property`
	   * assertion, or traverse nested arrays.
	   *
	   *     var arr = [
	   *         [ 'chai', 'matcha', 'konacha' ]
	   *       , [ { tea: 'chai' }
	   *         , { tea: 'matcha' }
	   *         , { tea: 'konacha' } ]
	   *     ];
	   *
	   *     expect(arr).to.have.deep.property('[0][1]', 'matcha');
	   *     expect(arr).to.have.deep.property('[1][2].tea', 'konacha');
	   *
	   * Furthermore, `property` changes the subject of the assertion
	   * to be the value of that property from the original object. This
	   * permits for further chainable assertions on that property.
	   *
	   *     expect(obj).to.have.property('foo')
	   *       .that.is.a('string');
	   *     expect(deepObj).to.have.property('green')
	   *       .that.is.an('object')
	   *       .that.deep.equals({ tea: 'matcha' });
	   *     expect(deepObj).to.have.property('teas')
	   *       .that.is.an('array')
	   *       .with.deep.property('[2]')
	   *         .that.deep.equals({ tea: 'konacha' });
	   *
	   * Note that dots and bracket in `name` must be backslash-escaped when
	   * the `deep` flag is set, while they must NOT be escaped when the `deep`
	   * flag is not set.
	   *
	   *     // simple referencing
	   *     var css = { '.link[target]': 42 };
	   *     expect(css).to.have.property('.link[target]', 42);
	   *
	   *     // deep referencing
	   *     var deepCss = { '.link': { '[target]': 42 }};
	   *     expect(deepCss).to.have.deep.property('\\.link.\\[target\\]', 42);
	   *
	   * @name property
	   * @alias deep.property
	   * @param {String} name
	   * @param {Mixed} value (optional)
	   * @param {String} message _optional_
	   * @returns value of property for chaining
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addMethod('property', function (name, val, msg) {
	    if (msg) flag(this, 'message', msg);

	    var isDeep = !!flag(this, 'deep')
	      , descriptor = isDeep ? 'deep property ' : 'property '
	      , negate = flag(this, 'negate')
	      , obj = flag(this, 'object')
	      , pathInfo = isDeep ? _.getPathInfo(name, obj) : null
	      , hasProperty = isDeep
	        ? pathInfo.exists
	        : _.hasProperty(name, obj)
	      , value = isDeep
	        ? pathInfo.value
	        : obj[name];

	    if (negate && arguments.length > 1) {
	      if (undefined === value) {
	        msg = (msg != null) ? msg + ': ' : '';
	        throw new Error(msg + _.inspect(obj) + ' has no ' + descriptor + _.inspect(name));
	      }
	    } else {
	      this.assert(
	          hasProperty
	        , 'expected #{this} to have a ' + descriptor + _.inspect(name)
	        , 'expected #{this} to not have ' + descriptor + _.inspect(name));
	    }

	    if (arguments.length > 1) {
	      this.assert(
	          val === value
	        , 'expected #{this} to have a ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'
	        , 'expected #{this} to not have a ' + descriptor + _.inspect(name) + ' of #{act}'
	        , val
	        , value
	      );
	    }

	    flag(this, 'object', value);
	  });


	  /**
	   * ### .ownProperty(name)
	   *
	   * Asserts that the target has an own property `name`.
	   *
	   *     expect('test').to.have.ownProperty('length');
	   *
	   * @name ownProperty
	   * @alias haveOwnProperty
	   * @param {String} name
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertOwnProperty (name, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    this.assert(
	        obj.hasOwnProperty(name)
	      , 'expected #{this} to have own property ' + _.inspect(name)
	      , 'expected #{this} to not have own property ' + _.inspect(name)
	    );
	  }

	  Assertion.addMethod('ownProperty', assertOwnProperty);
	  Assertion.addMethod('haveOwnProperty', assertOwnProperty);

	  /**
	   * ### .ownPropertyDescriptor(name[, descriptor[, message]])
	   *
	   * Asserts that the target has an own property descriptor `name`, that optionally matches `descriptor`.
	   *
	   *     expect('test').to.have.ownPropertyDescriptor('length');
	   *     expect('test').to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 4 });
	   *     expect('test').not.to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 3 });
	   *     expect('test').ownPropertyDescriptor('length').to.have.property('enumerable', false);
	   *     expect('test').ownPropertyDescriptor('length').to.have.keys('value');
	   *
	   * @name ownPropertyDescriptor
	   * @alias haveOwnPropertyDescriptor
	   * @param {String} name
	   * @param {Object} descriptor _optional_
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertOwnPropertyDescriptor (name, descriptor, msg) {
	    if (typeof descriptor === 'string') {
	      msg = descriptor;
	      descriptor = null;
	    }
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);
	    if (actualDescriptor && descriptor) {
	      this.assert(
	          _.eql(descriptor, actualDescriptor)
	        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)
	        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)
	        , descriptor
	        , actualDescriptor
	        , true
	      );
	    } else {
	      this.assert(
	          actualDescriptor
	        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)
	        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)
	      );
	    }
	    flag(this, 'object', actualDescriptor);
	  }

	  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);
	  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);

	  /**
	   * ### .length
	   *
	   * Sets the `doLength` flag later used as a chain precursor to a value
	   * comparison for the `length` property.
	   *
	   *     expect('foo').to.have.length.above(2);
	   *     expect([ 1, 2, 3 ]).to.have.length.above(2);
	   *     expect('foo').to.have.length.below(4);
	   *     expect([ 1, 2, 3 ]).to.have.length.below(4);
	   *     expect('foo').to.have.length.within(2,4);
	   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);
	   *
	   * *Deprecation notice:* Using `length` as an assertion will be deprecated
	   * in version 2.4.0 and removed in 3.0.0. Code using the old style of
	   * asserting for `length` property value using `length(value)` should be
	   * switched to use `lengthOf(value)` instead.
	   *
	   * @name length
	   * @namespace BDD
	   * @api public
	   */

	  /**
	   * ### .lengthOf(value[, message])
	   *
	   * Asserts that the target's `length` property has
	   * the expected value.
	   *
	   *     expect([ 1, 2, 3]).to.have.lengthOf(3);
	   *     expect('foobar').to.have.lengthOf(6);
	   *
	   * @name lengthOf
	   * @param {Number} length
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertLengthChain () {
	    flag(this, 'doLength', true);
	  }

	  function assertLength (n, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    new Assertion(obj, msg).to.have.property('length');
	    var len = obj.length;

	    this.assert(
	        len == n
	      , 'expected #{this} to have a length of #{exp} but got #{act}'
	      , 'expected #{this} to not have a length of #{act}'
	      , n
	      , len
	    );
	  }

	  Assertion.addChainableMethod('length', assertLength, assertLengthChain);
	  Assertion.addMethod('lengthOf', assertLength);

	  /**
	   * ### .match(regexp)
	   *
	   * Asserts that the target matches a regular expression.
	   *
	   *     expect('foobar').to.match(/^foo/);
	   *
	   * @name match
	   * @alias matches
	   * @param {RegExp} RegularExpression
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */
	  function assertMatch(re, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    this.assert(
	        re.exec(obj)
	      , 'expected #{this} to match ' + re
	      , 'expected #{this} not to match ' + re
	    );
	  }

	  Assertion.addMethod('match', assertMatch);
	  Assertion.addMethod('matches', assertMatch);

	  /**
	   * ### .string(string)
	   *
	   * Asserts that the string target contains another string.
	   *
	   *     expect('foobar').to.have.string('bar');
	   *
	   * @name string
	   * @param {String} string
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addMethod('string', function (str, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    new Assertion(obj, msg).is.a('string');

	    this.assert(
	        ~obj.indexOf(str)
	      , 'expected #{this} to contain ' + _.inspect(str)
	      , 'expected #{this} to not contain ' + _.inspect(str)
	    );
	  });


	  /**
	   * ### .keys(key1, [key2], [...])
	   *
	   * Asserts that the target contains any or all of the passed-in keys.
	   * Use in combination with `any`, `all`, `contains`, or `have` will affect
	   * what will pass.
	   *
	   * When used in conjunction with `any`, at least one key that is passed
	   * in must exist in the target object. This is regardless whether or not
	   * the `have` or `contain` qualifiers are used. Note, either `any` or `all`
	   * should be used in the assertion. If neither are used, the assertion is
	   * defaulted to `all`.
	   *
	   * When both `all` and `contain` are used, the target object must have at
	   * least all of the passed-in keys but may have more keys not listed.
	   *
	   * When both `all` and `have` are used, the target object must both contain
	   * all of the passed-in keys AND the number of keys in the target object must
	   * match the number of keys passed in (in other words, a target object must
	   * have all and only all of the passed-in keys).
	   *
	   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo', 'baz');
	   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo');
	   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys('bar', 'baz');
	   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys(['foo']);
	   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys({'foo': 6});
	   *     expect({ foo: 1, bar: 2 }).to.have.all.keys(['bar', 'foo']);
	   *     expect({ foo: 1, bar: 2 }).to.have.all.keys({'bar': 6, 'foo': 7});
	   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys(['bar', 'foo']);
	   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys({'bar': 6});
	   *
	   *
	   * @name keys
	   * @alias key
	   * @param {...String|Array|Object} keys
	   * @namespace BDD
	   * @api public
	   */

	  function assertKeys (keys) {
	    var obj = flag(this, 'object')
	      , str
	      , ok = true
	      , mixedArgsMsg = 'keys must be given single argument of Array|Object|String, or multiple String arguments';

	    switch (_.type(keys)) {
	      case "array":
	        if (arguments.length > 1) throw (new Error(mixedArgsMsg));
	        break;
	      case "object":
	        if (arguments.length > 1) throw (new Error(mixedArgsMsg));
	        keys = Object.keys(keys);
	        break;
	      default:
	        keys = Array.prototype.slice.call(arguments);
	    }

	    if (!keys.length) throw new Error('keys required');

	    var actual = Object.keys(obj)
	      , expected = keys
	      , len = keys.length
	      , any = flag(this, 'any')
	      , all = flag(this, 'all');

	    if (!any && !all) {
	      all = true;
	    }

	    // Has any
	    if (any) {
	      var intersection = expected.filter(function(key) {
	        return ~actual.indexOf(key);
	      });
	      ok = intersection.length > 0;
	    }

	    // Has all
	    if (all) {
	      ok = keys.every(function(key){
	        return ~actual.indexOf(key);
	      });
	      if (!flag(this, 'negate') && !flag(this, 'contains')) {
	        ok = ok && keys.length == actual.length;
	      }
	    }

	    // Key string
	    if (len > 1) {
	      keys = keys.map(function(key){
	        return _.inspect(key);
	      });
	      var last = keys.pop();
	      if (all) {
	        str = keys.join(', ') + ', and ' + last;
	      }
	      if (any) {
	        str = keys.join(', ') + ', or ' + last;
	      }
	    } else {
	      str = _.inspect(keys[0]);
	    }

	    // Form
	    str = (len > 1 ? 'keys ' : 'key ') + str;

	    // Have / include
	    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;

	    // Assertion
	    this.assert(
	        ok
	      , 'expected #{this} to ' + str
	      , 'expected #{this} to not ' + str
	      , expected.slice(0).sort()
	      , actual.sort()
	      , true
	    );
	  }

	  Assertion.addMethod('keys', assertKeys);
	  Assertion.addMethod('key', assertKeys);

	  /**
	   * ### .throw(constructor)
	   *
	   * Asserts that the function target will throw a specific error, or specific type of error
	   * (as determined using `instanceof`), optionally with a RegExp or string inclusion test
	   * for the error's message.
	   *
	   *     var err = new ReferenceError('This is a bad function.');
	   *     var fn = function () { throw err; }
	   *     expect(fn).to.throw(ReferenceError);
	   *     expect(fn).to.throw(Error);
	   *     expect(fn).to.throw(/bad function/);
	   *     expect(fn).to.not.throw('good function');
	   *     expect(fn).to.throw(ReferenceError, /bad function/);
	   *     expect(fn).to.throw(err);
	   *
	   * Please note that when a throw expectation is negated, it will check each
	   * parameter independently, starting with error constructor type. The appropriate way
	   * to check for the existence of a type of error but for a message that does not match
	   * is to use `and`.
	   *
	   *     expect(fn).to.throw(ReferenceError)
	   *        .and.not.throw(/good function/);
	   *
	   * @name throw
	   * @alias throws
	   * @alias Throw
	   * @param {ErrorConstructor} constructor
	   * @param {String|RegExp} expected error message
	   * @param {String} message _optional_
	   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
	   * @returns error for chaining (null if no error)
	   * @namespace BDD
	   * @api public
	   */

	  function assertThrows (constructor, errMsg, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    new Assertion(obj, msg).is.a('function');

	    var thrown = false
	      , desiredError = null
	      , name = null
	      , thrownError = null;

	    if (arguments.length === 0) {
	      errMsg = null;
	      constructor = null;
	    } else if (constructor && (constructor instanceof RegExp || 'string' === typeof constructor)) {
	      errMsg = constructor;
	      constructor = null;
	    } else if (constructor && constructor instanceof Error) {
	      desiredError = constructor;
	      constructor = null;
	      errMsg = null;
	    } else if (typeof constructor === 'function') {
	      name = constructor.prototype.name;
	      if (!name || (name === 'Error' && constructor !== Error)) {
	        name = constructor.name || (new constructor()).name;
	      }
	    } else {
	      constructor = null;
	    }

	    try {
	      obj();
	    } catch (err) {
	      // first, check desired error
	      if (desiredError) {
	        this.assert(
	            err === desiredError
	          , 'expected #{this} to throw #{exp} but #{act} was thrown'
	          , 'expected #{this} to not throw #{exp}'
	          , (desiredError instanceof Error ? desiredError.toString() : desiredError)
	          , (err instanceof Error ? err.toString() : err)
	        );

	        flag(this, 'object', err);
	        return this;
	      }

	      // next, check constructor
	      if (constructor) {
	        this.assert(
	            err instanceof constructor
	          , 'expected #{this} to throw #{exp} but #{act} was thrown'
	          , 'expected #{this} to not throw #{exp} but #{act} was thrown'
	          , name
	          , (err instanceof Error ? err.toString() : err)
	        );

	        if (!errMsg) {
	          flag(this, 'object', err);
	          return this;
	        }
	      }

	      // next, check message
	      var message = 'error' === _.type(err) && "message" in err
	        ? err.message
	        : '' + err;

	      if ((message != null) && errMsg && errMsg instanceof RegExp) {
	        this.assert(
	            errMsg.exec(message)
	          , 'expected #{this} to throw error matching #{exp} but got #{act}'
	          , 'expected #{this} to throw error not matching #{exp}'
	          , errMsg
	          , message
	        );

	        flag(this, 'object', err);
	        return this;
	      } else if ((message != null) && errMsg && 'string' === typeof errMsg) {
	        this.assert(
	            ~message.indexOf(errMsg)
	          , 'expected #{this} to throw error including #{exp} but got #{act}'
	          , 'expected #{this} to throw error not including #{act}'
	          , errMsg
	          , message
	        );

	        flag(this, 'object', err);
	        return this;
	      } else {
	        thrown = true;
	        thrownError = err;
	      }
	    }

	    var actuallyGot = ''
	      , expectedThrown = name !== null
	        ? name
	        : desiredError
	          ? '#{exp}' //_.inspect(desiredError)
	          : 'an error';

	    if (thrown) {
	      actuallyGot = ' but #{act} was thrown'
	    }

	    this.assert(
	        thrown === true
	      , 'expected #{this} to throw ' + expectedThrown + actuallyGot
	      , 'expected #{this} to not throw ' + expectedThrown + actuallyGot
	      , (desiredError instanceof Error ? desiredError.toString() : desiredError)
	      , (thrownError instanceof Error ? thrownError.toString() : thrownError)
	    );

	    flag(this, 'object', thrownError);
	  };

	  Assertion.addMethod('throw', assertThrows);
	  Assertion.addMethod('throws', assertThrows);
	  Assertion.addMethod('Throw', assertThrows);

	  /**
	   * ### .respondTo(method)
	   *
	   * Asserts that the object or class target will respond to a method.
	   *
	   *     Klass.prototype.bar = function(){};
	   *     expect(Klass).to.respondTo('bar');
	   *     expect(obj).to.respondTo('bar');
	   *
	   * To check if a constructor will respond to a static function,
	   * set the `itself` flag.
	   *
	   *     Klass.baz = function(){};
	   *     expect(Klass).itself.to.respondTo('baz');
	   *
	   * @name respondTo
	   * @alias respondsTo
	   * @param {String} method
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function respondTo (method, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object')
	      , itself = flag(this, 'itself')
	      , context = ('function' === _.type(obj) && !itself)
	        ? obj.prototype[method]
	        : obj[method];

	    this.assert(
	        'function' === typeof context
	      , 'expected #{this} to respond to ' + _.inspect(method)
	      , 'expected #{this} to not respond to ' + _.inspect(method)
	    );
	  }

	  Assertion.addMethod('respondTo', respondTo);
	  Assertion.addMethod('respondsTo', respondTo);

	  /**
	   * ### .itself
	   *
	   * Sets the `itself` flag, later used by the `respondTo` assertion.
	   *
	   *     function Foo() {}
	   *     Foo.bar = function() {}
	   *     Foo.prototype.baz = function() {}
	   *
	   *     expect(Foo).itself.to.respondTo('bar');
	   *     expect(Foo).itself.not.to.respondTo('baz');
	   *
	   * @name itself
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('itself', function () {
	    flag(this, 'itself', true);
	  });

	  /**
	   * ### .satisfy(method)
	   *
	   * Asserts that the target passes a given truth test.
	   *
	   *     expect(1).to.satisfy(function(num) { return num > 0; });
	   *
	   * @name satisfy
	   * @alias satisfies
	   * @param {Function} matcher
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function satisfy (matcher, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    var result = matcher(obj);
	    this.assert(
	        result
	      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)
	      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)
	      , this.negate ? false : true
	      , result
	    );
	  }

	  Assertion.addMethod('satisfy', satisfy);
	  Assertion.addMethod('satisfies', satisfy);

	  /**
	   * ### .closeTo(expected, delta)
	   *
	   * Asserts that the target is equal `expected`, to within a +/- `delta` range.
	   *
	   *     expect(1.5).to.be.closeTo(1, 0.5);
	   *
	   * @name closeTo
	   * @alias approximately
	   * @param {Number} expected
	   * @param {Number} delta
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function closeTo(expected, delta, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');

	    new Assertion(obj, msg).is.a('number');
	    if (_.type(expected) !== 'number' || _.type(delta) !== 'number') {
	      throw new Error('the arguments to closeTo or approximately must be numbers');
	    }

	    this.assert(
	        Math.abs(obj - expected) <= delta
	      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta
	      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta
	    );
	  }

	  Assertion.addMethod('closeTo', closeTo);
	  Assertion.addMethod('approximately', closeTo);

	  function isSubsetOf(subset, superset, cmp) {
	    return subset.every(function(elem) {
	      if (!cmp) return superset.indexOf(elem) !== -1;

	      return superset.some(function(elem2) {
	        return cmp(elem, elem2);
	      });
	    })
	  }

	  /**
	   * ### .members(set)
	   *
	   * Asserts that the target is a superset of `set`,
	   * or that the target and `set` have the same strictly-equal (===) members.
	   * Alternately, if the `deep` flag is set, set members are compared for deep
	   * equality.
	   *
	   *     expect([1, 2, 3]).to.include.members([3, 2]);
	   *     expect([1, 2, 3]).to.not.include.members([3, 2, 8]);
	   *
	   *     expect([4, 2]).to.have.members([2, 4]);
	   *     expect([5, 2]).to.not.have.members([5, 2, 1]);
	   *
	   *     expect([{ id: 1 }]).to.deep.include.members([{ id: 1 }]);
	   *
	   * @name members
	   * @param {Array} set
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addMethod('members', function (subset, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');

	    new Assertion(obj).to.be.an('array');
	    new Assertion(subset).to.be.an('array');

	    var cmp = flag(this, 'deep') ? _.eql : undefined;

	    if (flag(this, 'contains')) {
	      return this.assert(
	          isSubsetOf(subset, obj, cmp)
	        , 'expected #{this} to be a superset of #{act}'
	        , 'expected #{this} to not be a superset of #{act}'
	        , obj
	        , subset
	      );
	    }

	    this.assert(
	        isSubsetOf(obj, subset, cmp) && isSubsetOf(subset, obj, cmp)
	        , 'expected #{this} to have the same members as #{act}'
	        , 'expected #{this} to not have the same members as #{act}'
	        , obj
	        , subset
	    );
	  });

	  /**
	   * ### .oneOf(list)
	   *
	   * Assert that a value appears somewhere in the top level of array `list`.
	   *
	   *     expect('a').to.be.oneOf(['a', 'b', 'c']);
	   *     expect(9).to.not.be.oneOf(['z']);
	   *     expect([3]).to.not.be.oneOf([1, 2, [3]]);
	   *
	   *     var three = [3];
	   *     // for object-types, contents are not compared
	   *     expect(three).to.not.be.oneOf([1, 2, [3]]);
	   *     // comparing references works
	   *     expect(three).to.be.oneOf([1, 2, three]);
	   *
	   * @name oneOf
	   * @param {Array<*>} list
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function oneOf (list, msg) {
	    if (msg) flag(this, 'message', msg);
	    var expected = flag(this, 'object');
	    new Assertion(list).to.be.an('array');

	    this.assert(
	        list.indexOf(expected) > -1
	      , 'expected #{this} to be one of #{exp}'
	      , 'expected #{this} to not be one of #{exp}'
	      , list
	      , expected
	    );
	  }

	  Assertion.addMethod('oneOf', oneOf);


	  /**
	   * ### .change(function)
	   *
	   * Asserts that a function changes an object property
	   *
	   *     var obj = { val: 10 };
	   *     var fn = function() { obj.val += 3 };
	   *     var noChangeFn = function() { return 'foo' + 'bar'; }
	   *     expect(fn).to.change(obj, 'val');
	   *     expect(noChangeFn).to.not.change(obj, 'val')
	   *
	   * @name change
	   * @alias changes
	   * @alias Change
	   * @param {String} object
	   * @param {String} property name
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertChanges (object, prop, msg) {
	    if (msg) flag(this, 'message', msg);
	    var fn = flag(this, 'object');
	    new Assertion(object, msg).to.have.property(prop);
	    new Assertion(fn).is.a('function');

	    var initial = object[prop];
	    fn();

	    this.assert(
	      initial !== object[prop]
	      , 'expected .' + prop + ' to change'
	      , 'expected .' + prop + ' to not change'
	    );
	  }

	  Assertion.addChainableMethod('change', assertChanges);
	  Assertion.addChainableMethod('changes', assertChanges);

	  /**
	   * ### .increase(function)
	   *
	   * Asserts that a function increases an object property
	   *
	   *     var obj = { val: 10 };
	   *     var fn = function() { obj.val = 15 };
	   *     expect(fn).to.increase(obj, 'val');
	   *
	   * @name increase
	   * @alias increases
	   * @alias Increase
	   * @param {String} object
	   * @param {String} property name
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertIncreases (object, prop, msg) {
	    if (msg) flag(this, 'message', msg);
	    var fn = flag(this, 'object');
	    new Assertion(object, msg).to.have.property(prop);
	    new Assertion(fn).is.a('function');

	    var initial = object[prop];
	    fn();

	    this.assert(
	      object[prop] - initial > 0
	      , 'expected .' + prop + ' to increase'
	      , 'expected .' + prop + ' to not increase'
	    );
	  }

	  Assertion.addChainableMethod('increase', assertIncreases);
	  Assertion.addChainableMethod('increases', assertIncreases);

	  /**
	   * ### .decrease(function)
	   *
	   * Asserts that a function decreases an object property
	   *
	   *     var obj = { val: 10 };
	   *     var fn = function() { obj.val = 5 };
	   *     expect(fn).to.decrease(obj, 'val');
	   *
	   * @name decrease
	   * @alias decreases
	   * @alias Decrease
	   * @param {String} object
	   * @param {String} property name
	   * @param {String} message _optional_
	   * @namespace BDD
	   * @api public
	   */

	  function assertDecreases (object, prop, msg) {
	    if (msg) flag(this, 'message', msg);
	    var fn = flag(this, 'object');
	    new Assertion(object, msg).to.have.property(prop);
	    new Assertion(fn).is.a('function');

	    var initial = object[prop];
	    fn();

	    this.assert(
	      object[prop] - initial < 0
	      , 'expected .' + prop + ' to decrease'
	      , 'expected .' + prop + ' to not decrease'
	    );
	  }

	  Assertion.addChainableMethod('decrease', assertDecreases);
	  Assertion.addChainableMethod('decreases', assertDecreases);

	  /**
	   * ### .extensible
	   *
	   * Asserts that the target is extensible (can have new properties added to
	   * it).
	   *
	   *     var nonExtensibleObject = Object.preventExtensions({});
	   *     var sealedObject = Object.seal({});
	   *     var frozenObject = Object.freeze({});
	   *
	   *     expect({}).to.be.extensible;
	   *     expect(nonExtensibleObject).to.not.be.extensible;
	   *     expect(sealedObject).to.not.be.extensible;
	   *     expect(frozenObject).to.not.be.extensible;
	   *
	   * @name extensible
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('extensible', function() {
	    var obj = flag(this, 'object');

	    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.
	    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.
	    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible
	    // The following provides ES6 behavior when a TypeError is thrown under ES5.

	    var isExtensible;

	    try {
	      isExtensible = Object.isExtensible(obj);
	    } catch (err) {
	      if (err instanceof TypeError) isExtensible = false;
	      else throw err;
	    }

	    this.assert(
	      isExtensible
	      , 'expected #{this} to be extensible'
	      , 'expected #{this} to not be extensible'
	    );
	  });

	  /**
	   * ### .sealed
	   *
	   * Asserts that the target is sealed (cannot have new properties added to it
	   * and its existing properties cannot be removed).
	   *
	   *     var sealedObject = Object.seal({});
	   *     var frozenObject = Object.freeze({});
	   *
	   *     expect(sealedObject).to.be.sealed;
	   *     expect(frozenObject).to.be.sealed;
	   *     expect({}).to.not.be.sealed;
	   *
	   * @name sealed
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('sealed', function() {
	    var obj = flag(this, 'object');

	    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.
	    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.
	    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed
	    // The following provides ES6 behavior when a TypeError is thrown under ES5.

	    var isSealed;

	    try {
	      isSealed = Object.isSealed(obj);
	    } catch (err) {
	      if (err instanceof TypeError) isSealed = true;
	      else throw err;
	    }

	    this.assert(
	      isSealed
	      , 'expected #{this} to be sealed'
	      , 'expected #{this} to not be sealed'
	    );
	  });

	  /**
	   * ### .frozen
	   *
	   * Asserts that the target is frozen (cannot have new properties added to it
	   * and its existing properties cannot be modified).
	   *
	   *     var frozenObject = Object.freeze({});
	   *
	   *     expect(frozenObject).to.be.frozen;
	   *     expect({}).to.not.be.frozen;
	   *
	   * @name frozen
	   * @namespace BDD
	   * @api public
	   */

	  Assertion.addProperty('frozen', function() {
	    var obj = flag(this, 'object');

	    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.
	    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.
	    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen
	    // The following provides ES6 behavior when a TypeError is thrown under ES5.

	    var isFrozen;

	    try {
	      isFrozen = Object.isFrozen(obj);
	    } catch (err) {
	      if (err instanceof TypeError) isFrozen = true;
	      else throw err;
	    }

	    this.assert(
	      isFrozen
	      , 'expected #{this} to be frozen'
	      , 'expected #{this} to not be frozen'
	    );
	  });
	};


/***/ },
/* 341 */
/***/ function(module, exports) {

	/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	module.exports = function (chai, util) {
	  chai.expect = function (val, message) {
	    return new chai.Assertion(val, message);
	  };

	  /**
	   * ### .fail(actual, expected, [message], [operator])
	   *
	   * Throw a failure.
	   *
	   * @name fail
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @param {String} operator
	   * @namespace Expect
	   * @api public
	   */

	  chai.expect.fail = function (actual, expected, message, operator) {
	    message = message || 'expect.fail()';
	    throw new chai.AssertionError(message, {
	        actual: actual
	      , expected: expected
	      , operator: operator
	    }, chai.expect.fail);
	  };
	};


/***/ },
/* 342 */
/***/ function(module, exports) {

	/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	module.exports = function (chai, util) {
	  var Assertion = chai.Assertion;

	  function loadShould () {
	    // explicitly define this method as function as to have it's name to include as `ssfi`
	    function shouldGetter() {
	      if (this instanceof String || this instanceof Number || this instanceof Boolean ) {
	        return new Assertion(this.valueOf(), null, shouldGetter);
	      }
	      return new Assertion(this, null, shouldGetter);
	    }
	    function shouldSetter(value) {
	      // See https://github.com/chaijs/chai/issues/86: this makes
	      // `whatever.should = someValue` actually set `someValue`, which is
	      // especially useful for `global.should = require('chai').should()`.
	      //
	      // Note that we have to use [[DefineProperty]] instead of [[Put]]
	      // since otherwise we would trigger this very setter!
	      Object.defineProperty(this, 'should', {
	        value: value,
	        enumerable: true,
	        configurable: true,
	        writable: true
	      });
	    }
	    // modify Object.prototype to have `should`
	    Object.defineProperty(Object.prototype, 'should', {
	      set: shouldSetter
	      , get: shouldGetter
	      , configurable: true
	    });

	    var should = {};

	    /**
	     * ### .fail(actual, expected, [message], [operator])
	     *
	     * Throw a failure.
	     *
	     * @name fail
	     * @param {Mixed} actual
	     * @param {Mixed} expected
	     * @param {String} message
	     * @param {String} operator
	     * @namespace Should
	     * @api public
	     */

	    should.fail = function (actual, expected, message, operator) {
	      message = message || 'should.fail()';
	      throw new chai.AssertionError(message, {
	          actual: actual
	        , expected: expected
	        , operator: operator
	      }, should.fail);
	    };

	    /**
	     * ### .equal(actual, expected, [message])
	     *
	     * Asserts non-strict equality (`==`) of `actual` and `expected`.
	     *
	     *     should.equal(3, '3', '== coerces values to strings');
	     *
	     * @name equal
	     * @param {Mixed} actual
	     * @param {Mixed} expected
	     * @param {String} message
	     * @namespace Should
	     * @api public
	     */

	    should.equal = function (val1, val2, msg) {
	      new Assertion(val1, msg).to.equal(val2);
	    };

	    /**
	     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])
	     *
	     * Asserts that `function` will throw an error that is an instance of
	     * `constructor`, or alternately that it will throw an error with message
	     * matching `regexp`.
	     *
	     *     should.throw(fn, 'function throws a reference error');
	     *     should.throw(fn, /function throws a reference error/);
	     *     should.throw(fn, ReferenceError);
	     *     should.throw(fn, ReferenceError, 'function throws a reference error');
	     *     should.throw(fn, ReferenceError, /function throws a reference error/);
	     *
	     * @name throw
	     * @alias Throw
	     * @param {Function} function
	     * @param {ErrorConstructor} constructor
	     * @param {RegExp} regexp
	     * @param {String} message
	     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
	     * @namespace Should
	     * @api public
	     */

	    should.Throw = function (fn, errt, errs, msg) {
	      new Assertion(fn, msg).to.Throw(errt, errs);
	    };

	    /**
	     * ### .exist
	     *
	     * Asserts that the target is neither `null` nor `undefined`.
	     *
	     *     var foo = 'hi';
	     *
	     *     should.exist(foo, 'foo exists');
	     *
	     * @name exist
	     * @namespace Should
	     * @api public
	     */

	    should.exist = function (val, msg) {
	      new Assertion(val, msg).to.exist;
	    }

	    // negation
	    should.not = {}

	    /**
	     * ### .not.equal(actual, expected, [message])
	     *
	     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.
	     *
	     *     should.not.equal(3, 4, 'these numbers are not equal');
	     *
	     * @name not.equal
	     * @param {Mixed} actual
	     * @param {Mixed} expected
	     * @param {String} message
	     * @namespace Should
	     * @api public
	     */

	    should.not.equal = function (val1, val2, msg) {
	      new Assertion(val1, msg).to.not.equal(val2);
	    };

	    /**
	     * ### .throw(function, [constructor/regexp], [message])
	     *
	     * Asserts that `function` will _not_ throw an error that is an instance of
	     * `constructor`, or alternately that it will not throw an error with message
	     * matching `regexp`.
	     *
	     *     should.not.throw(fn, Error, 'function does not throw');
	     *
	     * @name not.throw
	     * @alias not.Throw
	     * @param {Function} function
	     * @param {ErrorConstructor} constructor
	     * @param {RegExp} regexp
	     * @param {String} message
	     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
	     * @namespace Should
	     * @api public
	     */

	    should.not.Throw = function (fn, errt, errs, msg) {
	      new Assertion(fn, msg).to.not.Throw(errt, errs);
	    };

	    /**
	     * ### .not.exist
	     *
	     * Asserts that the target is neither `null` nor `undefined`.
	     *
	     *     var bar = null;
	     *
	     *     should.not.exist(bar, 'bar does not exist');
	     *
	     * @name not.exist
	     * @namespace Should
	     * @api public
	     */

	    should.not.exist = function (val, msg) {
	      new Assertion(val, msg).to.not.exist;
	    }

	    should['throw'] = should['Throw'];
	    should.not['throw'] = should.not['Throw'];

	    return should;
	  };

	  chai.should = loadShould;
	  chai.Should = loadShould;
	};


/***/ },
/* 343 */
/***/ function(module, exports) {

	/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */


	module.exports = function (chai, util) {

	  /*!
	   * Chai dependencies.
	   */

	  var Assertion = chai.Assertion
	    , flag = util.flag;

	  /*!
	   * Module export.
	   */

	  /**
	   * ### assert(expression, message)
	   *
	   * Write your own test expressions.
	   *
	   *     assert('foo' !== 'bar', 'foo is not bar');
	   *     assert(Array.isArray([]), 'empty arrays are arrays');
	   *
	   * @param {Mixed} expression to test for truthiness
	   * @param {String} message to display on error
	   * @name assert
	   * @namespace Assert
	   * @api public
	   */

	  var assert = chai.assert = function (express, errmsg) {
	    var test = new Assertion(null, null, chai.assert);
	    test.assert(
	        express
	      , errmsg
	      , '[ negation message unavailable ]'
	    );
	  };

	  /**
	   * ### .fail(actual, expected, [message], [operator])
	   *
	   * Throw a failure. Node.js `assert` module-compatible.
	   *
	   * @name fail
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @param {String} operator
	   * @namespace Assert
	   * @api public
	   */

	  assert.fail = function (actual, expected, message, operator) {
	    message = message || 'assert.fail()';
	    throw new chai.AssertionError(message, {
	        actual: actual
	      , expected: expected
	      , operator: operator
	    }, assert.fail);
	  };

	  /**
	   * ### .isOk(object, [message])
	   *
	   * Asserts that `object` is truthy.
	   *
	   *     assert.isOk('everything', 'everything is ok');
	   *     assert.isOk(false, 'this will fail');
	   *
	   * @name isOk
	   * @alias ok
	   * @param {Mixed} object to test
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isOk = function (val, msg) {
	    new Assertion(val, msg).is.ok;
	  };

	  /**
	   * ### .isNotOk(object, [message])
	   *
	   * Asserts that `object` is falsy.
	   *
	   *     assert.isNotOk('everything', 'this will fail');
	   *     assert.isNotOk(false, 'this will pass');
	   *
	   * @name isNotOk
	   * @alias notOk
	   * @param {Mixed} object to test
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotOk = function (val, msg) {
	    new Assertion(val, msg).is.not.ok;
	  };

	  /**
	   * ### .equal(actual, expected, [message])
	   *
	   * Asserts non-strict equality (`==`) of `actual` and `expected`.
	   *
	   *     assert.equal(3, '3', '== coerces values to strings');
	   *
	   * @name equal
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.equal = function (act, exp, msg) {
	    var test = new Assertion(act, msg, assert.equal);

	    test.assert(
	        exp == flag(test, 'object')
	      , 'expected #{this} to equal #{exp}'
	      , 'expected #{this} to not equal #{act}'
	      , exp
	      , act
	    );
	  };

	  /**
	   * ### .notEqual(actual, expected, [message])
	   *
	   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.
	   *
	   *     assert.notEqual(3, 4, 'these numbers are not equal');
	   *
	   * @name notEqual
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.notEqual = function (act, exp, msg) {
	    var test = new Assertion(act, msg, assert.notEqual);

	    test.assert(
	        exp != flag(test, 'object')
	      , 'expected #{this} to not equal #{exp}'
	      , 'expected #{this} to equal #{act}'
	      , exp
	      , act
	    );
	  };

	  /**
	   * ### .strictEqual(actual, expected, [message])
	   *
	   * Asserts strict equality (`===`) of `actual` and `expected`.
	   *
	   *     assert.strictEqual(true, true, 'these booleans are strictly equal');
	   *
	   * @name strictEqual
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.strictEqual = function (act, exp, msg) {
	    new Assertion(act, msg).to.equal(exp);
	  };

	  /**
	   * ### .notStrictEqual(actual, expected, [message])
	   *
	   * Asserts strict inequality (`!==`) of `actual` and `expected`.
	   *
	   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');
	   *
	   * @name notStrictEqual
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.notStrictEqual = function (act, exp, msg) {
	    new Assertion(act, msg).to.not.equal(exp);
	  };

	  /**
	   * ### .deepEqual(actual, expected, [message])
	   *
	   * Asserts that `actual` is deeply equal to `expected`.
	   *
	   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });
	   *
	   * @name deepEqual
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.deepEqual = function (act, exp, msg) {
	    new Assertion(act, msg).to.eql(exp);
	  };

	  /**
	   * ### .notDeepEqual(actual, expected, [message])
	   *
	   * Assert that `actual` is not deeply equal to `expected`.
	   *
	   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });
	   *
	   * @name notDeepEqual
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.notDeepEqual = function (act, exp, msg) {
	    new Assertion(act, msg).to.not.eql(exp);
	  };

	   /**
	   * ### .isAbove(valueToCheck, valueToBeAbove, [message])
	   *
	   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`
	   *
	   *     assert.isAbove(5, 2, '5 is strictly greater than 2');
	   *
	   * @name isAbove
	   * @param {Mixed} valueToCheck
	   * @param {Mixed} valueToBeAbove
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isAbove = function (val, abv, msg) {
	    new Assertion(val, msg).to.be.above(abv);
	  };

	   /**
	   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])
	   *
	   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`
	   *
	   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');
	   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');
	   *
	   * @name isAtLeast
	   * @param {Mixed} valueToCheck
	   * @param {Mixed} valueToBeAtLeast
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isAtLeast = function (val, atlst, msg) {
	    new Assertion(val, msg).to.be.least(atlst);
	  };

	   /**
	   * ### .isBelow(valueToCheck, valueToBeBelow, [message])
	   *
	   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`
	   *
	   *     assert.isBelow(3, 6, '3 is strictly less than 6');
	   *
	   * @name isBelow
	   * @param {Mixed} valueToCheck
	   * @param {Mixed} valueToBeBelow
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isBelow = function (val, blw, msg) {
	    new Assertion(val, msg).to.be.below(blw);
	  };

	   /**
	   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])
	   *
	   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`
	   *
	   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');
	   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');
	   *
	   * @name isAtMost
	   * @param {Mixed} valueToCheck
	   * @param {Mixed} valueToBeAtMost
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isAtMost = function (val, atmst, msg) {
	    new Assertion(val, msg).to.be.most(atmst);
	  };

	  /**
	   * ### .isTrue(value, [message])
	   *
	   * Asserts that `value` is true.
	   *
	   *     var teaServed = true;
	   *     assert.isTrue(teaServed, 'the tea has been served');
	   *
	   * @name isTrue
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isTrue = function (val, msg) {
	    new Assertion(val, msg).is['true'];
	  };

	  /**
	   * ### .isNotTrue(value, [message])
	   *
	   * Asserts that `value` is not true.
	   *
	   *     var tea = 'tasty chai';
	   *     assert.isNotTrue(tea, 'great, time for tea!');
	   *
	   * @name isNotTrue
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotTrue = function (val, msg) {
	    new Assertion(val, msg).to.not.equal(true);
	  };

	  /**
	   * ### .isFalse(value, [message])
	   *
	   * Asserts that `value` is false.
	   *
	   *     var teaServed = false;
	   *     assert.isFalse(teaServed, 'no tea yet? hmm...');
	   *
	   * @name isFalse
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isFalse = function (val, msg) {
	    new Assertion(val, msg).is['false'];
	  };

	  /**
	   * ### .isNotFalse(value, [message])
	   *
	   * Asserts that `value` is not false.
	   *
	   *     var tea = 'tasty chai';
	   *     assert.isNotFalse(tea, 'great, time for tea!');
	   *
	   * @name isNotFalse
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotFalse = function (val, msg) {
	    new Assertion(val, msg).to.not.equal(false);
	  };

	  /**
	   * ### .isNull(value, [message])
	   *
	   * Asserts that `value` is null.
	   *
	   *     assert.isNull(err, 'there was no error');
	   *
	   * @name isNull
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNull = function (val, msg) {
	    new Assertion(val, msg).to.equal(null);
	  };

	  /**
	   * ### .isNotNull(value, [message])
	   *
	   * Asserts that `value` is not null.
	   *
	   *     var tea = 'tasty chai';
	   *     assert.isNotNull(tea, 'great, time for tea!');
	   *
	   * @name isNotNull
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotNull = function (val, msg) {
	    new Assertion(val, msg).to.not.equal(null);
	  };

	  /**
	   * ### .isNaN
	   * Asserts that value is NaN
	   *
	   *    assert.isNaN('foo', 'foo is NaN');
	   *
	   * @name isNaN
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNaN = function (val, msg) {
	    new Assertion(val, msg).to.be.NaN;
	  };

	  /**
	   * ### .isNotNaN
	   * Asserts that value is not NaN
	   *
	   *    assert.isNotNaN(4, '4 is not NaN');
	   *
	   * @name isNotNaN
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */
	  assert.isNotNaN = function (val, msg) {
	    new Assertion(val, msg).not.to.be.NaN;
	  };

	  /**
	   * ### .isUndefined(value, [message])
	   *
	   * Asserts that `value` is `undefined`.
	   *
	   *     var tea;
	   *     assert.isUndefined(tea, 'no tea defined');
	   *
	   * @name isUndefined
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isUndefined = function (val, msg) {
	    new Assertion(val, msg).to.equal(undefined);
	  };

	  /**
	   * ### .isDefined(value, [message])
	   *
	   * Asserts that `value` is not `undefined`.
	   *
	   *     var tea = 'cup of chai';
	   *     assert.isDefined(tea, 'tea has been defined');
	   *
	   * @name isDefined
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isDefined = function (val, msg) {
	    new Assertion(val, msg).to.not.equal(undefined);
	  };

	  /**
	   * ### .isFunction(value, [message])
	   *
	   * Asserts that `value` is a function.
	   *
	   *     function serveTea() { return 'cup of tea'; };
	   *     assert.isFunction(serveTea, 'great, we can have tea now');
	   *
	   * @name isFunction
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isFunction = function (val, msg) {
	    new Assertion(val, msg).to.be.a('function');
	  };

	  /**
	   * ### .isNotFunction(value, [message])
	   *
	   * Asserts that `value` is _not_ a function.
	   *
	   *     var serveTea = [ 'heat', 'pour', 'sip' ];
	   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');
	   *
	   * @name isNotFunction
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotFunction = function (val, msg) {
	    new Assertion(val, msg).to.not.be.a('function');
	  };

	  /**
	   * ### .isObject(value, [message])
	   *
	   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).
	   * _The assertion does not match subclassed objects._
	   *
	   *     var selection = { name: 'Chai', serve: 'with spices' };
	   *     assert.isObject(selection, 'tea selection is an object');
	   *
	   * @name isObject
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isObject = function (val, msg) {
	    new Assertion(val, msg).to.be.a('object');
	  };

	  /**
	   * ### .isNotObject(value, [message])
	   *
	   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).
	   *
	   *     var selection = 'chai'
	   *     assert.isNotObject(selection, 'tea selection is not an object');
	   *     assert.isNotObject(null, 'null is not an object');
	   *
	   * @name isNotObject
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotObject = function (val, msg) {
	    new Assertion(val, msg).to.not.be.a('object');
	  };

	  /**
	   * ### .isArray(value, [message])
	   *
	   * Asserts that `value` is an array.
	   *
	   *     var menu = [ 'green', 'chai', 'oolong' ];
	   *     assert.isArray(menu, 'what kind of tea do we want?');
	   *
	   * @name isArray
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isArray = function (val, msg) {
	    new Assertion(val, msg).to.be.an('array');
	  };

	  /**
	   * ### .isNotArray(value, [message])
	   *
	   * Asserts that `value` is _not_ an array.
	   *
	   *     var menu = 'green|chai|oolong';
	   *     assert.isNotArray(menu, 'what kind of tea do we want?');
	   *
	   * @name isNotArray
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotArray = function (val, msg) {
	    new Assertion(val, msg).to.not.be.an('array');
	  };

	  /**
	   * ### .isString(value, [message])
	   *
	   * Asserts that `value` is a string.
	   *
	   *     var teaOrder = 'chai';
	   *     assert.isString(teaOrder, 'order placed');
	   *
	   * @name isString
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isString = function (val, msg) {
	    new Assertion(val, msg).to.be.a('string');
	  };

	  /**
	   * ### .isNotString(value, [message])
	   *
	   * Asserts that `value` is _not_ a string.
	   *
	   *     var teaOrder = 4;
	   *     assert.isNotString(teaOrder, 'order placed');
	   *
	   * @name isNotString
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotString = function (val, msg) {
	    new Assertion(val, msg).to.not.be.a('string');
	  };

	  /**
	   * ### .isNumber(value, [message])
	   *
	   * Asserts that `value` is a number.
	   *
	   *     var cups = 2;
	   *     assert.isNumber(cups, 'how many cups');
	   *
	   * @name isNumber
	   * @param {Number} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNumber = function (val, msg) {
	    new Assertion(val, msg).to.be.a('number');
	  };

	  /**
	   * ### .isNotNumber(value, [message])
	   *
	   * Asserts that `value` is _not_ a number.
	   *
	   *     var cups = '2 cups please';
	   *     assert.isNotNumber(cups, 'how many cups');
	   *
	   * @name isNotNumber
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotNumber = function (val, msg) {
	    new Assertion(val, msg).to.not.be.a('number');
	  };

	  /**
	   * ### .isBoolean(value, [message])
	   *
	   * Asserts that `value` is a boolean.
	   *
	   *     var teaReady = true
	   *       , teaServed = false;
	   *
	   *     assert.isBoolean(teaReady, 'is the tea ready');
	   *     assert.isBoolean(teaServed, 'has tea been served');
	   *
	   * @name isBoolean
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isBoolean = function (val, msg) {
	    new Assertion(val, msg).to.be.a('boolean');
	  };

	  /**
	   * ### .isNotBoolean(value, [message])
	   *
	   * Asserts that `value` is _not_ a boolean.
	   *
	   *     var teaReady = 'yep'
	   *       , teaServed = 'nope';
	   *
	   *     assert.isNotBoolean(teaReady, 'is the tea ready');
	   *     assert.isNotBoolean(teaServed, 'has tea been served');
	   *
	   * @name isNotBoolean
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotBoolean = function (val, msg) {
	    new Assertion(val, msg).to.not.be.a('boolean');
	  };

	  /**
	   * ### .typeOf(value, name, [message])
	   *
	   * Asserts that `value`'s type is `name`, as determined by
	   * `Object.prototype.toString`.
	   *
	   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');
	   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');
	   *     assert.typeOf('tea', 'string', 'we have a string');
	   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');
	   *     assert.typeOf(null, 'null', 'we have a null');
	   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');
	   *
	   * @name typeOf
	   * @param {Mixed} value
	   * @param {String} name
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.typeOf = function (val, type, msg) {
	    new Assertion(val, msg).to.be.a(type);
	  };

	  /**
	   * ### .notTypeOf(value, name, [message])
	   *
	   * Asserts that `value`'s type is _not_ `name`, as determined by
	   * `Object.prototype.toString`.
	   *
	   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');
	   *
	   * @name notTypeOf
	   * @param {Mixed} value
	   * @param {String} typeof name
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.notTypeOf = function (val, type, msg) {
	    new Assertion(val, msg).to.not.be.a(type);
	  };

	  /**
	   * ### .instanceOf(object, constructor, [message])
	   *
	   * Asserts that `value` is an instance of `constructor`.
	   *
	   *     var Tea = function (name) { this.name = name; }
	   *       , chai = new Tea('chai');
	   *
	   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');
	   *
	   * @name instanceOf
	   * @param {Object} object
	   * @param {Constructor} constructor
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.instanceOf = function (val, type, msg) {
	    new Assertion(val, msg).to.be.instanceOf(type);
	  };

	  /**
	   * ### .notInstanceOf(object, constructor, [message])
	   *
	   * Asserts `value` is not an instance of `constructor`.
	   *
	   *     var Tea = function (name) { this.name = name; }
	   *       , chai = new String('chai');
	   *
	   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');
	   *
	   * @name notInstanceOf
	   * @param {Object} object
	   * @param {Constructor} constructor
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.notInstanceOf = function (val, type, msg) {
	    new Assertion(val, msg).to.not.be.instanceOf(type);
	  };

	  /**
	   * ### .include(haystack, needle, [message])
	   *
	   * Asserts that `haystack` includes `needle`. Works
	   * for strings and arrays.
	   *
	   *     assert.include('foobar', 'bar', 'foobar contains string "bar"');
	   *     assert.include([ 1, 2, 3 ], 3, 'array contains value');
	   *
	   * @name include
	   * @param {Array|String} haystack
	   * @param {Mixed} needle
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.include = function (exp, inc, msg) {
	    new Assertion(exp, msg, assert.include).include(inc);
	  };

	  /**
	   * ### .notInclude(haystack, needle, [message])
	   *
	   * Asserts that `haystack` does not include `needle`. Works
	   * for strings and arrays.
	   *
	   *     assert.notInclude('foobar', 'baz', 'string not include substring');
	   *     assert.notInclude([ 1, 2, 3 ], 4, 'array not include contain value');
	   *
	   * @name notInclude
	   * @param {Array|String} haystack
	   * @param {Mixed} needle
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.notInclude = function (exp, inc, msg) {
	    new Assertion(exp, msg, assert.notInclude).not.include(inc);
	  };

	  /**
	   * ### .match(value, regexp, [message])
	   *
	   * Asserts that `value` matches the regular expression `regexp`.
	   *
	   *     assert.match('foobar', /^foo/, 'regexp matches');
	   *
	   * @name match
	   * @param {Mixed} value
	   * @param {RegExp} regexp
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.match = function (exp, re, msg) {
	    new Assertion(exp, msg).to.match(re);
	  };

	  /**
	   * ### .notMatch(value, regexp, [message])
	   *
	   * Asserts that `value` does not match the regular expression `regexp`.
	   *
	   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');
	   *
	   * @name notMatch
	   * @param {Mixed} value
	   * @param {RegExp} regexp
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.notMatch = function (exp, re, msg) {
	    new Assertion(exp, msg).to.not.match(re);
	  };

	  /**
	   * ### .property(object, property, [message])
	   *
	   * Asserts that `object` has a property named by `property`.
	   *
	   *     assert.property({ tea: { green: 'matcha' }}, 'tea');
	   *
	   * @name property
	   * @param {Object} object
	   * @param {String} property
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.property = function (obj, prop, msg) {
	    new Assertion(obj, msg).to.have.property(prop);
	  };

	  /**
	   * ### .notProperty(object, property, [message])
	   *
	   * Asserts that `object` does _not_ have a property named by `property`.
	   *
	   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');
	   *
	   * @name notProperty
	   * @param {Object} object
	   * @param {String} property
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.notProperty = function (obj, prop, msg) {
	    new Assertion(obj, msg).to.not.have.property(prop);
	  };

	  /**
	   * ### .deepProperty(object, property, [message])
	   *
	   * Asserts that `object` has a property named by `property`, which can be a
	   * string using dot- and bracket-notation for deep reference.
	   *
	   *     assert.deepProperty({ tea: { green: 'matcha' }}, 'tea.green');
	   *
	   * @name deepProperty
	   * @param {Object} object
	   * @param {String} property
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.deepProperty = function (obj, prop, msg) {
	    new Assertion(obj, msg).to.have.deep.property(prop);
	  };

	  /**
	   * ### .notDeepProperty(object, property, [message])
	   *
	   * Asserts that `object` does _not_ have a property named by `property`, which
	   * can be a string using dot- and bracket-notation for deep reference.
	   *
	   *     assert.notDeepProperty({ tea: { green: 'matcha' }}, 'tea.oolong');
	   *
	   * @name notDeepProperty
	   * @param {Object} object
	   * @param {String} property
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.notDeepProperty = function (obj, prop, msg) {
	    new Assertion(obj, msg).to.not.have.deep.property(prop);
	  };

	  /**
	   * ### .propertyVal(object, property, value, [message])
	   *
	   * Asserts that `object` has a property named by `property` with value given
	   * by `value`.
	   *
	   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');
	   *
	   * @name propertyVal
	   * @param {Object} object
	   * @param {String} property
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.propertyVal = function (obj, prop, val, msg) {
	    new Assertion(obj, msg).to.have.property(prop, val);
	  };

	  /**
	   * ### .propertyNotVal(object, property, value, [message])
	   *
	   * Asserts that `object` has a property named by `property`, but with a value
	   * different from that given by `value`.
	   *
	   *     assert.propertyNotVal({ tea: 'is good' }, 'tea', 'is bad');
	   *
	   * @name propertyNotVal
	   * @param {Object} object
	   * @param {String} property
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.propertyNotVal = function (obj, prop, val, msg) {
	    new Assertion(obj, msg).to.not.have.property(prop, val);
	  };

	  /**
	   * ### .deepPropertyVal(object, property, value, [message])
	   *
	   * Asserts that `object` has a property named by `property` with value given
	   * by `value`. `property` can use dot- and bracket-notation for deep
	   * reference.
	   *
	   *     assert.deepPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');
	   *
	   * @name deepPropertyVal
	   * @param {Object} object
	   * @param {String} property
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.deepPropertyVal = function (obj, prop, val, msg) {
	    new Assertion(obj, msg).to.have.deep.property(prop, val);
	  };

	  /**
	   * ### .deepPropertyNotVal(object, property, value, [message])
	   *
	   * Asserts that `object` has a property named by `property`, but with a value
	   * different from that given by `value`. `property` can use dot- and
	   * bracket-notation for deep reference.
	   *
	   *     assert.deepPropertyNotVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');
	   *
	   * @name deepPropertyNotVal
	   * @param {Object} object
	   * @param {String} property
	   * @param {Mixed} value
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.deepPropertyNotVal = function (obj, prop, val, msg) {
	    new Assertion(obj, msg).to.not.have.deep.property(prop, val);
	  };

	  /**
	   * ### .lengthOf(object, length, [message])
	   *
	   * Asserts that `object` has a `length` property with the expected value.
	   *
	   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');
	   *     assert.lengthOf('foobar', 6, 'string has length of 6');
	   *
	   * @name lengthOf
	   * @param {Mixed} object
	   * @param {Number} length
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.lengthOf = function (exp, len, msg) {
	    new Assertion(exp, msg).to.have.length(len);
	  };

	  /**
	   * ### .throws(function, [constructor/string/regexp], [string/regexp], [message])
	   *
	   * Asserts that `function` will throw an error that is an instance of
	   * `constructor`, or alternately that it will throw an error with message
	   * matching `regexp`.
	   *
	   *     assert.throws(fn, 'function throws a reference error');
	   *     assert.throws(fn, /function throws a reference error/);
	   *     assert.throws(fn, ReferenceError);
	   *     assert.throws(fn, ReferenceError, 'function throws a reference error');
	   *     assert.throws(fn, ReferenceError, /function throws a reference error/);
	   *
	   * @name throws
	   * @alias throw
	   * @alias Throw
	   * @param {Function} function
	   * @param {ErrorConstructor} constructor
	   * @param {RegExp} regexp
	   * @param {String} message
	   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
	   * @namespace Assert
	   * @api public
	   */

	  assert.throws = function (fn, errt, errs, msg) {
	    if ('string' === typeof errt || errt instanceof RegExp) {
	      errs = errt;
	      errt = null;
	    }

	    var assertErr = new Assertion(fn, msg).to.throw(errt, errs);
	    return flag(assertErr, 'object');
	  };

	  /**
	   * ### .doesNotThrow(function, [constructor/regexp], [message])
	   *
	   * Asserts that `function` will _not_ throw an error that is an instance of
	   * `constructor`, or alternately that it will not throw an error with message
	   * matching `regexp`.
	   *
	   *     assert.doesNotThrow(fn, Error, 'function does not throw');
	   *
	   * @name doesNotThrow
	   * @param {Function} function
	   * @param {ErrorConstructor} constructor
	   * @param {RegExp} regexp
	   * @param {String} message
	   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
	   * @namespace Assert
	   * @api public
	   */

	  assert.doesNotThrow = function (fn, type, msg) {
	    if ('string' === typeof type) {
	      msg = type;
	      type = null;
	    }

	    new Assertion(fn, msg).to.not.Throw(type);
	  };

	  /**
	   * ### .operator(val1, operator, val2, [message])
	   *
	   * Compares two values using `operator`.
	   *
	   *     assert.operator(1, '<', 2, 'everything is ok');
	   *     assert.operator(1, '>', 2, 'this will fail');
	   *
	   * @name operator
	   * @param {Mixed} val1
	   * @param {String} operator
	   * @param {Mixed} val2
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.operator = function (val, operator, val2, msg) {
	    var ok;
	    switch(operator) {
	      case '==':
	        ok = val == val2;
	        break;
	      case '===':
	        ok = val === val2;
	        break;
	      case '>':
	        ok = val > val2;
	        break;
	      case '>=':
	        ok = val >= val2;
	        break;
	      case '<':
	        ok = val < val2;
	        break;
	      case '<=':
	        ok = val <= val2;
	        break;
	      case '!=':
	        ok = val != val2;
	        break;
	      case '!==':
	        ok = val !== val2;
	        break;
	      default:
	        throw new Error('Invalid operator "' + operator + '"');
	    }
	    var test = new Assertion(ok, msg);
	    test.assert(
	        true === flag(test, 'object')
	      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)
	      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );
	  };

	  /**
	   * ### .closeTo(actual, expected, delta, [message])
	   *
	   * Asserts that the target is equal `expected`, to within a +/- `delta` range.
	   *
	   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');
	   *
	   * @name closeTo
	   * @param {Number} actual
	   * @param {Number} expected
	   * @param {Number} delta
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.closeTo = function (act, exp, delta, msg) {
	    new Assertion(act, msg).to.be.closeTo(exp, delta);
	  };

	  /**
	   * ### .approximately(actual, expected, delta, [message])
	   *
	   * Asserts that the target is equal `expected`, to within a +/- `delta` range.
	   *
	   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');
	   *
	   * @name approximately
	   * @param {Number} actual
	   * @param {Number} expected
	   * @param {Number} delta
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.approximately = function (act, exp, delta, msg) {
	    new Assertion(act, msg).to.be.approximately(exp, delta);
	  };

	  /**
	   * ### .sameMembers(set1, set2, [message])
	   *
	   * Asserts that `set1` and `set2` have the same members.
	   * Order is not taken into account.
	   *
	   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');
	   *
	   * @name sameMembers
	   * @param {Array} set1
	   * @param {Array} set2
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.sameMembers = function (set1, set2, msg) {
	    new Assertion(set1, msg).to.have.same.members(set2);
	  }

	  /**
	   * ### .sameDeepMembers(set1, set2, [message])
	   *
	   * Asserts that `set1` and `set2` have the same members - using a deep equality checking.
	   * Order is not taken into account.
	   *
	   *     assert.sameDeepMembers([ {b: 3}, {a: 2}, {c: 5} ], [ {c: 5}, {b: 3}, {a: 2} ], 'same deep members');
	   *
	   * @name sameDeepMembers
	   * @param {Array} set1
	   * @param {Array} set2
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.sameDeepMembers = function (set1, set2, msg) {
	    new Assertion(set1, msg).to.have.same.deep.members(set2);
	  }

	  /**
	   * ### .includeMembers(superset, subset, [message])
	   *
	   * Asserts that `subset` is included in `superset`.
	   * Order is not taken into account.
	   *
	   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1 ], 'include members');
	   *
	   * @name includeMembers
	   * @param {Array} superset
	   * @param {Array} subset
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.includeMembers = function (superset, subset, msg) {
	    new Assertion(superset, msg).to.include.members(subset);
	  }

	  /**
	   * ### .includeDeepMembers(superset, subset, [message])
	   *
	   * Asserts that `subset` is included in `superset` - using deep equality checking.
	   * Order is not taken into account.
	   * Duplicates are ignored.
	   *
	   *     assert.includeDeepMembers([ {a: 1}, {b: 2}, {c: 3} ], [ {b: 2}, {a: 1}, {b: 2} ], 'include deep members');
	   *
	   * @name includeDeepMembers
	   * @param {Array} superset
	   * @param {Array} subset
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.includeDeepMembers = function (superset, subset, msg) {
	    new Assertion(superset, msg).to.include.deep.members(subset);
	  }

	  /**
	   * ### .oneOf(inList, list, [message])
	   *
	   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.
	   *
	   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');
	   *
	   * @name oneOf
	   * @param {*} inList
	   * @param {Array<*>} list
	   * @param {String} message
	   * @namespace Assert
	   * @api public
	   */

	  assert.oneOf = function (inList, list, msg) {
	    new Assertion(inList, msg).to.be.oneOf(list);
	  }

	   /**
	   * ### .changes(function, object, property)
	   *
	   * Asserts that a function changes the value of a property
	   *
	   *     var obj = { val: 10 };
	   *     var fn = function() { obj.val = 22 };
	   *     assert.changes(fn, obj, 'val');
	   *
	   * @name changes
	   * @param {Function} modifier function
	   * @param {Object} object
	   * @param {String} property name
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.changes = function (fn, obj, prop) {
	    new Assertion(fn).to.change(obj, prop);
	  }

	   /**
	   * ### .doesNotChange(function, object, property)
	   *
	   * Asserts that a function does not changes the value of a property
	   *
	   *     var obj = { val: 10 };
	   *     var fn = function() { console.log('foo'); };
	   *     assert.doesNotChange(fn, obj, 'val');
	   *
	   * @name doesNotChange
	   * @param {Function} modifier function
	   * @param {Object} object
	   * @param {String} property name
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.doesNotChange = function (fn, obj, prop) {
	    new Assertion(fn).to.not.change(obj, prop);
	  }

	   /**
	   * ### .increases(function, object, property)
	   *
	   * Asserts that a function increases an object property
	   *
	   *     var obj = { val: 10 };
	   *     var fn = function() { obj.val = 13 };
	   *     assert.increases(fn, obj, 'val');
	   *
	   * @name increases
	   * @param {Function} modifier function
	   * @param {Object} object
	   * @param {String} property name
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.increases = function (fn, obj, prop) {
	    new Assertion(fn).to.increase(obj, prop);
	  }

	   /**
	   * ### .doesNotIncrease(function, object, property)
	   *
	   * Asserts that a function does not increase object property
	   *
	   *     var obj = { val: 10 };
	   *     var fn = function() { obj.val = 8 };
	   *     assert.doesNotIncrease(fn, obj, 'val');
	   *
	   * @name doesNotIncrease
	   * @param {Function} modifier function
	   * @param {Object} object
	   * @param {String} property name
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.doesNotIncrease = function (fn, obj, prop) {
	    new Assertion(fn).to.not.increase(obj, prop);
	  }

	   /**
	   * ### .decreases(function, object, property)
	   *
	   * Asserts that a function decreases an object property
	   *
	   *     var obj = { val: 10 };
	   *     var fn = function() { obj.val = 5 };
	   *     assert.decreases(fn, obj, 'val');
	   *
	   * @name decreases
	   * @param {Function} modifier function
	   * @param {Object} object
	   * @param {String} property name
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.decreases = function (fn, obj, prop) {
	    new Assertion(fn).to.decrease(obj, prop);
	  }

	   /**
	   * ### .doesNotDecrease(function, object, property)
	   *
	   * Asserts that a function does not decreases an object property
	   *
	   *     var obj = { val: 10 };
	   *     var fn = function() { obj.val = 15 };
	   *     assert.doesNotDecrease(fn, obj, 'val');
	   *
	   * @name doesNotDecrease
	   * @param {Function} modifier function
	   * @param {Object} object
	   * @param {String} property name
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.doesNotDecrease = function (fn, obj, prop) {
	    new Assertion(fn).to.not.decrease(obj, prop);
	  }

	  /*!
	   * ### .ifError(object)
	   *
	   * Asserts if value is not a false value, and throws if it is a true value.
	   * This is added to allow for chai to be a drop-in replacement for Node's
	   * assert class.
	   *
	   *     var err = new Error('I am a custom error');
	   *     assert.ifError(err); // Rethrows err!
	   *
	   * @name ifError
	   * @param {Object} object
	   * @namespace Assert
	   * @api public
	   */

	  assert.ifError = function (val) {
	    if (val) {
	      throw(val);
	    }
	  };

	  /**
	   * ### .isExtensible(object)
	   *
	   * Asserts that `object` is extensible (can have new properties added to it).
	   *
	   *     assert.isExtensible({});
	   *
	   * @name isExtensible
	   * @alias extensible
	   * @param {Object} object
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.isExtensible = function (obj, msg) {
	    new Assertion(obj, msg).to.be.extensible;
	  };

	  /**
	   * ### .isNotExtensible(object)
	   *
	   * Asserts that `object` is _not_ extensible.
	   *
	   *     var nonExtensibleObject = Object.preventExtensions({});
	   *     var sealedObject = Object.seal({});
	   *     var frozenObject = Object.freese({});
	   *
	   *     assert.isNotExtensible(nonExtensibleObject);
	   *     assert.isNotExtensible(sealedObject);
	   *     assert.isNotExtensible(frozenObject);
	   *
	   * @name isNotExtensible
	   * @alias notExtensible
	   * @param {Object} object
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotExtensible = function (obj, msg) {
	    new Assertion(obj, msg).to.not.be.extensible;
	  };

	  /**
	   * ### .isSealed(object)
	   *
	   * Asserts that `object` is sealed (cannot have new properties added to it
	   * and its existing properties cannot be removed).
	   *
	   *     var sealedObject = Object.seal({});
	   *     var frozenObject = Object.seal({});
	   *
	   *     assert.isSealed(sealedObject);
	   *     assert.isSealed(frozenObject);
	   *
	   * @name isSealed
	   * @alias sealed
	   * @param {Object} object
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.isSealed = function (obj, msg) {
	    new Assertion(obj, msg).to.be.sealed;
	  };

	  /**
	   * ### .isNotSealed(object)
	   *
	   * Asserts that `object` is _not_ sealed.
	   *
	   *     assert.isNotSealed({});
	   *
	   * @name isNotSealed
	   * @alias notSealed
	   * @param {Object} object
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotSealed = function (obj, msg) {
	    new Assertion(obj, msg).to.not.be.sealed;
	  };

	  /**
	   * ### .isFrozen(object)
	   *
	   * Asserts that `object` is frozen (cannot have new properties added to it
	   * and its existing properties cannot be modified).
	   *
	   *     var frozenObject = Object.freeze({});
	   *     assert.frozen(frozenObject);
	   *
	   * @name isFrozen
	   * @alias frozen
	   * @param {Object} object
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.isFrozen = function (obj, msg) {
	    new Assertion(obj, msg).to.be.frozen;
	  };

	  /**
	   * ### .isNotFrozen(object)
	   *
	   * Asserts that `object` is _not_ frozen.
	   *
	   *     assert.isNotFrozen({});
	   *
	   * @name isNotFrozen
	   * @alias notFrozen
	   * @param {Object} object
	   * @param {String} message _optional_
	   * @namespace Assert
	   * @api public
	   */

	  assert.isNotFrozen = function (obj, msg) {
	    new Assertion(obj, msg).to.not.be.frozen;
	  };

	  /*!
	   * Aliases.
	   */

	  (function alias(name, as){
	    assert[as] = assert[name];
	    return alias;
	  })
	  ('isOk', 'ok')
	  ('isNotOk', 'notOk')
	  ('throws', 'throw')
	  ('throws', 'Throw')
	  ('isExtensible', 'extensible')
	  ('isNotExtensible', 'notExtensible')
	  ('isSealed', 'sealed')
	  ('isNotSealed', 'notSealed')
	  ('isFrozen', 'frozen')
	  ('isNotFrozen', 'notFrozen');
	};


/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	opyright (c) 2015, The Regents of the University of California,
	through Lawrence Berkeley National Laboratory (subject to receipt
	of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	

	var _util = __webpack_require__(345);

	var _util2 = _interopRequireDefault(_util);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	An index is simply a string that represents a fixed range of time. There are two basic types:
	 * *Multiplier index* - the number of some unit of time (hours, days etc) since the UNIX epoch.
	 * *Calendar index* - The second represents a calendar range, such as Oct 2014.

	For the first type, a multiplier index, an example might be:

	```text
	    1d-12355      //  30th Oct 2003 (GMT), the 12355th day since the UNIX epoch
	```

	You can also use seconds (e.g. 30s), minutes (e.g. 5m), hours (e.g. 1h) or days (e.g. 7d).

	Here are several examples of a calendar index:

	```text
	    2003-10-30    // 30th Oct 2003
	    2014-09       // Sept 2014
	    2015          // All of the year 2015
	```

	An Index is a nice representation of certain types of time intervals because it can be cached with its string representation as a key. A specific chunk of time, and associated data can be looked up based on that string. It also allows us to represent things like months, which have variable length.

	An Index is also useful when collecting into specific time ranges, for example generating all the 5 min ("5m") maximum rollups within a specific day ("1d"). See the processing section within these docs.

	 */

	var Index = function () {
	    function Index(s) {
	        var utc = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

	        _classCallCheck(this, Index);

	        this._utc = utc;
	        this._string = s;
	        this._timerange = _util2.default.rangeFromIndexString(s, this._utc);
	    }

	    /**
	     * Returns the Index as JSON, which will just be its string
	     * representation
	     */


	    _createClass(Index, [{
	        key: "toJSON",
	        value: function toJSON() {
	            return this._string;
	        }

	        /**
	         * Simply returns the Index as its string
	         */

	    }, {
	        key: "toString",
	        value: function toString() {
	            return this._string;
	        }

	        /**
	         * for the calendar range style Indexes, this lets you return
	         * that calendar range as a human readable format, e.g. "June, 2014".
	         * The format specified is a Moment.format.
	         */

	    }, {
	        key: "toNiceString",
	        value: function toNiceString(format) {
	            return _util2.default.niceIndexString(this._string, format);
	        }

	        /**
	         * Alias for toString()
	         */

	    }, {
	        key: "asString",
	        value: function asString() {
	            return this.toString();
	        }

	        /**
	         * Returns the Index as a TimeRange
	         */

	    }, {
	        key: "asTimerange",
	        value: function asTimerange() {
	            return this._timerange;
	        }

	        /**
	         * Returns the start date of the Index
	         */

	    }, {
	        key: "begin",
	        value: function begin() {
	            return this._timerange.begin();
	        }

	        /**
	         * Returns the end date of the Index
	         */

	    }, {
	        key: "end",
	        value: function end() {
	            return this._timerange.end();
	        }
	    }], [{
	        key: "getIndexString",
	        value: function getIndexString(win, date) {
	            var pos = _util2.default.windowPositionFromDate(win, date);
	            return win + "-" + pos;
	        }
	    }, {
	        key: "getIndexStringList",
	        value: function getIndexStringList(win, timerange) {
	            var pos1 = _util2.default.windowPositionFromDate(win, timerange.begin());
	            var pos2 = _util2.default.windowPositionFromDate(win, timerange.end());
	            var indexList = [];
	            if (pos1 <= pos2) {
	                for (var pos = pos1; pos <= pos2; pos++) {
	                    indexList.push(win + "-" + pos);
	                }
	            }
	            return indexList;
	        }
	    }, {
	        key: "getDailyIndexString",
	        value: function getDailyIndexString(date) {
	            var utc = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	            var day = _util2.default.leftPad(utc ? date.getUTCDate() : date.getDate());
	            var month = _util2.default.leftPad(utc ? date.getUTCMonth() + 1 : date.getMonth() + 1);
	            var year = utc ? date.getUTCFullYear() : date.getFullYear();
	            return year + "-" + month + "-" + day;
	        }
	    }, {
	        key: "getMonthlyIndexString",
	        value: function getMonthlyIndexString(date) {
	            var utc = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	            var month = _util2.default.leftPad(utc ? date.getUTCMonth() + 1 : date.getMonth() + 1);
	            var year = utc ? date.getUTCFullYear() : date.getFullYear();
	            return year + "-" + month;
	        }
	    }, {
	        key: "getYearlyIndexString",
	        value: function getYearlyIndexString(date) {
	            var utc = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	            var year = utc ? date.getUTCFullYear() : date.getFullYear();
	            return "" + year;
	        }
	    }]);

	    return Index;
	}();

	exports.default = Index;

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _moment = __webpack_require__(346);

	var _moment2 = _interopRequireDefault(_moment);

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _range = __webpack_require__(450);

	var _range2 = _interopRequireDefault(_range);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var units = {
	    s: { label: "seconds", length: 1 },
	    m: { label: "minutes", length: 60 },
	    h: { label: "hours", length: 60 * 60 },
	    d: { label: "days", length: 60 * 60 * 24 }
	};

	/**
	 * This function will take an index, which may be of two forms:
	 *     2015-07-14  (day)
	 *     2015-07     (month)
	 *     2015        (year)
	 * or:
	 *     1d-278      (range, in n x days, hours, minutes or seconds)
	 *
	 * and return a TimeRange for that time. The TimeRange may be considered to be
	 * local time or UTC time, depending on the utc flag passed in.
	 */
	/**
	 *  Copyright (c) 2015, The Regents of the University of California,
	 *  through Lawrence Berkeley National Laboratory (subject to receipt
	 *  of any required approvals from the U.S. Dept. of Energy).
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree.
	 */

	exports.default = {

	    /**
	     * Single zero left padding, for days and months.
	     */

	    leftPad: function leftPad(value) {
	        return "" + (value < 10 ? "0" : "") + value;
	    },


	    /**
	     * Returns a duration in milliseconds given a window duration string.
	     * For example "30s" (30 seconds) should return 30000ms. Accepts
	     * seconds (e.g. "30s"), minutes (e.g. "5m"), hours (e.g. "6h") and
	     * days (e.g. "30d")
	     */
	    windowDuration: function windowDuration(w) {
	        // window should be two parts, a number and a letter if it's a
	        // range based index, e.g "1h".
	        var regex = /([0-9]+)([smhd])/;
	        var parts = regex.exec(w);
	        if (parts && parts.length >= 3) {
	            var num = parseInt(parts[1], 10);
	            var unit = parts[2];
	            return num * units[unit].length * 1000;
	        }
	    },
	    windowPositionFromDate: function windowPositionFromDate(w, date) {
	        var duration = this.windowDuration(w);
	        var dd = _moment2.default.utc(date).valueOf();
	        return parseInt(dd /= duration, 10);
	    },
	    rangeFromIndexString: function rangeFromIndexString(index, utc) {
	        var isUTC = !_underscore2.default.isUndefined(utc) ? utc : true;
	        var parts = index.split("-");

	        var beginTime = void 0;
	        var endTime = void 0;

	        switch (parts.length) {
	            case 3:
	                // A day, month and year e.g. 2014-10-24
	                if (!_underscore2.default.isNaN(parseInt(parts[0], 10)) && !_underscore2.default.isNaN(parseInt(parts[1], 10)) && !_underscore2.default.isNaN(parseInt(parts[2], 10))) {
	                    var _year = parseInt(parts[0], 10);
	                    var month = parseInt(parts[1], 10);
	                    var day = parseInt(parts[2], 10);
	                    beginTime = isUTC ? _moment2.default.utc([_year, month - 1, day]) : (0, _moment2.default)([_year, month - 1, day]);
	                    endTime = isUTC ? _moment2.default.utc(beginTime).endOf("day") : (0, _moment2.default)(beginTime).endOf("day");
	                }
	                break;

	            case 2:
	                // Size should be two parts, a number and a letter if it's a
	                // range based index, e.g 1h-23478
	                var rangeRegex = /([0-9]+)([smhd])/;
	                var sizeParts = rangeRegex.exec(parts[0]);
	                if (sizeParts && sizeParts.length >= 3 && !_underscore2.default.isNaN(parseInt(parts[1], 10))) {
	                    var pos = parseInt(parts[1], 10);
	                    var num = parseInt(sizeParts[1], 10);
	                    var unit = sizeParts[2];
	                    var length = num * units[unit].length * 1000;

	                    beginTime = isUTC ? _moment2.default.utc(pos * length) : (0, _moment2.default)(pos * length);
	                    endTime = isUTC ? _moment2.default.utc((pos + 1) * length) : (0, _moment2.default)((pos + 1) * length);
	                    // A month and year e.g 2015-09
	                } else if (!_underscore2.default.isNaN(parseInt(parts[0], 10)) && !_underscore2.default.isNaN(parseInt(parts[1], 10))) {
	                        var _year2 = parseInt(parts[0], 10);
	                        var _month = parseInt(parts[1], 10);
	                        beginTime = isUTC ? _moment2.default.utc([_year2, _month - 1]) : (0, _moment2.default)([_year2, _month - 1]);
	                        endTime = isUTC ? _moment2.default.utc(beginTime).endOf("month") : (0, _moment2.default)(beginTime).endOf("month");
	                    }
	                break;

	            // A year e.g. 2015
	            case 1:
	                var year = parts[0];
	                beginTime = isUTC ? _moment2.default.utc([year]) : (0, _moment2.default)([year]);
	                endTime = isUTC ? _moment2.default.utc(beginTime).endOf("year") : (0, _moment2.default)(beginTime).endOf("year");
	                break;
	        }

	        if (beginTime && beginTime.isValid() && endTime && endTime.isValid()) {
	            return new _range2.default(beginTime, endTime);
	        } else {
	            return undefined;
	        }
	    },


	    /**
	     * Returns a nice string for the index. If the index is of the form
	     * 1d-2345 then just that string is returned (there's not nice way to put
	     * it), but if it represents a day, month, or year (e.g. 2015-07) then a
	     * nice string like "July" will be returned. It's also possible to pass in
	     * the format of the reply for these types of strings. See moment's format
	     * naming conventions:
	     * http://momentjs.com/docs/#/displaying/format/
	     */
	    niceIndexString: function niceIndexString(index, format) {
	        var t = void 0;

	        var parts = index.split("-");
	        switch (parts.length) {
	            case 3:
	                if (!_underscore2.default.isNaN(parseInt(parts[0], 10)) && !_underscore2.default.isNaN(parseInt(parts[1], 10)) && !_underscore2.default.isNaN(parseInt(parts[2], 10))) {
	                    var _year3 = parseInt(parts[0], 10);
	                    var month = parseInt(parts[1], 10);
	                    var day = parseInt(parts[2], 10);
	                    t = _moment2.default.utc([_year3, month - 1, day]);
	                    if (format) {
	                        return t.format(format);
	                    } else {
	                        return t.format("MMMM Do YYYY");
	                    }
	                }
	                break;

	            case 2:
	                var rangeRegex = /([0-9]+)([smhd])/;
	                var sizeParts = rangeRegex.exec(parts[0]);
	                if (sizeParts && sizeParts.length >= 3 && !_underscore2.default.isNaN(parseInt(parts[1], 10))) {
	                    return index;
	                } else if (!_underscore2.default.isNaN(parseInt(parts[0], 10)) && !_underscore2.default.isNaN(parseInt(parts[1], 10))) {
	                    var _year4 = parseInt(parts[0], 10);
	                    var _month2 = parseInt(parts[1], 10);
	                    t = _moment2.default.utc([_year4, _month2 - 1]);
	                    if (format) {
	                        return t.format(format);
	                    } else {
	                        return t.format("MMMM");
	                    }
	                }
	                break;

	            case 1:
	                var year = parts[0];
	                t = _moment2.default.utc([year]);
	                if (format) {
	                    return t.format(format);
	                } else {
	                    return t.format("YYYY");
	                }
	                break;
	        }
	        return index;
	    }
	};

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	//! version : 2.13.0
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com

	;(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, function () { 'use strict';

	    var hookCallback;

	    function utils_hooks__hooks () {
	        return hookCallback.apply(null, arguments);
	    }

	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback (callback) {
	        hookCallback = callback;
	    }

	    function isArray(input) {
	        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
	    }

	    function isDate(input) {
	        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	    }

	    function map(arr, fn) {
	        var res = [], i;
	        for (i = 0; i < arr.length; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }

	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }

	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }

	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }

	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function create_utc__createUTC (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }

	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty           : false,
	            unusedTokens    : [],
	            unusedInput     : [],
	            overflow        : -2,
	            charsLeftOver   : 0,
	            nullInput       : false,
	            invalidMonth    : null,
	            invalidFormat   : false,
	            userInvalidated : false,
	            iso             : false,
	            parsedDateParts : [],
	            meridiem        : null
	        };
	    }

	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }

	    var some;
	    if (Array.prototype.some) {
	        some = Array.prototype.some;
	    } else {
	        some = function (fun) {
	            var t = Object(this);
	            var len = t.length >>> 0;

	            for (var i = 0; i < len; i++) {
	                if (i in t && fun.call(this, t[i], i, t)) {
	                    return true;
	                }
	            }

	            return false;
	        };
	    }

	    function valid__isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m);
	            var parsedParts = some.call(flags.parsedDateParts, function (i) {
	                return i != null;
	            });
	            m._isValid = !isNaN(m._d.getTime()) &&
	                flags.overflow < 0 &&
	                !flags.empty &&
	                !flags.invalidMonth &&
	                !flags.invalidWeekday &&
	                !flags.nullInput &&
	                !flags.invalidFormat &&
	                !flags.userInvalidated &&
	                (!flags.meridiem || (flags.meridiem && parsedParts));

	            if (m._strict) {
	                m._isValid = m._isValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }
	        }
	        return m._isValid;
	    }

	    function valid__createInvalid (flags) {
	        var m = create_utc__createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        }
	        else {
	            getParsingFlags(m).userInvalidated = true;
	        }

	        return m;
	    }

	    function isUndefined(input) {
	        return input === void 0;
	    }

	    // Plugins that add properties should also add the key here (null value),
	    // so we can properly clone ourselves.
	    var momentProperties = utils_hooks__hooks.momentProperties = [];

	    function copyConfig(to, from) {
	        var i, prop, val;

	        if (!isUndefined(from._isAMomentObject)) {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (!isUndefined(from._i)) {
	            to._i = from._i;
	        }
	        if (!isUndefined(from._f)) {
	            to._f = from._f;
	        }
	        if (!isUndefined(from._l)) {
	            to._l = from._l;
	        }
	        if (!isUndefined(from._strict)) {
	            to._strict = from._strict;
	        }
	        if (!isUndefined(from._tzm)) {
	            to._tzm = from._tzm;
	        }
	        if (!isUndefined(from._isUTC)) {
	            to._isUTC = from._isUTC;
	        }
	        if (!isUndefined(from._offset)) {
	            to._offset = from._offset;
	        }
	        if (!isUndefined(from._pf)) {
	            to._pf = getParsingFlags(from);
	        }
	        if (!isUndefined(from._locale)) {
	            to._locale = from._locale;
	        }

	        if (momentProperties.length > 0) {
	            for (i in momentProperties) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (!isUndefined(val)) {
	                    to[prop] = val;
	                }
	            }
	        }

	        return to;
	    }

	    var updateInProgress = false;

	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            utils_hooks__hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }

	    function isMoment (obj) {
	        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	    }

	    function absFloor (number) {
	        if (number < 0) {
	            return Math.ceil(number);
	        } else {
	            return Math.floor(number);
	        }
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }

	        return value;
	    }

	    // compare two arrays, return the number of differences
	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if ((dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    function warn(msg) {
	        if (utils_hooks__hooks.suppressDeprecationWarnings === false &&
	                (typeof console !==  'undefined') && console.warn) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;

	        return extend(function () {
	            if (utils_hooks__hooks.deprecationHandler != null) {
	                utils_hooks__hooks.deprecationHandler(null, msg);
	            }
	            if (firstTime) {
	                warn(msg + '\nArguments: ' + Array.prototype.slice.call(arguments).join(', ') + '\n' + (new Error()).stack);
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    var deprecations = {};

	    function deprecateSimple(name, msg) {
	        if (utils_hooks__hooks.deprecationHandler != null) {
	            utils_hooks__hooks.deprecationHandler(name, msg);
	        }
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }

	    utils_hooks__hooks.suppressDeprecationWarnings = false;
	    utils_hooks__hooks.deprecationHandler = null;

	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }

	    function isObject(input) {
	        return Object.prototype.toString.call(input) === '[object Object]';
	    }

	    function locale_set__set (config) {
	        var prop, i;
	        for (i in config) {
	            prop = config[i];
	            if (isFunction(prop)) {
	                this[i] = prop;
	            } else {
	                this['_' + i] = prop;
	            }
	        }
	        this._config = config;
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _ordinalParseLenient.
	        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
	    }

	    function mergeConfigs(parentConfig, childConfig) {
	        var res = extend({}, parentConfig), prop;
	        for (prop in childConfig) {
	            if (hasOwnProp(childConfig, prop)) {
	                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                    res[prop] = {};
	                    extend(res[prop], parentConfig[prop]);
	                    extend(res[prop], childConfig[prop]);
	                } else if (childConfig[prop] != null) {
	                    res[prop] = childConfig[prop];
	                } else {
	                    delete res[prop];
	                }
	            }
	        }
	        return res;
	    }

	    function Locale(config) {
	        if (config != null) {
	            this.set(config);
	        }
	    }

	    var keys;

	    if (Object.keys) {
	        keys = Object.keys;
	    } else {
	        keys = function (obj) {
	            var i, res = [];
	            for (i in obj) {
	                if (hasOwnProp(obj, i)) {
	                    res.push(i);
	                }
	            }
	            return res;
	        };
	    }

	    // internal storage for locale config files
	    var locales = {};
	    var globalLocale;

	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0, j, next, locale, split;

	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return null;
	    }

	    function loadLocale(name) {
	        var oldLocale = null;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (!locales[name] && (typeof module !== 'undefined') &&
	                module && module.exports) {
	            try {
	                oldLocale = globalLocale._abbr;
	                __webpack_require__(348)("./" + name);
	                // because defineLocale currently also sets the global locale, we
	                // want to undo that for lazy loaded locales
	                locale_locales__getSetGlobalLocale(oldLocale);
	            } catch (e) { }
	        }
	        return locales[name];
	    }

	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function locale_locales__getSetGlobalLocale (key, values) {
	        var data;
	        if (key) {
	            if (isUndefined(values)) {
	                data = locale_locales__getLocale(key);
	            }
	            else {
	                data = defineLocale(key, values);
	            }

	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            }
	        }

	        return globalLocale._abbr;
	    }

	    function defineLocale (name, config) {
	        if (config !== null) {
	            config.abbr = name;
	            if (locales[name] != null) {
	                deprecateSimple('defineLocaleOverride',
	                        'use moment.updateLocale(localeName, config) to change ' +
	                        'an existing locale. moment.defineLocale(localeName, ' +
	                        'config) should only be used for creating a new locale');
	                config = mergeConfigs(locales[name]._config, config);
	            } else if (config.parentLocale != null) {
	                if (locales[config.parentLocale] != null) {
	                    config = mergeConfigs(locales[config.parentLocale]._config, config);
	                } else {
	                    // treat as if there is no base config
	                    deprecateSimple('parentLocaleUndefined',
	                            'specified parentLocale is not defined yet');
	                }
	            }
	            locales[name] = new Locale(config);

	            // backwards compat for now: also set the locale
	            locale_locales__getSetGlobalLocale(name);

	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }

	    function updateLocale(name, config) {
	        if (config != null) {
	            var locale;
	            if (locales[name] != null) {
	                config = mergeConfigs(locales[name]._config, config);
	            }
	            locale = new Locale(config);
	            locale.parentLocale = locales[name];
	            locales[name] = locale;

	            // backwards compat for now: also set the locale
	            locale_locales__getSetGlobalLocale(name);
	        } else {
	            // pass null for config to unupdate, useful for tests
	            if (locales[name] != null) {
	                if (locales[name].parentLocale != null) {
	                    locales[name] = locales[name].parentLocale;
	                } else if (locales[name] != null) {
	                    delete locales[name];
	                }
	            }
	        }
	        return locales[name];
	    }

	    // returns locale data
	    function locale_locales__getLocale (key) {
	        var locale;

	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }

	        if (!key) {
	            return globalLocale;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }

	        return chooseLocale(key);
	    }

	    function locale_locales__listLocales() {
	        return keys(locales);
	    }

	    var aliases = {};

	    function addUnitAlias (unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }

	    function normalizeUnits(units) {
	        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    function makeGetSet (unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                get_set__set(this, unit, value);
	                utils_hooks__hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get_set__get(this, unit);
	            }
	        };
	    }

	    function get_set__get (mom, unit) {
	        return mom.isValid() ?
	            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
	    }

	    function get_set__set (mom, unit, value) {
	        if (mom.isValid()) {
	            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	        }
	    }

	    // MOMENTS

	    function getSet (units, value) {
	        var unit;
	        if (typeof units === 'object') {
	            for (unit in units) {
	                this.set(unit, units[unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (isFunction(this[units])) {
	                return this[units](value);
	            }
	        }
	        return this;
	    }

	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	    }

	    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

	    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

	    var formatFunctions = {};

	    var formatTokenFunctions = {};

	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken (token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(func.apply(this, arguments), token);
	            };
	        }
	    }

	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens), i, length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = '', i;
	            for (i = 0; i < length; i++) {
	                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }

	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, locale) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }

	    var match1         = /\d/;            //       0 - 9
	    var match2         = /\d\d/;          //      00 - 99
	    var match3         = /\d{3}/;         //     000 - 999
	    var match4         = /\d{4}/;         //    0000 - 9999
	    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	    var match1to2      = /\d\d?/;         //       0 - 99
	    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
	    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
	    var match1to3      = /\d{1,3}/;       //       0 - 999
	    var match1to4      = /\d{1,4}/;       //       0 - 9999
	    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

	    var matchUnsigned  = /\d+/;           //       0 - inf
	    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

	    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
	    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

	    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

	    // any word (or two) characters or numbers including two/three word month in arabic.
	    // includes scottish gaelic two word and hyphenated months
	    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;


	    var regexes = {};

	    function addRegexToken (token, regex, strictRegex) {
	        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
	            return (isStrict && strictRegex) ? strictRegex : regex;
	        };
	    }

	    function getParseRegexForToken (token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }

	        return regexes[token](config._strict, config._locale);
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        }));
	    }

	    function regexEscape(s) {
	        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    var tokens = {};

	    function addParseToken (token, callback) {
	        var i, func = callback;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (typeof callback === 'number') {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        for (i = 0; i < token.length; i++) {
	            tokens[token[i]] = func;
	        }
	    }

	    function addWeekParseToken (token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }

	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }

	    var YEAR = 0;
	    var MONTH = 1;
	    var DATE = 2;
	    var HOUR = 3;
	    var MINUTE = 4;
	    var SECOND = 5;
	    var MILLISECOND = 6;
	    var WEEK = 7;
	    var WEEKDAY = 8;

	    var indexOf;

	    if (Array.prototype.indexOf) {
	        indexOf = Array.prototype.indexOf;
	    } else {
	        indexOf = function (o) {
	            // I know
	            var i;
	            for (i = 0; i < this.length; ++i) {
	                if (this[i] === o) {
	                    return i;
	                }
	            }
	            return -1;
	        };
	    }

	    function daysInMonth(year, month) {
	        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
	    }

	    // FORMATTING

	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });

	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });

	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });

	    // ALIASES

	    addUnitAlias('month', 'M');

	    // PARSING

	    addRegexToken('M',    match1to2);
	    addRegexToken('MM',   match1to2, match2);
	    addRegexToken('MMM',  function (isStrict, locale) {
	        return locale.monthsShortRegex(isStrict);
	    });
	    addRegexToken('MMMM', function (isStrict, locale) {
	        return locale.monthsRegex(isStrict);
	    });

	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });

	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });

	    // LOCALES

	    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/;
	    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	    function localeMonths (m, format) {
	        return isArray(this._months) ? this._months[m.month()] :
	            this._months[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	    }

	    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	    function localeMonthsShort (m, format) {
	        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
	            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	    }

	    function units_month__handleStrictParse(monthName, format, strict) {
	        var i, ii, mom, llc = monthName.toLocaleLowerCase();
	        if (!this._monthsParse) {
	            // this is not used
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	            for (i = 0; i < 12; ++i) {
	                mom = create_utc__createUTC([2000, i]);
	                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
	                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	            }
	        }

	        if (strict) {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }

	    function localeMonthsParse (monthName, format, strict) {
	        var i, mom, regex;

	        if (this._monthsParseExact) {
	            return units_month__handleStrictParse.call(this, monthName, format, strict);
	        }

	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }

	        // TODO: add sorting
	        // Sorting makes sure if one month (or abbr) is a prefix of another
	        // see sorting in computeMonthsParse
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function setMonth (mom, value) {
	        var dayOfMonth;

	        if (!mom.isValid()) {
	            // No op
	            return mom;
	        }

	        if (typeof value === 'string') {
	            if (/^\d+$/.test(value)) {
	                value = toInt(value);
	            } else {
	                value = mom.localeData().monthsParse(value);
	                // TODO: Another silent failure?
	                if (typeof value !== 'number') {
	                    return mom;
	                }
	            }
	        }

	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function getSetMonth (value) {
	        if (value != null) {
	            setMonth(this, value);
	            utils_hooks__hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get_set__get(this, 'Month');
	        }
	    }

	    function getDaysInMonth () {
	        return daysInMonth(this.year(), this.month());
	    }

	    var defaultMonthsShortRegex = matchWord;
	    function monthsShortRegex (isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsShortStrictRegex;
	            } else {
	                return this._monthsShortRegex;
	            }
	        } else {
	            return this._monthsShortStrictRegex && isStrict ?
	                this._monthsShortStrictRegex : this._monthsShortRegex;
	        }
	    }

	    var defaultMonthsRegex = matchWord;
	    function monthsRegex (isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsStrictRegex;
	            } else {
	                return this._monthsRegex;
	            }
	        } else {
	            return this._monthsStrictRegex && isStrict ?
	                this._monthsStrictRegex : this._monthsRegex;
	        }
	    }

	    function computeMonthsParse () {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }

	        var shortPieces = [], longPieces = [], mixedPieces = [],
	            i, mom;
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, i]);
	            shortPieces.push(this.monthsShort(mom, ''));
	            longPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.monthsShort(mom, ''));
	        }
	        // Sorting makes sure if one month (or abbr) is a prefix of another it
	        // will match the longer piece.
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 12; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }

	        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._monthsShortRegex = this._monthsRegex;
	        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	    }

	    function checkOverflow (m) {
	        var overflow;
	        var a = m._a;

	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	                -1;

	            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }
	            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	                overflow = WEEK;
	            }
	            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	                overflow = WEEKDAY;
	            }

	            getParsingFlags(m).overflow = overflow;
	        }

	        return m;
	    }

	    // iso 8601 regex
	    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;
	    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;

	    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

	    var isoDates = [
	        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	        ['YYYY-DDD', /\d{4}-\d{3}/],
	        ['YYYY-MM', /\d{4}-\d\d/, false],
	        ['YYYYYYMMDD', /[+-]\d{10}/],
	        ['YYYYMMDD', /\d{8}/],
	        // YYYYMM is NOT allowed by the standard
	        ['GGGG[W]WWE', /\d{4}W\d{3}/],
	        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	        ['YYYYDDD', /\d{7}/]
	    ];

	    // iso time formats and regexes
	    var isoTimes = [
	        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	        ['HH:mm', /\d\d:\d\d/],
	        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	        ['HHmmss', /\d\d\d\d\d\d/],
	        ['HHmm', /\d\d\d\d/],
	        ['HH', /\d\d/]
	    ];

	    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

	    // date from iso format
	    function configFromISO(config) {
	        var i, l,
	            string = config._i,
	            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	            allowTime, dateFormat, timeFormat, tzFormat;

	        if (match) {
	            getParsingFlags(config).iso = true;

	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(match[1])) {
	                    dateFormat = isoDates[i][0];
	                    allowTime = isoDates[i][2] !== false;
	                    break;
	                }
	            }
	            if (dateFormat == null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[3]) {
	                for (i = 0, l = isoTimes.length; i < l; i++) {
	                    if (isoTimes[i][1].exec(match[3])) {
	                        // match[2] should be 'T' or space
	                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                        break;
	                    }
	                }
	                if (timeFormat == null) {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            if (!allowTime && timeFormat != null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[4]) {
	                if (tzRegex.exec(match[4])) {
	                    tzFormat = 'Z';
	                } else {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }

	    // date from iso format or fallback
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);

	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }

	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    utils_hooks__hooks.createFromInputFallback = deprecate(
	        'moment construction falls back to js Date. This is ' +
	        'discouraged and will be removed in upcoming major ' +
	        'release. Please refer to ' +
	        'https://github.com/moment/moment/issues/1407 for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );

	    function createDate (y, m, d, h, M, s, ms) {
	        //can't just apply() to create a date:
	        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	        var date = new Date(y, m, d, h, M, s, ms);

	        //the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
	            date.setFullYear(y);
	        }
	        return date;
	    }

	    function createUTCDate (y) {
	        var date = new Date(Date.UTC.apply(null, arguments));

	        //the Date.UTC function remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
	            date.setUTCFullYear(y);
	        }
	        return date;
	    }

	    // FORMATTING

	    addFormatToken('Y', 0, 0, function () {
	        var y = this.year();
	        return y <= 9999 ? '' + y : '+' + y;
	    });

	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });

	    addFormatToken(0, ['YYYY',   4],       0, 'year');
	    addFormatToken(0, ['YYYYY',  5],       0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	    // ALIASES

	    addUnitAlias('year', 'y');

	    // PARSING

	    addRegexToken('Y',      matchSigned);
	    addRegexToken('YY',     match1to2, match2);
	    addRegexToken('YYYY',   match1to4, match4);
	    addRegexToken('YYYYY',  match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);

	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });
	    addParseToken('Y', function (input, array) {
	        array[YEAR] = parseInt(input, 10);
	    });

	    // HELPERS

	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }

	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }

	    // HOOKS

	    utils_hooks__hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    // MOMENTS

	    var getSetYear = makeGetSet('FullYear', true);

	    function getIsLeapYear () {
	        return isLeapYear(this.year());
	    }

	    // start-of-first-week - start-of-year
	    function firstWeekOffset(year, dow, doy) {
	        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	            fwd = 7 + dow - doy,
	            // first-week day local weekday -- which local weekday is fwd
	            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

	        return -fwdlw + fwd - 1;
	    }

	    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	        var localWeekday = (7 + weekday - dow) % 7,
	            weekOffset = firstWeekOffset(year, dow, doy),
	            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	            resYear, resDayOfYear;

	        if (dayOfYear <= 0) {
	            resYear = year - 1;
	            resDayOfYear = daysInYear(resYear) + dayOfYear;
	        } else if (dayOfYear > daysInYear(year)) {
	            resYear = year + 1;
	            resDayOfYear = dayOfYear - daysInYear(year);
	        } else {
	            resYear = year;
	            resDayOfYear = dayOfYear;
	        }

	        return {
	            year: resYear,
	            dayOfYear: resDayOfYear
	        };
	    }

	    function weekOfYear(mom, dow, doy) {
	        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	            resWeek, resYear;

	        if (week < 1) {
	            resYear = mom.year() - 1;
	            resWeek = week + weeksInYear(resYear, dow, doy);
	        } else if (week > weeksInYear(mom.year(), dow, doy)) {
	            resWeek = week - weeksInYear(mom.year(), dow, doy);
	            resYear = mom.year() + 1;
	        } else {
	            resYear = mom.year();
	            resWeek = week;
	        }

	        return {
	            week: resWeek,
	            year: resYear
	        };
	    }

	    function weeksInYear(year, dow, doy) {
	        var weekOffset = firstWeekOffset(year, dow, doy),
	            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	    }

	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }

	    function currentDateArray(config) {
	        // hooks is actually the exported moment object
	        var nowValue = new Date(utils_hooks__hooks.now());
	        if (config._useUTC) {
	            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
	        }
	        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray (config) {
	        var i, date, input = [], currentDate, yearToUse;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	            if (config._dayOfYear > daysInYear(yearToUse)) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }

	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	        }

	        // Check for 24:00:00.000
	        if (config._a[HOUR] === 24 &&
	                config._a[MINUTE] === 0 &&
	                config._a[SECOND] === 0 &&
	                config._a[MILLISECOND] === 0) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }

	        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }

	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }
	    }

	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;

	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	            if (weekday < 1 || weekday > 7) {
	                weekdayOverflow = true;
	            }
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;

	            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
	            week = defaults(w.w, 1);

	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < 0 || weekday > 6) {
	                    weekdayOverflow = true;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from begining of week
	                weekday = w.e + dow;
	                if (w.e < 0 || w.e > 6) {
	                    weekdayOverflow = true;
	                }
	            } else {
	                // default to begining of week
	                weekday = dow;
	            }
	        }
	        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	            getParsingFlags(config)._overflowWeeks = true;
	        } else if (weekdayOverflow != null) {
	            getParsingFlags(config)._overflowWeekday = true;
	        } else {
	            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	            config._a[YEAR] = temp.year;
	            config._dayOfYear = temp.dayOfYear;
	        }
	    }

	    // constant that refers to the ISO standard
	    utils_hooks__hooks.ISO_8601 = function () {};

	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === utils_hooks__hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }

	        config._a = [];
	        getParsingFlags(config).empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i, parsedInput, tokens, token, skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;

	        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            // console.log('token', token, 'parsedInput', parsedInput,
	            //         'regex', getParseRegexForToken(token, config));
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                }
	                else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            }
	            else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }

	        // clear _12h flag if hour is <= 12
	        if (getParsingFlags(config).bigHour === true &&
	                config._a[HOUR] <= 12 &&
	                config._a[HOUR] > 0) {
	            getParsingFlags(config).bigHour = undefined;
	        }

	        getParsingFlags(config).parsedDateParts = config._a.slice(0);
	        getParsingFlags(config).meridiem = config._meridiem;
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

	        configFromArray(config);
	        checkOverflow(config);
	    }


	    function meridiemFixWrap (locale, hour, meridiem) {
	        var isPm;

	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }

	    // date from string and array of format strings
	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,

	            scoreToBeat,
	            i,
	            currentScore;

	        if (config._f.length === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);

	            if (!valid__isValid(tempConfig)) {
	                continue;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;

	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	            getParsingFlags(tempConfig).score = currentScore;

	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }

	        var i = normalizeObjectUnits(config._i);
	        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
	            return obj && parseInt(obj, 10);
	        });

	        configFromArray(config);
	    }

	    function createFromConfig (config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }

	        return res;
	    }

	    function prepareConfig (config) {
	        var input = config._i,
	            format = config._f;

	        config._locale = config._locale || locale_locales__getLocale(config._l);

	        if (input === null || (format === undefined && input === '')) {
	            return valid__createInvalid({nullInput: true});
	        }

	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }

	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        } else if (isDate(input)) {
	            config._d = input;
	        } else {
	            configFromInput(config);
	        }

	        if (!valid__isValid(config)) {
	            config._d = null;
	        }

	        return config;
	    }

	    function configFromInput(config) {
	        var input = config._i;
	        if (input === undefined) {
	            config._d = new Date(utils_hooks__hooks.now());
	        } else if (isDate(input)) {
	            config._d = new Date(input.valueOf());
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (typeof(input) === 'object') {
	            configFromObject(config);
	        } else if (typeof(input) === 'number') {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    function createLocalOrUTC (input, format, locale, strict, isUTC) {
	        var c = {};

	        if (typeof(locale) === 'boolean') {
	            strict = locale;
	            locale = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;

	        return createFromConfig(c);
	    }

	    function local__createLocal (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }

	    var prototypeMin = deprecate(
	         'moment().min is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
	         function () {
	             var other = local__createLocal.apply(null, arguments);
	             if (this.isValid() && other.isValid()) {
	                 return other < this ? this : other;
	             } else {
	                 return valid__createInvalid();
	             }
	         }
	     );

	    var prototypeMax = deprecate(
	        'moment().max is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
	        function () {
	            var other = local__createLocal.apply(null, arguments);
	            if (this.isValid() && other.isValid()) {
	                return other > this ? this : other;
	            } else {
	                return valid__createInvalid();
	            }
	        }
	    );

	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return local__createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }

	    // TODO: Use [].sort instead?
	    function min () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isBefore', args);
	    }

	    function max () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isAfter', args);
	    }

	    var now = function () {
	        return Date.now ? Date.now() : +(new Date());
	    };

	    function Duration (duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days +
	            weeks * 7;
	        // It is impossible translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months +
	            quarters * 3 +
	            years * 12;

	        this._data = {};

	        this._locale = locale_locales__getLocale();

	        this._bubble();
	    }

	    function isDuration (obj) {
	        return obj instanceof Duration;
	    }

	    // FORMATTING

	    function offset (token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset();
	            var sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	        });
	    }

	    offset('Z', ':');
	    offset('ZZ', '');

	    // PARSING

	    addRegexToken('Z',  matchShortOffset);
	    addRegexToken('ZZ', matchShortOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(matchShortOffset, input);
	    });

	    // HELPERS

	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;

	    function offsetFromString(matcher, string) {
	        var matches = ((string || '').match(matcher) || []);
	        var chunk   = matches[matches.length - 1] || [];
	        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        var minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return parts[0] === '+' ? minutes : -minutes;
	    }

	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff = (isMoment(input) || isDate(input) ? input.valueOf() : local__createLocal(input).valueOf()) - res.valueOf();
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(res._d.valueOf() + diff);
	            utils_hooks__hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return local__createLocal(input).local();
	        }
	    }

	    function getDateOffset (m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	    }

	    // HOOKS

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    utils_hooks__hooks.updateOffset = function () {};

	    // MOMENTS

	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset (input, keepLocalTime) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(matchShortOffset, input);
	            } else if (Math.abs(input) < 16) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    utils_hooks__hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }

	    function getSetZone (input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }

	            this.utcOffset(input, keepLocalTime);

	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }

	    function setOffsetToUTC (keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }

	    function setOffsetToLocal (keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;

	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }

	    function setOffsetToParsedOffset () {
	        if (this._tzm) {
	            this.utcOffset(this._tzm);
	        } else if (typeof this._i === 'string') {
	            this.utcOffset(offsetFromString(matchOffset, this._i));
	        }
	        return this;
	    }

	    function hasAlignedHourOffset (input) {
	        if (!this.isValid()) {
	            return false;
	        }
	        input = input ? local__createLocal(input).utcOffset() : 0;

	        return (this.utcOffset() - input) % 60 === 0;
	    }

	    function isDaylightSavingTime () {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }

	    function isDaylightSavingTimeShifted () {
	        if (!isUndefined(this._isDSTShifted)) {
	            return this._isDSTShifted;
	        }

	        var c = {};

	        copyConfig(c, this);
	        c = prepareConfig(c);

	        if (c._a) {
	            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
	            this._isDSTShifted = this.isValid() &&
	                compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }

	        return this._isDSTShifted;
	    }

	    function isLocal () {
	        return this.isValid() ? !this._isUTC : false;
	    }

	    function isUtcOffset () {
	        return this.isValid() ? this._isUTC : false;
	    }

	    function isUtc () {
	        return this.isValid() ? this._isUTC && this._offset === 0 : false;
	    }

	    // ASP.NET json date format regex
	    var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?\d*)?$/;

	    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	    // and further modified to allow for strings containing both week and day
	    var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;

	    function create__createDuration (input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;

	        if (isDuration(input)) {
	            duration = {
	                ms : input._milliseconds,
	                d  : input._days,
	                M  : input._months
	            };
	        } else if (typeof input === 'number') {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y  : 0,
	                d  : toInt(match[DATE])        * sign,
	                h  : toInt(match[HOUR])        * sign,
	                m  : toInt(match[MINUTE])      * sign,
	                s  : toInt(match[SECOND])      * sign,
	                ms : toInt(match[MILLISECOND]) * sign
	            };
	        } else if (!!(match = isoRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y : parseIso(match[2], sign),
	                M : parseIso(match[3], sign),
	                w : parseIso(match[4], sign),
	                d : parseIso(match[5], sign),
	                h : parseIso(match[6], sign),
	                m : parseIso(match[7], sign),
	                s : parseIso(match[8], sign)
	            };
	        } else if (duration == null) {// checks for null or undefined
	            duration = {};
	        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }

	        ret = new Duration(duration);

	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }

	        return ret;
	    }

	    create__createDuration.fn = Duration.prototype;

	    function parseIso (inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }

	    function positiveMomentsDifference(base, other) {
	        var res = {milliseconds: 0, months: 0};

	        res.months = other.month() - base.month() +
	            (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }

	        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

	        return res;
	    }

	    function momentsDifference(base, other) {
	        var res;
	        if (!(base.isValid() && other.isValid())) {
	            return {milliseconds: 0, months: 0};
	        }

	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }

	        return res;
	    }

	    function absRound (number) {
	        if (number < 0) {
	            return Math.round(-1 * number) * -1;
	        } else {
	            return Math.round(number);
	        }
	    }

	    // TODO: remove 'name' arg after deprecation is removed
	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
	                tmp = val; val = period; period = tmp;
	            }

	            val = typeof val === 'string' ? +val : val;
	            dur = create__createDuration(val, period);
	            add_subtract__addSubtract(this, dur, direction);
	            return this;
	        };
	    }

	    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = absRound(duration._days),
	            months = absRound(duration._months);

	        if (!mom.isValid()) {
	            // No op
	            return;
	        }

	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (milliseconds) {
	            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	        }
	        if (days) {
	            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
	        }
	        if (months) {
	            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
	        }
	        if (updateOffset) {
	            utils_hooks__hooks.updateOffset(mom, days || months);
	        }
	    }

	    var add_subtract__add      = createAdder(1, 'add');
	    var add_subtract__subtract = createAdder(-1, 'subtract');

	    function moment_calendar__calendar (time, formats) {
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || local__createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            diff = this.diff(sod, 'days', true),
	            format = diff < -6 ? 'sameElse' :
	                diff < -1 ? 'lastWeek' :
	                diff < 0 ? 'lastDay' :
	                diff < 1 ? 'sameDay' :
	                diff < 2 ? 'nextDay' :
	                diff < 7 ? 'nextWeek' : 'sameElse';

	        var output = formats && (isFunction(formats[format]) ? formats[format]() : formats[format]);

	        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));
	    }

	    function clone () {
	        return new Moment(this);
	    }

	    function isAfter (input, units) {
	        var localInput = isMoment(input) ? input : local__createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() > localInput.valueOf();
	        } else {
	            return localInput.valueOf() < this.clone().startOf(units).valueOf();
	        }
	    }

	    function isBefore (input, units) {
	        var localInput = isMoment(input) ? input : local__createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() < localInput.valueOf();
	        } else {
	            return this.clone().endOf(units).valueOf() < localInput.valueOf();
	        }
	    }

	    function isBetween (from, to, units, inclusivity) {
	        inclusivity = inclusivity || '()';
	        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
	            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
	    }

	    function isSame (input, units) {
	        var localInput = isMoment(input) ? input : local__createLocal(input),
	            inputMs;
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units || 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() === localInput.valueOf();
	        } else {
	            inputMs = localInput.valueOf();
	            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
	        }
	    }

	    function isSameOrAfter (input, units) {
	        return this.isSame(input, units) || this.isAfter(input,units);
	    }

	    function isSameOrBefore (input, units) {
	        return this.isSame(input, units) || this.isBefore(input,units);
	    }

	    function diff (input, units, asFloat) {
	        var that,
	            zoneDelta,
	            delta, output;

	        if (!this.isValid()) {
	            return NaN;
	        }

	        that = cloneWithOffset(input, this);

	        if (!that.isValid()) {
	            return NaN;
	        }

	        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

	        units = normalizeUnits(units);

	        if (units === 'year' || units === 'month' || units === 'quarter') {
	            output = monthDiff(this, that);
	            if (units === 'quarter') {
	                output = output / 3;
	            } else if (units === 'year') {
	                output = output / 12;
	            }
	        } else {
	            delta = this - that;
	            output = units === 'second' ? delta / 1e3 : // 1000
	                units === 'minute' ? delta / 6e4 : // 1000 * 60
	                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
	                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
	                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
	                delta;
	        }
	        return asFloat ? output : absFloor(output);
	    }

	    function monthDiff (a, b) {
	        // difference in months
	        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2, adjust;

	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }

	        //check for negative zero, return zero if negative zero
	        return -(wholeMonthDiff + adjust) || 0;
	    }

	    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	    utils_hooks__hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

	    function toString () {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }

	    function moment_format__toISOString () {
	        var m = this.clone().utc();
	        if (0 < m.year() && m.year() <= 9999) {
	            if (isFunction(Date.prototype.toISOString)) {
	                // native implementation is ~50x faster, use it when we can
	                return this.toDate().toISOString();
	            } else {
	                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	            }
	        } else {
	            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	        }
	    }

	    function format (inputString) {
	        if (!inputString) {
	            inputString = this.isUtc() ? utils_hooks__hooks.defaultFormatUtc : utils_hooks__hooks.defaultFormat;
	        }
	        var output = formatMoment(this, inputString);
	        return this.localeData().postformat(output);
	    }

	    function from (time, withoutSuffix) {
	        if (this.isValid() &&
	                ((isMoment(time) && time.isValid()) ||
	                 local__createLocal(time).isValid())) {
	            return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }

	    function fromNow (withoutSuffix) {
	        return this.from(local__createLocal(), withoutSuffix);
	    }

	    function to (time, withoutSuffix) {
	        if (this.isValid() &&
	                ((isMoment(time) && time.isValid()) ||
	                 local__createLocal(time).isValid())) {
	            return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }

	    function toNow (withoutSuffix) {
	        return this.to(local__createLocal(), withoutSuffix);
	    }

	    // If passed a locale key, it will set the locale for this
	    // instance.  Otherwise, it will return the locale configuration
	    // variables for this instance.
	    function locale (key) {
	        var newLocaleData;

	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = locale_locales__getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }

	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );

	    function localeData () {
	        return this._locale;
	    }

	    function startOf (units) {
	        units = normalizeUnits(units);
	        // the following switch intentionally omits break keywords
	        // to utilize falling through the cases.
	        switch (units) {
	        case 'year':
	            this.month(0);
	            /* falls through */
	        case 'quarter':
	        case 'month':
	            this.date(1);
	            /* falls through */
	        case 'week':
	        case 'isoWeek':
	        case 'day':
	        case 'date':
	            this.hours(0);
	            /* falls through */
	        case 'hour':
	            this.minutes(0);
	            /* falls through */
	        case 'minute':
	            this.seconds(0);
	            /* falls through */
	        case 'second':
	            this.milliseconds(0);
	        }

	        // weeks are a special case
	        if (units === 'week') {
	            this.weekday(0);
	        }
	        if (units === 'isoWeek') {
	            this.isoWeekday(1);
	        }

	        // quarters are also special
	        if (units === 'quarter') {
	            this.month(Math.floor(this.month() / 3) * 3);
	        }

	        return this;
	    }

	    function endOf (units) {
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond') {
	            return this;
	        }

	        // 'date' is an alias for 'day', so it should be considered as such.
	        if (units === 'date') {
	            units = 'day';
	        }

	        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	    }

	    function to_type__valueOf () {
	        return this._d.valueOf() - ((this._offset || 0) * 60000);
	    }

	    function unix () {
	        return Math.floor(this.valueOf() / 1000);
	    }

	    function toDate () {
	        return this._offset ? new Date(this.valueOf()) : this._d;
	    }

	    function toArray () {
	        var m = this;
	        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	    }

	    function toObject () {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds()
	        };
	    }

	    function toJSON () {
	        // new Date(NaN).toJSON() === null
	        return this.isValid() ? this.toISOString() : null;
	    }

	    function moment_valid__isValid () {
	        return valid__isValid(this);
	    }

	    function parsingFlags () {
	        return extend({}, getParsingFlags(this));
	    }

	    function invalidAt () {
	        return getParsingFlags(this).overflow;
	    }

	    function creationData() {
	        return {
	            input: this._i,
	            format: this._f,
	            locale: this._locale,
	            isUTC: this._isUTC,
	            strict: this._strict
	        };
	    }

	    // FORMATTING

	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });

	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });

	    function addWeekYearFormatToken (token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }

	    addWeekYearFormatToken('gggg',     'weekYear');
	    addWeekYearFormatToken('ggggg',    'weekYear');
	    addWeekYearFormatToken('GGGG',  'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	    // ALIASES

	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');

	    // PARSING

	    addRegexToken('G',      matchSigned);
	    addRegexToken('g',      matchSigned);
	    addRegexToken('GG',     match1to2, match2);
	    addRegexToken('gg',     match1to2, match2);
	    addRegexToken('GGGG',   match1to4, match4);
	    addRegexToken('gggg',   match1to4, match4);
	    addRegexToken('GGGGG',  match1to6, match6);
	    addRegexToken('ggggg',  match1to6, match6);

	    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	        week[token.substr(0, 2)] = toInt(input);
	    });

	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });

	    // MOMENTS

	    function getSetWeekYear (input) {
	        return getSetWeekYearHelper.call(this,
	                input,
	                this.week(),
	                this.weekday(),
	                this.localeData()._week.dow,
	                this.localeData()._week.doy);
	    }

	    function getSetISOWeekYear (input) {
	        return getSetWeekYearHelper.call(this,
	                input, this.isoWeek(), this.isoWeekday(), 1, 4);
	    }

	    function getISOWeeksInYear () {
	        return weeksInYear(this.year(), 1, 4);
	    }

	    function getWeeksInYear () {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }

	    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	        var weeksTarget;
	        if (input == null) {
	            return weekOfYear(this, dow, doy).year;
	        } else {
	            weeksTarget = weeksInYear(input, dow, doy);
	            if (week > weeksTarget) {
	                week = weeksTarget;
	            }
	            return setWeekAll.call(this, input, week, weekday, dow, doy);
	        }
	    }

	    function setWeekAll(weekYear, week, weekday, dow, doy) {
	        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

	        this.year(date.getUTCFullYear());
	        this.month(date.getUTCMonth());
	        this.date(date.getUTCDate());
	        return this;
	    }

	    // FORMATTING

	    addFormatToken('Q', 0, 'Qo', 'quarter');

	    // ALIASES

	    addUnitAlias('quarter', 'Q');

	    // PARSING

	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });

	    // MOMENTS

	    function getSetQuarter (input) {
	        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	    }

	    // FORMATTING

	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	    // ALIASES

	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');

	    // PARSING

	    addRegexToken('w',  match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W',  match1to2);
	    addRegexToken('WW', match1to2, match2);

	    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	        week[token.substr(0, 1)] = toInt(input);
	    });

	    // HELPERS

	    // LOCALES

	    function localeWeek (mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }

	    var defaultLocaleWeek = {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    };

	    function localeFirstDayOfWeek () {
	        return this._week.dow;
	    }

	    function localeFirstDayOfYear () {
	        return this._week.doy;
	    }

	    // MOMENTS

	    function getSetWeek (input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    function getSetISOWeek (input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    // FORMATTING

	    addFormatToken('D', ['DD', 2], 'Do', 'date');

	    // ALIASES

	    addUnitAlias('date', 'D');

	    // PARSING

	    addRegexToken('D',  match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
	    });

	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0], 10);
	    });

	    // MOMENTS

	    var getSetDayOfMonth = makeGetSet('Date', true);

	    // FORMATTING

	    addFormatToken('d', 0, 'do', 'day');

	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });

	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });

	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });

	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');

	    // ALIASES

	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');

	    // PARSING

	    addRegexToken('d',    match1to2);
	    addRegexToken('e',    match1to2);
	    addRegexToken('E',    match1to2);
	    addRegexToken('dd',   function (isStrict, locale) {
	        return locale.weekdaysMinRegex(isStrict);
	    });
	    addRegexToken('ddd',   function (isStrict, locale) {
	        return locale.weekdaysShortRegex(isStrict);
	    });
	    addRegexToken('dddd',   function (isStrict, locale) {
	        return locale.weekdaysRegex(isStrict);
	    });

	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	        var weekday = config._locale.weekdaysParse(input, token, config._strict);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });

	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });

	    // HELPERS

	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }

	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }

	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }

	        return null;
	    }

	    // LOCALES

	    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	    function localeWeekdays (m, format) {
	        return isArray(this._weekdays) ? this._weekdays[m.day()] :
	            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
	    }

	    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	    function localeWeekdaysShort (m) {
	        return this._weekdaysShort[m.day()];
	    }

	    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	    function localeWeekdaysMin (m) {
	        return this._weekdaysMin[m.day()];
	    }

	    function day_of_week__handleStrictParse(weekdayName, format, strict) {
	        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._minWeekdaysParse = [];

	            for (i = 0; i < 7; ++i) {
	                mom = create_utc__createUTC([2000, 1]).day(i);
	                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
	                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
	                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	            }
	        }

	        if (strict) {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }

	    function localeWeekdaysParse (weekdayName, format, strict) {
	        var i, mom, regex;

	        if (this._weekdaysParseExact) {
	            return day_of_week__handleStrictParse.call(this, weekdayName, format, strict);
	        }

	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._minWeekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._fullWeekdaysParse = [];
	        }

	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already

	            mom = create_utc__createUTC([2000, 1]).day(i);
	            if (strict && !this._fullWeekdaysParse[i]) {
	                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
	                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
	                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
	            }
	            if (!this._weekdaysParse[i]) {
	                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function getSetDayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }

	    function getSetLocaleDayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }

	    function getSetISODayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.
	        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
	    }

	    var defaultWeekdaysRegex = matchWord;
	    function weekdaysRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysStrictRegex;
	            } else {
	                return this._weekdaysRegex;
	            }
	        } else {
	            return this._weekdaysStrictRegex && isStrict ?
	                this._weekdaysStrictRegex : this._weekdaysRegex;
	        }
	    }

	    var defaultWeekdaysShortRegex = matchWord;
	    function weekdaysShortRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysShortStrictRegex;
	            } else {
	                return this._weekdaysShortRegex;
	            }
	        } else {
	            return this._weekdaysShortStrictRegex && isStrict ?
	                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
	        }
	    }

	    var defaultWeekdaysMinRegex = matchWord;
	    function weekdaysMinRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysMinStrictRegex;
	            } else {
	                return this._weekdaysMinRegex;
	            }
	        } else {
	            return this._weekdaysMinStrictRegex && isStrict ?
	                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
	        }
	    }


	    function computeWeekdaysParse () {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }

	        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
	            i, mom, minp, shortp, longp;
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, 1]).day(i);
	            minp = this.weekdaysMin(mom, '');
	            shortp = this.weekdaysShort(mom, '');
	            longp = this.weekdays(mom, '');
	            minPieces.push(minp);
	            shortPieces.push(shortp);
	            longPieces.push(longp);
	            mixedPieces.push(minp);
	            mixedPieces.push(shortp);
	            mixedPieces.push(longp);
	        }
	        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	        // will match the longer piece.
	        minPieces.sort(cmpLenRev);
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 7; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }

	        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._weekdaysShortRegex = this._weekdaysRegex;
	        this._weekdaysMinRegex = this._weekdaysRegex;

	        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
	    }

	    // FORMATTING

	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	    // ALIASES

	    addUnitAlias('dayOfYear', 'DDD');

	    // PARSING

	    addRegexToken('DDD',  match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });

	    // HELPERS

	    // MOMENTS

	    function getSetDayOfYear (input) {
	        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	    }

	    // FORMATTING

	    function hFormat() {
	        return this.hours() % 12 || 12;
	    }

	    function kFormat() {
	        return this.hours() || 24;
	    }

	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, hFormat);
	    addFormatToken('k', ['kk', 2], 0, kFormat);

	    addFormatToken('hmm', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	    });

	    addFormatToken('hmmss', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2);
	    });

	    addFormatToken('Hmm', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2);
	    });

	    addFormatToken('Hmmss', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2);
	    });

	    function meridiem (token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	        });
	    }

	    meridiem('a', true);
	    meridiem('A', false);

	    // ALIASES

	    addUnitAlias('hour', 'h');

	    // PARSING

	    function matchMeridiem (isStrict, locale) {
	        return locale._meridiemParse;
	    }

	    addRegexToken('a',  matchMeridiem);
	    addRegexToken('A',  matchMeridiem);
	    addRegexToken('H',  match1to2);
	    addRegexToken('h',  match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);

	    addRegexToken('hmm', match3to4);
	    addRegexToken('hmmss', match5to6);
	    addRegexToken('Hmm', match3to4);
	    addRegexToken('Hmmss', match5to6);

	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmmss', function (input, array, config) {
	        var pos1 = input.length - 4;
	        var pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('Hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	    });
	    addParseToken('Hmmss', function (input, array, config) {
	        var pos1 = input.length - 4;
	        var pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	    });

	    // LOCALES

	    function localeIsPM (input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return ((input + '').toLowerCase().charAt(0) === 'p');
	    }

	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	    function localeMeridiem (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }


	    // MOMENTS

	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour he wants. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    var getSetHour = makeGetSet('Hours', true);

	    // FORMATTING

	    addFormatToken('m', ['mm', 2], 0, 'minute');

	    // ALIASES

	    addUnitAlias('minute', 'm');

	    // PARSING

	    addRegexToken('m',  match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);

	    // MOMENTS

	    var getSetMinute = makeGetSet('Minutes', false);

	    // FORMATTING

	    addFormatToken('s', ['ss', 2], 0, 'second');

	    // ALIASES

	    addUnitAlias('second', 's');

	    // PARSING

	    addRegexToken('s',  match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);

	    // MOMENTS

	    var getSetSecond = makeGetSet('Seconds', false);

	    // FORMATTING

	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });

	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });

	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });


	    // ALIASES

	    addUnitAlias('millisecond', 'ms');

	    // PARSING

	    addRegexToken('S',    match1to3, match1);
	    addRegexToken('SS',   match1to3, match2);
	    addRegexToken('SSS',  match1to3, match3);

	    var token;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }

	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }

	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }
	    // MOMENTS

	    var getSetMillisecond = makeGetSet('Milliseconds', false);

	    // FORMATTING

	    addFormatToken('z',  0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');

	    // MOMENTS

	    function getZoneAbbr () {
	        return this._isUTC ? 'UTC' : '';
	    }

	    function getZoneName () {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }

	    var momentPrototype__proto = Moment.prototype;

	    momentPrototype__proto.add               = add_subtract__add;
	    momentPrototype__proto.calendar          = moment_calendar__calendar;
	    momentPrototype__proto.clone             = clone;
	    momentPrototype__proto.diff              = diff;
	    momentPrototype__proto.endOf             = endOf;
	    momentPrototype__proto.format            = format;
	    momentPrototype__proto.from              = from;
	    momentPrototype__proto.fromNow           = fromNow;
	    momentPrototype__proto.to                = to;
	    momentPrototype__proto.toNow             = toNow;
	    momentPrototype__proto.get               = getSet;
	    momentPrototype__proto.invalidAt         = invalidAt;
	    momentPrototype__proto.isAfter           = isAfter;
	    momentPrototype__proto.isBefore          = isBefore;
	    momentPrototype__proto.isBetween         = isBetween;
	    momentPrototype__proto.isSame            = isSame;
	    momentPrototype__proto.isSameOrAfter     = isSameOrAfter;
	    momentPrototype__proto.isSameOrBefore    = isSameOrBefore;
	    momentPrototype__proto.isValid           = moment_valid__isValid;
	    momentPrototype__proto.lang              = lang;
	    momentPrototype__proto.locale            = locale;
	    momentPrototype__proto.localeData        = localeData;
	    momentPrototype__proto.max               = prototypeMax;
	    momentPrototype__proto.min               = prototypeMin;
	    momentPrototype__proto.parsingFlags      = parsingFlags;
	    momentPrototype__proto.set               = getSet;
	    momentPrototype__proto.startOf           = startOf;
	    momentPrototype__proto.subtract          = add_subtract__subtract;
	    momentPrototype__proto.toArray           = toArray;
	    momentPrototype__proto.toObject          = toObject;
	    momentPrototype__proto.toDate            = toDate;
	    momentPrototype__proto.toISOString       = moment_format__toISOString;
	    momentPrototype__proto.toJSON            = toJSON;
	    momentPrototype__proto.toString          = toString;
	    momentPrototype__proto.unix              = unix;
	    momentPrototype__proto.valueOf           = to_type__valueOf;
	    momentPrototype__proto.creationData      = creationData;

	    // Year
	    momentPrototype__proto.year       = getSetYear;
	    momentPrototype__proto.isLeapYear = getIsLeapYear;

	    // Week Year
	    momentPrototype__proto.weekYear    = getSetWeekYear;
	    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

	    // Quarter
	    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

	    // Month
	    momentPrototype__proto.month       = getSetMonth;
	    momentPrototype__proto.daysInMonth = getDaysInMonth;

	    // Week
	    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
	    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
	    momentPrototype__proto.weeksInYear    = getWeeksInYear;
	    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

	    // Day
	    momentPrototype__proto.date       = getSetDayOfMonth;
	    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
	    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
	    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
	    momentPrototype__proto.dayOfYear  = getSetDayOfYear;

	    // Hour
	    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

	    // Minute
	    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

	    // Second
	    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

	    // Millisecond
	    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

	    // Offset
	    momentPrototype__proto.utcOffset            = getSetOffset;
	    momentPrototype__proto.utc                  = setOffsetToUTC;
	    momentPrototype__proto.local                = setOffsetToLocal;
	    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
	    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    momentPrototype__proto.isDST                = isDaylightSavingTime;
	    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;
	    momentPrototype__proto.isLocal              = isLocal;
	    momentPrototype__proto.isUtcOffset          = isUtcOffset;
	    momentPrototype__proto.isUtc                = isUtc;
	    momentPrototype__proto.isUTC                = isUtc;

	    // Timezone
	    momentPrototype__proto.zoneAbbr = getZoneAbbr;
	    momentPrototype__proto.zoneName = getZoneName;

	    // Deprecations
	    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);

	    var momentPrototype = momentPrototype__proto;

	    function moment__createUnix (input) {
	        return local__createLocal(input * 1000);
	    }

	    function moment__createInZone () {
	        return local__createLocal.apply(null, arguments).parseZone();
	    }

	    var defaultCalendar = {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    };

	    function locale_calendar__calendar (key, mom, now) {
	        var output = this._calendar[key];
	        return isFunction(output) ? output.call(mom, now) : output;
	    }

	    var defaultLongDateFormat = {
	        LTS  : 'h:mm:ss A',
	        LT   : 'h:mm A',
	        L    : 'MM/DD/YYYY',
	        LL   : 'MMMM D, YYYY',
	        LLL  : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    };

	    function longDateFormat (key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];

	        if (format || !formatUpper) {
	            return format;
	        }

	        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	            return val.slice(1);
	        });

	        return this._longDateFormat[key];
	    }

	    var defaultInvalidDate = 'Invalid date';

	    function invalidDate () {
	        return this._invalidDate;
	    }

	    var defaultOrdinal = '%d';
	    var defaultOrdinalParse = /\d{1,2}/;

	    function ordinal (number) {
	        return this._ordinal.replace('%d', number);
	    }

	    function preParsePostFormat (string) {
	        return string;
	    }

	    var defaultRelativeTime = {
	        future : 'in %s',
	        past   : '%s ago',
	        s  : 'a few seconds',
	        m  : 'a minute',
	        mm : '%d minutes',
	        h  : 'an hour',
	        hh : '%d hours',
	        d  : 'a day',
	        dd : '%d days',
	        M  : 'a month',
	        MM : '%d months',
	        y  : 'a year',
	        yy : '%d years'
	    };

	    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return (isFunction(output)) ?
	            output(number, withoutSuffix, string, isFuture) :
	            output.replace(/%d/i, number);
	    }

	    function pastFuture (diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	    }

	    var prototype__proto = Locale.prototype;

	    prototype__proto._calendar       = defaultCalendar;
	    prototype__proto.calendar        = locale_calendar__calendar;
	    prototype__proto._longDateFormat = defaultLongDateFormat;
	    prototype__proto.longDateFormat  = longDateFormat;
	    prototype__proto._invalidDate    = defaultInvalidDate;
	    prototype__proto.invalidDate     = invalidDate;
	    prototype__proto._ordinal        = defaultOrdinal;
	    prototype__proto.ordinal         = ordinal;
	    prototype__proto._ordinalParse   = defaultOrdinalParse;
	    prototype__proto.preparse        = preParsePostFormat;
	    prototype__proto.postformat      = preParsePostFormat;
	    prototype__proto._relativeTime   = defaultRelativeTime;
	    prototype__proto.relativeTime    = relative__relativeTime;
	    prototype__proto.pastFuture      = pastFuture;
	    prototype__proto.set             = locale_set__set;

	    // Month
	    prototype__proto.months            =        localeMonths;
	    prototype__proto._months           = defaultLocaleMonths;
	    prototype__proto.monthsShort       =        localeMonthsShort;
	    prototype__proto._monthsShort      = defaultLocaleMonthsShort;
	    prototype__proto.monthsParse       =        localeMonthsParse;
	    prototype__proto._monthsRegex      = defaultMonthsRegex;
	    prototype__proto.monthsRegex       = monthsRegex;
	    prototype__proto._monthsShortRegex = defaultMonthsShortRegex;
	    prototype__proto.monthsShortRegex  = monthsShortRegex;

	    // Week
	    prototype__proto.week = localeWeek;
	    prototype__proto._week = defaultLocaleWeek;
	    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
	    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

	    // Day of Week
	    prototype__proto.weekdays       =        localeWeekdays;
	    prototype__proto._weekdays      = defaultLocaleWeekdays;
	    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
	    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;
	    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
	    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
	    prototype__proto.weekdaysParse  =        localeWeekdaysParse;

	    prototype__proto._weekdaysRegex      = defaultWeekdaysRegex;
	    prototype__proto.weekdaysRegex       =        weekdaysRegex;
	    prototype__proto._weekdaysShortRegex = defaultWeekdaysShortRegex;
	    prototype__proto.weekdaysShortRegex  =        weekdaysShortRegex;
	    prototype__proto._weekdaysMinRegex   = defaultWeekdaysMinRegex;
	    prototype__proto.weekdaysMinRegex    =        weekdaysMinRegex;

	    // Hours
	    prototype__proto.isPM = localeIsPM;
	    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
	    prototype__proto.meridiem = localeMeridiem;

	    function lists__get (format, index, field, setter) {
	        var locale = locale_locales__getLocale();
	        var utc = create_utc__createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }

	    function listMonthsImpl (format, index, field) {
	        if (typeof format === 'number') {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';

	        if (index != null) {
	            return lists__get(format, index, field, 'month');
	        }

	        var i;
	        var out = [];
	        for (i = 0; i < 12; i++) {
	            out[i] = lists__get(format, i, field, 'month');
	        }
	        return out;
	    }

	    // ()
	    // (5)
	    // (fmt, 5)
	    // (fmt)
	    // (true)
	    // (true, 5)
	    // (true, fmt, 5)
	    // (true, fmt)
	    function listWeekdaysImpl (localeSorted, format, index, field) {
	        if (typeof localeSorted === 'boolean') {
	            if (typeof format === 'number') {
	                index = format;
	                format = undefined;
	            }

	            format = format || '';
	        } else {
	            format = localeSorted;
	            index = format;
	            localeSorted = false;

	            if (typeof format === 'number') {
	                index = format;
	                format = undefined;
	            }

	            format = format || '';
	        }

	        var locale = locale_locales__getLocale(),
	            shift = localeSorted ? locale._week.dow : 0;

	        if (index != null) {
	            return lists__get(format, (index + shift) % 7, field, 'day');
	        }

	        var i;
	        var out = [];
	        for (i = 0; i < 7; i++) {
	            out[i] = lists__get(format, (i + shift) % 7, field, 'day');
	        }
	        return out;
	    }

	    function lists__listMonths (format, index) {
	        return listMonthsImpl(format, index, 'months');
	    }

	    function lists__listMonthsShort (format, index) {
	        return listMonthsImpl(format, index, 'monthsShort');
	    }

	    function lists__listWeekdays (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	    }

	    function lists__listWeekdaysShort (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	    }

	    function lists__listWeekdaysMin (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	    }

	    locale_locales__getSetGlobalLocale('en', {
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (toInt(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    // Side effect imports
	    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
	    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

	    var mathAbs = Math.abs;

	    function duration_abs__abs () {
	        var data           = this._data;

	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days         = mathAbs(this._days);
	        this._months       = mathAbs(this._months);

	        data.milliseconds  = mathAbs(data.milliseconds);
	        data.seconds       = mathAbs(data.seconds);
	        data.minutes       = mathAbs(data.minutes);
	        data.hours         = mathAbs(data.hours);
	        data.months        = mathAbs(data.months);
	        data.years         = mathAbs(data.years);

	        return this;
	    }

	    function duration_add_subtract__addSubtract (duration, input, value, direction) {
	        var other = create__createDuration(input, value);

	        duration._milliseconds += direction * other._milliseconds;
	        duration._days         += direction * other._days;
	        duration._months       += direction * other._months;

	        return duration._bubble();
	    }

	    // supports only 2.0-style add(1, 's') or add(duration)
	    function duration_add_subtract__add (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, 1);
	    }

	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function duration_add_subtract__subtract (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, -1);
	    }

	    function absCeil (number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }

	    function bubble () {
	        var milliseconds = this._milliseconds;
	        var days         = this._days;
	        var months       = this._months;
	        var data         = this._data;
	        var seconds, minutes, hours, years, monthsFromDays;

	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0))) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }

	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;

	        seconds           = absFloor(milliseconds / 1000);
	        data.seconds      = seconds % 60;

	        minutes           = absFloor(seconds / 60);
	        data.minutes      = minutes % 60;

	        hours             = absFloor(minutes / 60);
	        data.hours        = hours % 24;

	        days += absFloor(hours / 24);

	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        data.days   = days;
	        data.months = months;
	        data.years  = years;

	        return this;
	    }

	    function daysToMonths (days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return days * 4800 / 146097;
	    }

	    function monthsToDays (months) {
	        // the reverse of daysToMonths
	        return months * 146097 / 4800;
	    }

	    function as (units) {
	        var days;
	        var months;
	        var milliseconds = this._milliseconds;

	        units = normalizeUnits(units);

	        if (units === 'month' || units === 'year') {
	            days   = this._days   + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            return units === 'month' ? months : months / 12;
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week'   : return days / 7     + milliseconds / 6048e5;
	                case 'day'    : return days         + milliseconds / 864e5;
	                case 'hour'   : return days * 24    + milliseconds / 36e5;
	                case 'minute' : return days * 1440  + milliseconds / 6e4;
	                case 'second' : return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	                default: throw new Error('Unknown unit ' + units);
	            }
	        }
	    }

	    // TODO: Use this.as('ms')?
	    function duration_as__valueOf () {
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }

	    function makeAs (alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }

	    var asMilliseconds = makeAs('ms');
	    var asSeconds      = makeAs('s');
	    var asMinutes      = makeAs('m');
	    var asHours        = makeAs('h');
	    var asDays         = makeAs('d');
	    var asWeeks        = makeAs('w');
	    var asMonths       = makeAs('M');
	    var asYears        = makeAs('y');

	    function duration_get__get (units) {
	        units = normalizeUnits(units);
	        return this[units + 's']();
	    }

	    function makeGetter(name) {
	        return function () {
	            return this._data[name];
	        };
	    }

	    var milliseconds = makeGetter('milliseconds');
	    var seconds      = makeGetter('seconds');
	    var minutes      = makeGetter('minutes');
	    var hours        = makeGetter('hours');
	    var days         = makeGetter('days');
	    var months       = makeGetter('months');
	    var years        = makeGetter('years');

	    function weeks () {
	        return absFloor(this.days() / 7);
	    }

	    var round = Math.round;
	    var thresholds = {
	        s: 45,  // seconds to minute
	        m: 45,  // minutes to hour
	        h: 22,  // hours to day
	        d: 26,  // days to month
	        M: 11   // months to year
	    };

	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
	        var duration = create__createDuration(posNegDuration).abs();
	        var seconds  = round(duration.as('s'));
	        var minutes  = round(duration.as('m'));
	        var hours    = round(duration.as('h'));
	        var days     = round(duration.as('d'));
	        var months   = round(duration.as('M'));
	        var years    = round(duration.as('y'));

	        var a = seconds < thresholds.s && ['s', seconds]  ||
	                minutes <= 1           && ['m']           ||
	                minutes < thresholds.m && ['mm', minutes] ||
	                hours   <= 1           && ['h']           ||
	                hours   < thresholds.h && ['hh', hours]   ||
	                days    <= 1           && ['d']           ||
	                days    < thresholds.d && ['dd', days]    ||
	                months  <= 1           && ['M']           ||
	                months  < thresholds.M && ['MM', months]  ||
	                years   <= 1           && ['y']           || ['yy', years];

	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }

	    // This function allows you to set a threshold for relative time strings
	    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        return true;
	    }

	    function humanize (withSuffix) {
	        var locale = this.localeData();
	        var output = duration_humanize__relativeTime(this, !withSuffix, locale);

	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }

	        return locale.postformat(output);
	    }

	    var iso_string__abs = Math.abs;

	    function iso_string__toISOString() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        var seconds = iso_string__abs(this._milliseconds) / 1000;
	        var days         = iso_string__abs(this._days);
	        var months       = iso_string__abs(this._months);
	        var minutes, hours, years;

	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes           = absFloor(seconds / 60);
	        hours             = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;

	        // 12 months -> 1 year
	        years  = absFloor(months / 12);
	        months %= 12;


	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        var Y = years;
	        var M = months;
	        var D = days;
	        var h = hours;
	        var m = minutes;
	        var s = seconds;
	        var total = this.asSeconds();

	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }

	        return (total < 0 ? '-' : '') +
	            'P' +
	            (Y ? Y + 'Y' : '') +
	            (M ? M + 'M' : '') +
	            (D ? D + 'D' : '') +
	            ((h || m || s) ? 'T' : '') +
	            (h ? h + 'H' : '') +
	            (m ? m + 'M' : '') +
	            (s ? s + 'S' : '');
	    }

	    var duration_prototype__proto = Duration.prototype;

	    duration_prototype__proto.abs            = duration_abs__abs;
	    duration_prototype__proto.add            = duration_add_subtract__add;
	    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
	    duration_prototype__proto.as             = as;
	    duration_prototype__proto.asMilliseconds = asMilliseconds;
	    duration_prototype__proto.asSeconds      = asSeconds;
	    duration_prototype__proto.asMinutes      = asMinutes;
	    duration_prototype__proto.asHours        = asHours;
	    duration_prototype__proto.asDays         = asDays;
	    duration_prototype__proto.asWeeks        = asWeeks;
	    duration_prototype__proto.asMonths       = asMonths;
	    duration_prototype__proto.asYears        = asYears;
	    duration_prototype__proto.valueOf        = duration_as__valueOf;
	    duration_prototype__proto._bubble        = bubble;
	    duration_prototype__proto.get            = duration_get__get;
	    duration_prototype__proto.milliseconds   = milliseconds;
	    duration_prototype__proto.seconds        = seconds;
	    duration_prototype__proto.minutes        = minutes;
	    duration_prototype__proto.hours          = hours;
	    duration_prototype__proto.days           = days;
	    duration_prototype__proto.weeks          = weeks;
	    duration_prototype__proto.months         = months;
	    duration_prototype__proto.years          = years;
	    duration_prototype__proto.humanize       = humanize;
	    duration_prototype__proto.toISOString    = iso_string__toISOString;
	    duration_prototype__proto.toString       = iso_string__toISOString;
	    duration_prototype__proto.toJSON         = iso_string__toISOString;
	    duration_prototype__proto.locale         = locale;
	    duration_prototype__proto.localeData     = localeData;

	    // Deprecations
	    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
	    duration_prototype__proto.lang = lang;

	    // Side effect imports

	    // FORMATTING

	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');

	    // PARSING

	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input, 10) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });

	    // Side effect imports


	    utils_hooks__hooks.version = '2.13.0';

	    setHookCallback(local__createLocal);

	    utils_hooks__hooks.fn                    = momentPrototype;
	    utils_hooks__hooks.min                   = min;
	    utils_hooks__hooks.max                   = max;
	    utils_hooks__hooks.now                   = now;
	    utils_hooks__hooks.utc                   = create_utc__createUTC;
	    utils_hooks__hooks.unix                  = moment__createUnix;
	    utils_hooks__hooks.months                = lists__listMonths;
	    utils_hooks__hooks.isDate                = isDate;
	    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
	    utils_hooks__hooks.invalid               = valid__createInvalid;
	    utils_hooks__hooks.duration              = create__createDuration;
	    utils_hooks__hooks.isMoment              = isMoment;
	    utils_hooks__hooks.weekdays              = lists__listWeekdays;
	    utils_hooks__hooks.parseZone             = moment__createInZone;
	    utils_hooks__hooks.localeData            = locale_locales__getLocale;
	    utils_hooks__hooks.isDuration            = isDuration;
	    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
	    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
	    utils_hooks__hooks.defineLocale          = defineLocale;
	    utils_hooks__hooks.updateLocale          = updateLocale;
	    utils_hooks__hooks.locales               = locale_locales__listLocales;
	    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
	    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
	    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;
	    utils_hooks__hooks.prototype             = momentPrototype;

	    var _moment = utils_hooks__hooks;

	    return _moment;

	}));
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(347)(module)))

/***/ },
/* 347 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./af": 349,
		"./af.js": 349,
		"./ar": 350,
		"./ar-ma": 351,
		"./ar-ma.js": 351,
		"./ar-sa": 352,
		"./ar-sa.js": 352,
		"./ar-tn": 353,
		"./ar-tn.js": 353,
		"./ar.js": 350,
		"./az": 354,
		"./az.js": 354,
		"./be": 355,
		"./be.js": 355,
		"./bg": 356,
		"./bg.js": 356,
		"./bn": 357,
		"./bn.js": 357,
		"./bo": 358,
		"./bo.js": 358,
		"./br": 359,
		"./br.js": 359,
		"./bs": 360,
		"./bs.js": 360,
		"./ca": 361,
		"./ca.js": 361,
		"./cs": 362,
		"./cs.js": 362,
		"./cv": 363,
		"./cv.js": 363,
		"./cy": 364,
		"./cy.js": 364,
		"./da": 365,
		"./da.js": 365,
		"./de": 366,
		"./de-at": 367,
		"./de-at.js": 367,
		"./de.js": 366,
		"./dv": 368,
		"./dv.js": 368,
		"./el": 369,
		"./el.js": 369,
		"./en-au": 370,
		"./en-au.js": 370,
		"./en-ca": 371,
		"./en-ca.js": 371,
		"./en-gb": 372,
		"./en-gb.js": 372,
		"./en-ie": 373,
		"./en-ie.js": 373,
		"./en-nz": 374,
		"./en-nz.js": 374,
		"./eo": 375,
		"./eo.js": 375,
		"./es": 376,
		"./es.js": 376,
		"./et": 377,
		"./et.js": 377,
		"./eu": 378,
		"./eu.js": 378,
		"./fa": 379,
		"./fa.js": 379,
		"./fi": 380,
		"./fi.js": 380,
		"./fo": 381,
		"./fo.js": 381,
		"./fr": 382,
		"./fr-ca": 383,
		"./fr-ca.js": 383,
		"./fr-ch": 384,
		"./fr-ch.js": 384,
		"./fr.js": 382,
		"./fy": 385,
		"./fy.js": 385,
		"./gd": 386,
		"./gd.js": 386,
		"./gl": 387,
		"./gl.js": 387,
		"./he": 388,
		"./he.js": 388,
		"./hi": 389,
		"./hi.js": 389,
		"./hr": 390,
		"./hr.js": 390,
		"./hu": 391,
		"./hu.js": 391,
		"./hy-am": 392,
		"./hy-am.js": 392,
		"./id": 393,
		"./id.js": 393,
		"./is": 394,
		"./is.js": 394,
		"./it": 395,
		"./it.js": 395,
		"./ja": 396,
		"./ja.js": 396,
		"./jv": 397,
		"./jv.js": 397,
		"./ka": 398,
		"./ka.js": 398,
		"./kk": 399,
		"./kk.js": 399,
		"./km": 400,
		"./km.js": 400,
		"./ko": 401,
		"./ko.js": 401,
		"./ky": 402,
		"./ky.js": 402,
		"./lb": 403,
		"./lb.js": 403,
		"./lo": 404,
		"./lo.js": 404,
		"./lt": 405,
		"./lt.js": 405,
		"./lv": 406,
		"./lv.js": 406,
		"./me": 407,
		"./me.js": 407,
		"./mk": 408,
		"./mk.js": 408,
		"./ml": 409,
		"./ml.js": 409,
		"./mr": 410,
		"./mr.js": 410,
		"./ms": 411,
		"./ms-my": 412,
		"./ms-my.js": 412,
		"./ms.js": 411,
		"./my": 413,
		"./my.js": 413,
		"./nb": 414,
		"./nb.js": 414,
		"./ne": 415,
		"./ne.js": 415,
		"./nl": 416,
		"./nl.js": 416,
		"./nn": 417,
		"./nn.js": 417,
		"./pa-in": 418,
		"./pa-in.js": 418,
		"./pl": 419,
		"./pl.js": 419,
		"./pt": 420,
		"./pt-br": 421,
		"./pt-br.js": 421,
		"./pt.js": 420,
		"./ro": 422,
		"./ro.js": 422,
		"./ru": 423,
		"./ru.js": 423,
		"./se": 424,
		"./se.js": 424,
		"./si": 425,
		"./si.js": 425,
		"./sk": 426,
		"./sk.js": 426,
		"./sl": 427,
		"./sl.js": 427,
		"./sq": 428,
		"./sq.js": 428,
		"./sr": 429,
		"./sr-cyrl": 430,
		"./sr-cyrl.js": 430,
		"./sr.js": 429,
		"./ss": 431,
		"./ss.js": 431,
		"./sv": 432,
		"./sv.js": 432,
		"./sw": 433,
		"./sw.js": 433,
		"./ta": 434,
		"./ta.js": 434,
		"./te": 435,
		"./te.js": 435,
		"./th": 436,
		"./th.js": 436,
		"./tl-ph": 437,
		"./tl-ph.js": 437,
		"./tlh": 438,
		"./tlh.js": 438,
		"./tr": 439,
		"./tr.js": 439,
		"./tzl": 440,
		"./tzl.js": 440,
		"./tzm": 441,
		"./tzm-latn": 442,
		"./tzm-latn.js": 442,
		"./tzm.js": 441,
		"./uk": 443,
		"./uk.js": 443,
		"./uz": 444,
		"./uz.js": 444,
		"./vi": 445,
		"./vi.js": 445,
		"./x-pseudo": 446,
		"./x-pseudo.js": 446,
		"./zh-cn": 447,
		"./zh-cn.js": 447,
		"./zh-tw": 448,
		"./zh-tw.js": 448
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 348;


/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : afrikaans (af)
	//! author : Werner Mollentze : https://github.com/wernerm

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var af = moment.defineLocale('af', {
	        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	        meridiemParse: /vm|nm/i,
	        isPM : function (input) {
	            return /^nm$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'vm' : 'VM';
	            } else {
	                return isLower ? 'nm' : 'NM';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Vandag om] LT',
	            nextDay : '[Môre om] LT',
	            nextWeek : 'dddd [om] LT',
	            lastDay : '[Gister om] LT',
	            lastWeek : '[Laas] dddd [om] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'oor %s',
	            past : '%s gelede',
	            s : '\'n paar sekondes',
	            m : '\'n minuut',
	            mm : '%d minute',
	            h : '\'n uur',
	            hh : '%d ure',
	            d : '\'n dag',
	            dd : '%d dae',
	            M : '\'n maand',
	            MM : '%d maande',
	            y : '\'n jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	        },
	        week : {
	            dow : 1, // Maandag is die eerste dag van die week.
	            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	        }
	    });

	    return af;

	}));

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! Locale: Arabic (ar)
	//! Author: Abdel Said: https://github.com/abdelsaid
	//! Changes in months, weekdays: Ahmed Elkhatib
	//! Native plural forms: forabi https://github.com/forabi

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    }, pluralForm = function (n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    }, plurals = {
	        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    }, pluralize = function (u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    }, months = [
	        'كانون الثاني يناير',
	        'شباط فبراير',
	        'آذار مارس',
	        'نيسان أبريل',
	        'أيار مايو',
	        'حزيران يونيو',
	        'تموز يوليو',
	        'آب أغسطس',
	        'أيلول سبتمبر',
	        'تشرين الأول أكتوبر',
	        'تشرين الثاني نوفمبر',
	        'كانون الأول ديسمبر'
	    ];

	    var ar = moment.defineLocale('ar', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/\u200FM/\u200FYYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'بعد %s',
	            past : 'منذ %s',
	            s : pluralize('s'),
	            m : pluralize('m'),
	            mm : pluralize('m'),
	            h : pluralize('h'),
	            hh : pluralize('h'),
	            d : pluralize('d'),
	            dd : pluralize('d'),
	            M : pluralize('M'),
	            MM : pluralize('M'),
	            y : pluralize('y'),
	            yy : pluralize('y')
	        },
	        preparse: function (string) {
	            return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar;

	}));

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Moroccan Arabic (ar-ma)
	//! author : ElFadili Yassine : https://github.com/ElFadiliY
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ar_ma = moment.defineLocale('ar-ma', {
	        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_ma;

	}));

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic Saudi Arabia (ar-sa)
	//! author : Suhail Alkowaileet : https://github.com/xsoh

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    };

	    var ar_sa = moment.defineLocale('ar-sa', {
	        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_sa;

	}));

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale  : Tunisian Arabic (ar-tn)

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ar_tn = moment.defineLocale('ar-tn', {
	        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ar_tn;

	}));

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : azerbaijani (az)
	//! author : topchiyev : https://github.com/topchiyev

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        1: '-inci',
	        5: '-inci',
	        8: '-inci',
	        70: '-inci',
	        80: '-inci',
	        2: '-nci',
	        7: '-nci',
	        20: '-nci',
	        50: '-nci',
	        3: '-üncü',
	        4: '-üncü',
	        100: '-üncü',
	        6: '-ncı',
	        9: '-uncu',
	        10: '-uncu',
	        30: '-uncu',
	        60: '-ıncı',
	        90: '-ıncı'
	    };

	    var az = moment.defineLocale('az', {
	        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[sabah saat] LT',
	            nextWeek : '[gələn həftə] dddd [saat] LT',
	            lastDay : '[dünən] LT',
	            lastWeek : '[keçən həftə] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s əvvəl',
	            s : 'birneçə saniyyə',
	            m : 'bir dəqiqə',
	            mm : '%d dəqiqə',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir il',
	            yy : '%d il'
	        },
	        meridiemParse: /gecə|səhər|gündüz|axşam/,
	        isPM : function (input) {
	            return /^(gündüz|axşam)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'gecə';
	            } else if (hour < 12) {
	                return 'səhər';
	            } else if (hour < 17) {
	                return 'gündüz';
	            } else {
	                return 'axşam';
	            }
	        },
	        ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '-ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return az;

	}));

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : belarusian (be)
	//! author : Dmitry Demidov : https://github.com/demidov91
	//! author: Praleska: http://praleska.pro/
	//! Author : Menelion Elensúle : https://github.com/Oire

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	            'dd': 'дзень_дні_дзён',
	            'MM': 'месяц_месяцы_месяцаў',
	            'yy': 'год_гады_гадоў'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвіліна' : 'хвіліну';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'гадзіна' : 'гадзіну';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }

	    var be = moment.defineLocale('be', {
	        months : {
	            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
	            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
	        },
	        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	        weekdays : {
	            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
	            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	            isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
	        },
	        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сёння ў] LT',
	            nextDay: '[Заўтра ў] LT',
	            lastDay: '[Учора ў] LT',
	            nextWeek: function () {
	                return '[У] dddd [ў] LT';
	            },
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return '[У мінулую] dddd [ў] LT';
	                case 1:
	                case 2:
	                case 4:
	                    return '[У мінулы] dddd [ў] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'праз %s',
	            past : '%s таму',
	            s : 'некалькі секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithPlural,
	            hh : relativeTimeWithPlural,
	            d : 'дзень',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночы|раніцы|дня|вечара/,
	        isPM : function (input) {
	            return /^(дня|вечара)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночы';
	            } else if (hour < 12) {
	                return 'раніцы';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечара';
	            }
	        },
	        ordinalParse: /\d{1,2}-(і|ы|га)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	            case 'D':
	                return number + '-га';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return be;

	}));

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bulgarian (bg)
	//! author : Krasen Borisov : https://github.com/kraz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var bg = moment.defineLocale('bg', {
	        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Днес в] LT',
	            nextDay : '[Утре в] LT',
	            nextWeek : 'dddd [в] LT',
	            lastDay : '[Вчера в] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[В изминалата] dddd [в] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'след %s',
	            past : 'преди %s',
	            s : 'няколко секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дни',
	            M : 'месец',
	            MM : '%d месеца',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bg;

	}));

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bengali (bn)
	//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '১',
	        '2': '২',
	        '3': '৩',
	        '4': '৪',
	        '5': '৫',
	        '6': '৬',
	        '7': '৭',
	        '8': '৮',
	        '9': '৯',
	        '0': '০'
	    },
	    numberMap = {
	        '১': '1',
	        '২': '2',
	        '৩': '3',
	        '৪': '4',
	        '৫': '5',
	        '৬': '6',
	        '৭': '7',
	        '৮': '8',
	        '৯': '9',
	        '০': '0'
	    };

	    var bn = moment.defineLocale('bn', {
	        months : 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	        monthsShort : 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),
	        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রবার_শনিবার'.split('_'),
	        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্র_শনি'.split('_'),
	        weekdaysMin : 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm সময়',
	            LTS : 'A h:mm:ss সময়',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm সময়',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
	        },
	        calendar : {
	            sameDay : '[আজ] LT',
	            nextDay : '[আগামীকাল] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[গতকাল] LT',
	            lastWeek : '[গত] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s পরে',
	            past : '%s আগে',
	            s : 'কয়েক সেকেন্ড',
	            m : 'এক মিনিট',
	            mm : '%d মিনিট',
	            h : 'এক ঘন্টা',
	            hh : '%d ঘন্টা',
	            d : 'এক দিন',
	            dd : '%d দিন',
	            M : 'এক মাস',
	            MM : '%d মাস',
	            y : 'এক বছর',
	            yy : '%d বছর'
	        },
	        preparse: function (string) {
	            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'রাত' && hour >= 4) ||
	                    (meridiem === 'দুপুর' && hour < 5) ||
	                    meridiem === 'বিকাল') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'রাত';
	            } else if (hour < 10) {
	                return 'সকাল';
	            } else if (hour < 17) {
	                return 'দুপুর';
	            } else if (hour < 20) {
	                return 'বিকাল';
	            } else {
	                return 'রাত';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bn;

	}));

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tibetan (bo)
	//! author : Thupten N. Chakrishar : https://github.com/vajradog

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '༡',
	        '2': '༢',
	        '3': '༣',
	        '4': '༤',
	        '5': '༥',
	        '6': '༦',
	        '7': '༧',
	        '8': '༨',
	        '9': '༩',
	        '0': '༠'
	    },
	    numberMap = {
	        '༡': '1',
	        '༢': '2',
	        '༣': '3',
	        '༤': '4',
	        '༥': '5',
	        '༦': '6',
	        '༧': '7',
	        '༨': '8',
	        '༩': '9',
	        '༠': '0'
	    };

	    var bo = moment.defineLocale('bo', {
	        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[དི་རིང] LT',
	            nextDay : '[སང་ཉིན] LT',
	            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
	            lastDay : '[ཁ་སང] LT',
	            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ལ་',
	            past : '%s སྔན་ལ',
	            s : 'ལམ་སང',
	            m : 'སྐར་མ་གཅིག',
	            mm : '%d སྐར་མ',
	            h : 'ཆུ་ཚོད་གཅིག',
	            hh : '%d ཆུ་ཚོད',
	            d : 'ཉིན་གཅིག',
	            dd : '%d ཉིན་',
	            M : 'ཟླ་བ་གཅིག',
	            MM : '%d ཟླ་བ',
	            y : 'ལོ་གཅིག',
	            yy : '%d ལོ'
	        },
	        preparse: function (string) {
	            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
	                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
	                    meridiem === 'དགོང་དག') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'མཚན་མོ';
	            } else if (hour < 10) {
	                return 'ཞོགས་ཀས';
	            } else if (hour < 17) {
	                return 'ཉིན་གུང';
	            } else if (hour < 20) {
	                return 'དགོང་དག';
	            } else {
	                return 'མཚན་མོ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bo;

	}));

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : breton (br)
	//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'munutenn',
	            'MM': 'miz',
	            'dd': 'devezh'
	        };
	        return number + ' ' + mutation(format[key], number);
	    }
	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	        case 1:
	        case 3:
	        case 4:
	        case 5:
	        case 9:
	            return number + ' bloaz';
	        default:
	            return number + ' vloaz';
	        }
	    }
	    function lastNumber(number) {
	        if (number > 9) {
	            return lastNumber(number % 10);
	        }
	        return number;
	    }
	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }
	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }

	    var br = moment.defineLocale('br', {
	        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h[e]mm A',
	            LTS : 'h[e]mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D [a viz] MMMM YYYY',
	            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
	            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	        },
	        calendar : {
	            sameDay : '[Hiziv da] LT',
	            nextDay : '[Warc\'hoazh da] LT',
	            nextWeek : 'dddd [da] LT',
	            lastDay : '[Dec\'h da] LT',
	            lastWeek : 'dddd [paset da] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'a-benn %s',
	            past : '%s \'zo',
	            s : 'un nebeud segondennoù',
	            m : 'ur vunutenn',
	            mm : relativeTimeWithMutation,
	            h : 'un eur',
	            hh : '%d eur',
	            d : 'un devezh',
	            dd : relativeTimeWithMutation,
	            M : 'ur miz',
	            MM : relativeTimeWithMutation,
	            y : 'ur bloaz',
	            yy : specialMutationForYears
	        },
	        ordinalParse: /\d{1,2}(añ|vet)/,
	        ordinal : function (number) {
	            var output = (number === 1) ? 'añ' : 'vet';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return br;

	}));

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bosnian (bs)
	//! author : Nedim Cholich : https://github.com/frontyard
	//! based on (hr) translation by Bojan Marković

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    var bs = moment.defineLocale('bs', {
	        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bs;

	}));

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : catalan (ca)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ca = moment.defineLocale('ca', {
	        months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	        monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	        weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextDay : function () {
	                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastDay : function () {
	                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'fa %s',
	            s : 'uns segons',
	            m : 'un minut',
	            mm : '%d minuts',
	            h : 'una hora',
	            hh : '%d hores',
	            d : 'un dia',
	            dd : '%d dies',
	            M : 'un mes',
	            MM : '%d mesos',
	            y : 'un any',
	            yy : '%d anys'
	        },
	        ordinalParse: /\d{1,2}(r|n|t|è|a)/,
	        ordinal : function (number, period) {
	            var output = (number === 1) ? 'r' :
	                (number === 2) ? 'n' :
	                (number === 3) ? 'r' :
	                (number === 4) ? 't' : 'è';
	            if (period === 'w' || period === 'W') {
	                output = 'a';
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ca;

	}));

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : czech (cs)
	//! author : petrbela : https://github.com/petrbela

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
	        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minuty' : 'minut');
	            } else {
	                return result + 'minutami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodin');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dny' : 'dní');
	            } else {
	                return result + 'dny';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'měsíce' : 'měsíců');
	            } else {
	                return result + 'měsíci';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'let');
	            } else {
	                return result + 'lety';
	            }
	            break;
	        }
	    }

	    var cs = moment.defineLocale('cs', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        shortMonthsParse : (function (monthsShort) {
	            var i, _shortMonthsParse = [];
	            for (i = 0; i < 12; i++) {
	                _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
	            }
	            return _shortMonthsParse;
	        }(monthsShort)),
	        longMonthsParse : (function (months) {
	            var i, _longMonthsParse = [];
	            for (i = 0; i < 12; i++) {
	                _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
	            }
	            return _longMonthsParse;
	        }(months)),
	        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
	        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes v] LT',
	            nextDay: '[zítra v] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v neděli v] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [v] LT';
	                case 3:
	                    return '[ve středu v] LT';
	                case 4:
	                    return '[ve čtvrtek v] LT';
	                case 5:
	                    return '[v pátek v] LT';
	                case 6:
	                    return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulou neděli v] LT';
	                case 1:
	                case 2:
	                    return '[minulé] dddd [v] LT';
	                case 3:
	                    return '[minulou středu v] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [v] LT';
	                case 6:
	                    return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'před %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse : /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cs;

	}));

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chuvash (cv)
	//! author : Anatoly Mironov : https://github.com/mirontoli

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var cv = moment.defineLocale('cv', {
	        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	        },
	        calendar : {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ӗнер] LT [сехетре]',
	            nextWeek: '[Ҫитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (output) {
	                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	                return output + affix;
	            },
	            past : '%s каялла',
	            s : 'пӗр-ик ҫеккунт',
	            m : 'пӗр минут',
	            mm : '%d минут',
	            h : 'пӗр сехет',
	            hh : '%d сехет',
	            d : 'пӗр кун',
	            dd : '%d кун',
	            M : 'пӗр уйӑх',
	            MM : '%d уйӑх',
	            y : 'пӗр ҫул',
	            yy : '%d ҫул'
	        },
	        ordinalParse: /\d{1,2}-мӗш/,
	        ordinal : '%d-мӗш',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return cv;

	}));

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Welsh (cy)
	//! author : Robert Allen

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var cy = moment.defineLocale('cy', {
	        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	        weekdaysParseExact : true,
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'mewn %s',
	            past: '%s yn ôl',
	            s: 'ychydig eiliadau',
	            m: 'munud',
	            mm: '%d munud',
	            h: 'awr',
	            hh: '%d awr',
	            d: 'diwrnod',
	            dd: '%d diwrnod',
	            M: 'mis',
	            MM: '%d mis',
	            y: 'blwyddyn',
	            yy: '%d flynedd'
	        },
	        ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function (number) {
	            var b = number,
	                output = '',
	                lookup = [
	                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	                ];
	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cy;

	}));

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : danish (da)
	//! author : Ulrik Nielsen : https://github.com/mrbase

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var da = moment.defineLocale('da', {
	        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd [d.] D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[I dag kl.] LT',
	            nextDay : '[I morgen kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[I går kl.] LT',
	            lastWeek : '[sidste] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'få sekunder',
	            m : 'et minut',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dage',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'et år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return da;

	}));

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : german (de)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Mikolaj Dadela : https://github.com/mik01aj

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de = moment.defineLocale('de', {
	        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de;

	}));

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : austrian german (de-at)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Martin Groller : https://github.com/MadMG
	//! author : Mikolaj Dadela : https://github.com/mik01aj

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de_at = moment.defineLocale('de-at', {
	        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de_at;

	}));

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : dhivehi (dv)
	//! author : Jawish Hameed : https://github.com/jawish

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = [
	        'ޖެނުއަރީ',
	        'ފެބްރުއަރީ',
	        'މާރިޗު',
	        'އޭޕްރީލު',
	        'މޭ',
	        'ޖޫން',
	        'ޖުލައި',
	        'އޯގަސްޓު',
	        'ސެޕްޓެމްބަރު',
	        'އޮކްޓޯބަރު',
	        'ނޮވެމްބަރު',
	        'ޑިސެމްބަރު'
	    ], weekdays = [
	        'އާދިއްތަ',
	        'ހޯމަ',
	        'އަންގާރަ',
	        'ބުދަ',
	        'ބުރާސްފަތި',
	        'ހުކުރު',
	        'ހޮނިހިރު'
	    ];

	    var dv = moment.defineLocale('dv', {
	        months : months,
	        monthsShort : months,
	        weekdays : weekdays,
	        weekdaysShort : weekdays,
	        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
	        longDateFormat : {

	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/M/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /މކ|މފ/,
	        isPM : function (input) {
	            return 'މފ' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'މކ';
	            } else {
	                return 'މފ';
	            }
	        },
	        calendar : {
	            sameDay : '[މިއަދު] LT',
	            nextDay : '[މާދަމާ] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[އިއްޔެ] LT',
	            lastWeek : '[ފާއިތުވި] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ތެރޭގައި %s',
	            past : 'ކުރިން %s',
	            s : 'ސިކުންތުކޮޅެއް',
	            m : 'މިނިޓެއް',
	            mm : 'މިނިޓު %d',
	            h : 'ގަޑިއިރެއް',
	            hh : 'ގަޑިއިރު %d',
	            d : 'ދުވަހެއް',
	            dd : 'ދުވަސް %d',
	            M : 'މަހެއް',
	            MM : 'މަސް %d',
	            y : 'އަހަރެއް',
	            yy : 'އަހަރު %d'
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week : {
	            dow : 7,  // Sunday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return dv;

	}));

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : modern greek (el)
	//! author : Aggelos Karalias : https://github.com/mehiel

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';

	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }


	    var el = moment.defineLocale('el', {
	        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	        months : function (momentToFormat, format) {
	            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        isPM : function (input) {
	            return ((input + '').toLowerCase()[0] === 'μ');
	        },
	        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendarEl : {
	            sameDay : '[Σήμερα {}] LT',
	            nextDay : '[Αύριο {}] LT',
	            nextWeek : 'dddd [{}] LT',
	            lastDay : '[Χθες {}] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 6:
	                        return '[το προηγούμενο] dddd [{}] LT';
	                    default:
	                        return '[την προηγούμενη] dddd [{}] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        calendar : function (key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();
	            if (isFunction(output)) {
	                output = output.apply(mom);
	            }
	            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
	        },
	        relativeTime : {
	            future : 'σε %s',
	            past : '%s πριν',
	            s : 'λίγα δευτερόλεπτα',
	            m : 'ένα λεπτό',
	            mm : '%d λεπτά',
	            h : 'μία ώρα',
	            hh : '%d ώρες',
	            d : 'μία μέρα',
	            dd : '%d μέρες',
	            M : 'ένας μήνας',
	            MM : '%d μήνες',
	            y : 'ένας χρόνος',
	            yy : '%d χρόνια'
	        },
	        ordinalParse: /\d{1,2}η/,
	        ordinal: '%dη',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4st is the first week of the year.
	        }
	    });

	    return el;

	}));

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : australian english (en-au)

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_au = moment.defineLocale('en-au', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_au;

	}));

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian english (en-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_ca = moment.defineLocale('en-ca', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'YYYY-MM-DD',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY h:mm A',
	            LLLL : 'dddd, MMMM D, YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    return en_ca;

	}));

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : great britain english (en-gb)
	//! author : Chris Gedrim : https://github.com/chrisgedrim

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_gb = moment.defineLocale('en-gb', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_gb;

	}));

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Irish english (en-ie)
	//! author : Chris Cartlidge : https://github.com/chriscartlidge

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_ie = moment.defineLocale('en-ie', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_ie;

	}));

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : New Zealand english (en-nz)

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_nz = moment.defineLocale('en-nz', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_nz;

	}));

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : esperanto (eo)
	//! author : Colin Dean : https://github.com/colindean
	//! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
	//!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var eo = moment.defineLocale('eo', {
	        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	        weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
	        weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D[-an de] MMMM, YYYY',
	            LLL : 'D[-an de] MMMM, YYYY HH:mm',
	            LLLL : 'dddd, [la] D[-an de] MMMM, YYYY HH:mm'
	        },
	        meridiemParse: /[ap]\.t\.m/i,
	        isPM: function (input) {
	            return input.charAt(0).toLowerCase() === 'p';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar : {
	            sameDay : '[Hodiaŭ je] LT',
	            nextDay : '[Morgaŭ je] LT',
	            nextWeek : 'dddd [je] LT',
	            lastDay : '[Hieraŭ je] LT',
	            lastWeek : '[pasinta] dddd [je] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'je %s',
	            past : 'antaŭ %s',
	            s : 'sekundoj',
	            m : 'minuto',
	            mm : '%d minutoj',
	            h : 'horo',
	            hh : '%d horoj',
	            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
	            dd : '%d tagoj',
	            M : 'monato',
	            MM : '%d monatoj',
	            y : 'jaro',
	            yy : '%d jaroj'
	        },
	        ordinalParse: /\d{1,2}a/,
	        ordinal : '%da',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eo;

	}));

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : spanish (es)
	//! author : Julio Napurí : https://github.com/julionc

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

	    var es = moment.defineLocale('es', {
	        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY H:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return es;

	}));

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : estonian (et)
	//! author : Henry Kehlmann : https://github.com/madhenry
	//! improvements : Illimar Tambek : https://github.com/ragulka

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'm' : ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd' : ['ühe päeva', 'üks päev'],
	            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }

	    var et = moment.defineLocale('et', {
	        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
	        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
	        longDateFormat : {
	            LT   : 'H:mm',
	            LTS : 'H:mm:ss',
	            L    : 'DD.MM.YYYY',
	            LL   : 'D. MMMM YYYY',
	            LLL  : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[Täna,] LT',
	            nextDay  : '[Homme,] LT',
	            nextWeek : '[Järgmine] dddd LT',
	            lastDay  : '[Eile,] LT',
	            lastWeek : '[Eelmine] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s pärast',
	            past   : '%s tagasi',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : '%d päeva',
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return et;

	}));

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : euskara (eu)
	//! author : Eneko Illarramendi : https://github.com/eillarra

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var eu = moment.defineLocale('eu', {
	        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
	        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY[ko] MMMM[ren] D[a]',
	            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	            l : 'YYYY-M-D',
	            ll : 'YYYY[ko] MMM D[a]',
	            lll : 'YYYY[ko] MMM D[a] HH:mm',
	            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
	        },
	        calendar : {
	            sameDay : '[gaur] LT[etan]',
	            nextDay : '[bihar] LT[etan]',
	            nextWeek : 'dddd LT[etan]',
	            lastDay : '[atzo] LT[etan]',
	            lastWeek : '[aurreko] dddd LT[etan]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s barru',
	            past : 'duela %s',
	            s : 'segundo batzuk',
	            m : 'minutu bat',
	            mm : '%d minutu',
	            h : 'ordu bat',
	            hh : '%d ordu',
	            d : 'egun bat',
	            dd : '%d egun',
	            M : 'hilabete bat',
	            MM : '%d hilabete',
	            y : 'urte bat',
	            yy : '%d urte'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eu;

	}));

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Persian (fa)
	//! author : Ebrahim Byagowi : https://github.com/ebraminio

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    }, numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };

	    var fa = moment.defineLocale('fa', {
	        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /قبل از ظهر|بعد از ظهر/,
	        isPM: function (input) {
	            return /بعد از ظهر/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'قبل از ظهر';
	            } else {
	                return 'بعد از ظهر';
	            }
	        },
	        calendar : {
	            sameDay : '[امروز ساعت] LT',
	            nextDay : '[فردا ساعت] LT',
	            nextWeek : 'dddd [ساعت] LT',
	            lastDay : '[دیروز ساعت] LT',
	            lastWeek : 'dddd [پیش] [ساعت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'در %s',
	            past : '%s پیش',
	            s : 'چندین ثانیه',
	            m : 'یک دقیقه',
	            mm : '%d دقیقه',
	            h : 'یک ساعت',
	            hh : '%d ساعت',
	            d : 'یک روز',
	            dd : '%d روز',
	            M : 'یک ماه',
	            MM : '%d ماه',
	            y : 'یک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        ordinalParse: /\d{1,2}م/,
	        ordinal : '%dم',
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return fa;

	}));

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : finnish (fi)
	//! author : Tarmo Aidantausta : https://github.com/bleadof

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = [
	            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	            numbersPast[7], numbersPast[8], numbersPast[9]
	        ];
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = '';
	        switch (key) {
	        case 's':
	            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	        case 'm':
	            return isFuture ? 'minuutin' : 'minuutti';
	        case 'mm':
	            result = isFuture ? 'minuutin' : 'minuuttia';
	            break;
	        case 'h':
	            return isFuture ? 'tunnin' : 'tunti';
	        case 'hh':
	            result = isFuture ? 'tunnin' : 'tuntia';
	            break;
	        case 'd':
	            return isFuture ? 'päivän' : 'päivä';
	        case 'dd':
	            result = isFuture ? 'päivän' : 'päivää';
	            break;
	        case 'M':
	            return isFuture ? 'kuukauden' : 'kuukausi';
	        case 'MM':
	            result = isFuture ? 'kuukauden' : 'kuukautta';
	            break;
	        case 'y':
	            return isFuture ? 'vuoden' : 'vuosi';
	        case 'yy':
	            result = isFuture ? 'vuoden' : 'vuotta';
	            break;
	        }
	        result = verbalNumber(number, isFuture) + ' ' + result;
	        return result;
	    }
	    function verbalNumber(number, isFuture) {
	        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	    }

	    var fi = moment.defineLocale('fi', {
	        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'Do MMMM[ta] YYYY',
	            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
	            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	            l : 'D.M.YYYY',
	            ll : 'Do MMM YYYY',
	            lll : 'Do MMM YYYY, [klo] HH.mm',
	            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
	        },
	        calendar : {
	            sameDay : '[tänään] [klo] LT',
	            nextDay : '[huomenna] [klo] LT',
	            nextWeek : 'dddd [klo] LT',
	            lastDay : '[eilen] [klo] LT',
	            lastWeek : '[viime] dddd[na] [klo] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s päästä',
	            past : '%s sitten',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fi;

	}));

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : faroese (fo)
	//! author : Ragnar Johannesen : https://github.com/ragnar123

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fo = moment.defineLocale('fo', {
	        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D. MMMM, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Í dag kl.] LT',
	            nextDay : '[Í morgin kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[Í gjár kl.] LT',
	            lastWeek : '[síðstu] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'um %s',
	            past : '%s síðani',
	            s : 'fá sekund',
	            m : 'ein minutt',
	            mm : '%d minuttir',
	            h : 'ein tími',
	            hh : '%d tímar',
	            d : 'ein dagur',
	            dd : '%d dagar',
	            M : 'ein mánaði',
	            MM : '%d mánaðir',
	            y : 'eitt ár',
	            yy : '%d ár'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fo;

	}));

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : french (fr)
	//! author : John Fischer : https://github.com/jfroffice

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr = moment.defineLocale('fr', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : '');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fr;

	}));

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian french (fr-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr_ca = moment.defineLocale('fr-ca', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : 'e');
	        }
	    });

	    return fr_ca;

	}));

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swiss french (fr)
	//! author : Gaspard Bucher : https://github.com/gaspard

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr_ch = moment.defineLocale('fr-ch', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : 'e');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fr_ch;

	}));

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : frisian (fy)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

	    var fy = moment.defineLocale('fy', {
	        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
	        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[hjoed om] LT',
	            nextDay: '[moarn om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[juster om] LT',
	            lastWeek: '[ôfrûne] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'oer %s',
	            past : '%s lyn',
	            s : 'in pear sekonden',
	            m : 'ien minút',
	            mm : '%d minuten',
	            h : 'ien oere',
	            hh : '%d oeren',
	            d : 'ien dei',
	            dd : '%d dagen',
	            M : 'ien moanne',
	            MM : '%d moannen',
	            y : 'ien jier',
	            yy : '%d jierren'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fy;

	}));

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : great britain scottish gealic (gd)
	//! author : Jon Ashdown : https://github.com/jonashdown

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = [
	        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
	    ];

	    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

	    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

	    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

	    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

	    var gd = moment.defineLocale('gd', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParseExact : true,
	        weekdays : weekdays,
	        weekdaysShort : weekdaysShort,
	        weekdaysMin : weekdaysMin,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[An-diugh aig] LT',
	            nextDay : '[A-màireach aig] LT',
	            nextWeek : 'dddd [aig] LT',
	            lastDay : '[An-dè aig] LT',
	            lastWeek : 'dddd [seo chaidh] [aig] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ann an %s',
	            past : 'bho chionn %s',
	            s : 'beagan diogan',
	            m : 'mionaid',
	            mm : '%d mionaidean',
	            h : 'uair',
	            hh : '%d uairean',
	            d : 'latha',
	            dd : '%d latha',
	            M : 'mìos',
	            MM : '%d mìosan',
	            y : 'bliadhna',
	            yy : '%d bliadhna'
	        },
	        ordinalParse : /\d{1,2}(d|na|mh)/,
	        ordinal : function (number) {
	            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return gd;

	}));

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : galician (gl)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var gl = moment.defineLocale('gl', {
	        months : 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),
	        monthsShort : 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),
	        weekdaysShort : 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            lastDay : function () {
	                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	            },
	            lastWeek : function () {
	                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (str) {
	                if (str === 'uns segundos') {
	                    return 'nuns segundos';
	                }
	                return 'en ' + str;
	            },
	            past : 'hai %s',
	            s : 'uns segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'unha hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un ano',
	            yy : '%d anos'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return gl;

	}));

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hebrew (he)
	//! author : Tomer Cohen : https://github.com/tomer
	//! author : Moshe Simantov : https://github.com/DevelopmentIL
	//! author : Tal Ater : https://github.com/TalAter

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var he = moment.defineLocale('he', {
	        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [ב]MMMM YYYY',
	            LLL : 'D [ב]MMMM YYYY HH:mm',
	            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
	            l : 'D/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[היום ב־]LT',
	            nextDay : '[מחר ב־]LT',
	            nextWeek : 'dddd [בשעה] LT',
	            lastDay : '[אתמול ב־]LT',
	            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'בעוד %s',
	            past : 'לפני %s',
	            s : 'מספר שניות',
	            m : 'דקה',
	            mm : '%d דקות',
	            h : 'שעה',
	            hh : function (number) {
	                if (number === 2) {
	                    return 'שעתיים';
	                }
	                return number + ' שעות';
	            },
	            d : 'יום',
	            dd : function (number) {
	                if (number === 2) {
	                    return 'יומיים';
	                }
	                return number + ' ימים';
	            },
	            M : 'חודש',
	            MM : function (number) {
	                if (number === 2) {
	                    return 'חודשיים';
	                }
	                return number + ' חודשים';
	            },
	            y : 'שנה',
	            yy : function (number) {
	                if (number === 2) {
	                    return 'שנתיים';
	                } else if (number % 10 === 0 && number !== 10) {
	                    return number + ' שנה';
	                }
	                return number + ' שנים';
	            }
	        },
	        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
	        isPM : function (input) {
	            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 5) {
	                return 'לפנות בוקר';
	            } else if (hour < 10) {
	                return 'בבוקר';
	            } else if (hour < 12) {
	                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
	            } else if (hour < 18) {
	                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
	            } else {
	                return 'בערב';
	            }
	        }
	    });

	    return he;

	}));

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hindi (hi)
	//! author : Mayank Singhal : https://github.com/mayanksinghal

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var hi = moment.defineLocale('hi', {
	        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm बजे',
	            LTS : 'A h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[कल] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[कल] LT',
	            lastWeek : '[पिछले] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s में',
	            past : '%s पहले',
	            s : 'कुछ ही क्षण',
	            m : 'एक मिनट',
	            mm : '%d मिनट',
	            h : 'एक घंटा',
	            hh : '%d घंटे',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महीने',
	            MM : '%d महीने',
	            y : 'एक वर्ष',
	            yy : '%d वर्ष'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiemParse: /रात|सुबह|दोपहर|शाम/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सुबह') {
	                return hour;
	            } else if (meridiem === 'दोपहर') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'शाम') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात';
	            } else if (hour < 10) {
	                return 'सुबह';
	            } else if (hour < 17) {
	                return 'दोपहर';
	            } else if (hour < 20) {
	                return 'शाम';
	            } else {
	                return 'रात';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hi;

	}));

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hrvatski (hr)
	//! author : Bojan Marković : https://github.com/bmarkovic

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    var hr = moment.defineLocale('hr', {
	        months : {
	            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
	            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
	        },
	        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hr;

	}));

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hungarian (hu)
	//! author : Adam Brunner : https://github.com/adambrunner

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number,
	            suffix;
	        switch (key) {
	        case 's':
	            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	        case 'm':
	            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'mm':
	            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'h':
	            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'hh':
	            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'd':
	            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'dd':
	            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'M':
	            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'MM':
	            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'y':
	            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	        case 'yy':
	            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }
	        return '';
	    }
	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }

	    var hu = moment.defineLocale('hu', {
	        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'YYYY.MM.DD.',
	            LL : 'YYYY. MMMM D.',
	            LLL : 'YYYY. MMMM D. H:mm',
	            LLLL : 'YYYY. MMMM D., dddd H:mm'
	        },
	        meridiemParse: /de|du/i,
	        isPM: function (input) {
	            return input.charAt(1).toLowerCase() === 'u';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar : {
	            sameDay : '[ma] LT[-kor]',
	            nextDay : '[holnap] LT[-kor]',
	            nextWeek : function () {
	                return week.call(this, true);
	            },
	            lastDay : '[tegnap] LT[-kor]',
	            lastWeek : function () {
	                return week.call(this, false);
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s múlva',
	            past : '%s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hu;

	}));

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Armenian (hy-am)
	//! author : Armendarabyan : https://github.com/armendarabyan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var hy_am = moment.defineLocale('hy-am', {
	        months : {
	            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
	            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
	        },
	        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
	        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
	        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY թ.',
	            LLL : 'D MMMM YYYY թ., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
	        },
	        calendar : {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function () {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function () {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s հետո',
	            past : '%s առաջ',
	            s : 'մի քանի վայրկյան',
	            m : 'րոպե',
	            mm : '%d րոպե',
	            h : 'ժամ',
	            hh : '%d ժամ',
	            d : 'օր',
	            dd : '%d օր',
	            M : 'ամիս',
	            MM : '%d ամիս',
	            y : 'տարի',
	            yy : '%d տարի'
	        },
	        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	        isPM: function (input) {
	            return /^(ցերեկվա|երեկոյան)$/.test(input);
	        },
	        meridiem : function (hour) {
	            if (hour < 4) {
	                return 'գիշերվա';
	            } else if (hour < 12) {
	                return 'առավոտվա';
	            } else if (hour < 17) {
	                return 'ցերեկվա';
	            } else {
	                return 'երեկոյան';
	            }
	        },
	        ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'DDD':
	            case 'w':
	            case 'W':
	            case 'DDDo':
	                if (number === 1) {
	                    return number + '-ին';
	                }
	                return number + '-րդ';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hy_am;

	}));

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Indonesia (id)
	//! author : Mohammad Satrio Utomo : https://github.com/tyok
	//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var id = moment.defineLocale('id', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|siang|sore|malam/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'siang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sore' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Besok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kemarin pukul] LT',
	            lastWeek : 'dddd [lalu pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lalu',
	            s : 'beberapa detik',
	            m : 'semenit',
	            mm : '%d menit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return id;

	}));

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : icelandic (is)
	//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	        case 'm':
	            return withoutSuffix ? 'mínúta' : 'mínútu';
	        case 'mm':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	            } else if (withoutSuffix) {
	                return result + 'mínúta';
	            }
	            return result + 'mínútu';
	        case 'hh':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	            }
	            return result + 'klukkustund';
	        case 'd':
	            if (withoutSuffix) {
	                return 'dagur';
	            }
	            return isFuture ? 'dag' : 'degi';
	        case 'dd':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'dagar';
	                }
	                return result + (isFuture ? 'daga' : 'dögum');
	            } else if (withoutSuffix) {
	                return result + 'dagur';
	            }
	            return result + (isFuture ? 'dag' : 'degi');
	        case 'M':
	            if (withoutSuffix) {
	                return 'mánuður';
	            }
	            return isFuture ? 'mánuð' : 'mánuði';
	        case 'MM':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'mánuðir';
	                }
	                return result + (isFuture ? 'mánuði' : 'mánuðum');
	            } else if (withoutSuffix) {
	                return result + 'mánuður';
	            }
	            return result + (isFuture ? 'mánuð' : 'mánuði');
	        case 'y':
	            return withoutSuffix || isFuture ? 'ár' : 'ári';
	        case 'yy':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	            }
	            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }

	    var is = moment.defineLocale('is', {
	        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
	        },
	        calendar : {
	            sameDay : '[í dag kl.] LT',
	            nextDay : '[á morgun kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[í gær kl.] LT',
	            lastWeek : '[síðasta] dddd [kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'eftir %s',
	            past : 'fyrir %s síðan',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : 'klukkustund',
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return is;

	}));

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : italian (it)
	//! author : Lorenzo : https://github.com/aliem
	//! author: Mattia Larentis: https://github.com/nostalgiaz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var it = moment.defineLocale('it', {
	        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
	        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Me_Gi_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past : '%s fa',
	            s : 'alcuni secondi',
	            m : 'un minuto',
	            mm : '%d minuti',
	            h : 'un\'ora',
	            hh : '%d ore',
	            d : 'un giorno',
	            dd : '%d giorni',
	            M : 'un mese',
	            MM : '%d mesi',
	            y : 'un anno',
	            yy : '%d anni'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return it;

	}));

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : japanese (ja)
	//! author : LI Long : https://github.com/baryon

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ja = moment.defineLocale('ja', {
	        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	        longDateFormat : {
	            LT : 'Ah時m分',
	            LTS : 'Ah時m分s秒',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日Ah時m分',
	            LLLL : 'YYYY年M月D日Ah時m分 dddd'
	        },
	        meridiemParse: /午前|午後/i,
	        isPM : function (input) {
	            return input === '午後';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return '午前';
	            } else {
	                return '午後';
	            }
	        },
	        calendar : {
	            sameDay : '[今日] LT',
	            nextDay : '[明日] LT',
	            nextWeek : '[来週]dddd LT',
	            lastDay : '[昨日] LT',
	            lastWeek : '[前週]dddd LT',
	            sameElse : 'L'
	        },
	        ordinalParse : /\d{1,2}日/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            default:
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s後',
	            past : '%s前',
	            s : '数秒',
	            m : '1分',
	            mm : '%d分',
	            h : '1時間',
	            hh : '%d時間',
	            d : '1日',
	            dd : '%d日',
	            M : '1ヶ月',
	            MM : '%dヶ月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });

	    return ja;

	}));

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Boso Jowo (jv)
	//! author : Rony Lantip : https://github.com/lantip
	//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var jv = moment.defineLocale('jv', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /enjing|siyang|sonten|ndalu/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'enjing') {
	                return hour;
	            } else if (meridiem === 'siyang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'enjing';
	            } else if (hours < 15) {
	                return 'siyang';
	            } else if (hours < 19) {
	                return 'sonten';
	            } else {
	                return 'ndalu';
	            }
	        },
	        calendar : {
	            sameDay : '[Dinten puniko pukul] LT',
	            nextDay : '[Mbenjang pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kala wingi pukul] LT',
	            lastWeek : 'dddd [kepengker pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'wonten ing %s',
	            past : '%s ingkang kepengker',
	            s : 'sawetawis detik',
	            m : 'setunggal menit',
	            mm : '%d menit',
	            h : 'setunggal jam',
	            hh : '%d jam',
	            d : 'sedinten',
	            dd : '%d dinten',
	            M : 'sewulan',
	            MM : '%d wulan',
	            y : 'setaun',
	            yy : '%d taun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return jv;

	}));

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Georgian (ka)
	//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ka = moment.defineLocale('ka', {
	        months : {
	            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },
	        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	        weekdays : {
	            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
	            isFormat: /(წინა|შემდეგ)/
	        },
	        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[დღეს] LT[-ზე]',
	            nextDay : '[ხვალ] LT[-ზე]',
	            lastDay : '[გუშინ] LT[-ზე]',
	            nextWeek : '[შემდეგ] dddd LT[-ზე]',
	            lastWeek : '[წინა] dddd LT-ზე',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                    s.replace(/ი$/, 'ში') :
	                    s + 'ში';
	            },
	            past : function (s) {
	                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                    return s.replace(/(ი|ე)$/, 'ის წინ');
	                }
	                if ((/წელი/).test(s)) {
	                    return s.replace(/წელი$/, 'წლის წინ');
	                }
	            },
	            s : 'რამდენიმე წამი',
	            m : 'წუთი',
	            mm : '%d წუთი',
	            h : 'საათი',
	            hh : '%d საათი',
	            d : 'დღე',
	            dd : '%d დღე',
	            M : 'თვე',
	            MM : '%d თვე',
	            y : 'წელი',
	            yy : '%d წელი'
	        },
	        ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	        ordinal : function (number) {
	            if (number === 0) {
	                return number;
	            }
	            if (number === 1) {
	                return number + '-ლი';
	            }
	            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	                return 'მე-' + number;
	            }
	            return number + '-ე';
	        },
	        week : {
	            dow : 1,
	            doy : 7
	        }
	    });

	    return ka;

	}));

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : kazakh (kk)
	//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        0: '-ші',
	        1: '-ші',
	        2: '-ші',
	        3: '-ші',
	        4: '-ші',
	        5: '-ші',
	        6: '-шы',
	        7: '-ші',
	        8: '-ші',
	        9: '-шы',
	        10: '-шы',
	        20: '-шы',
	        30: '-шы',
	        40: '-шы',
	        50: '-ші',
	        60: '-шы',
	        70: '-ші',
	        80: '-ші',
	        90: '-шы',
	        100: '-ші'
	    };

	    var kk = moment.defineLocale('kk', {
	        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
	        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
	        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
	        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
	        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бүгін сағат] LT',
	            nextDay : '[Ертең сағат] LT',
	            nextWeek : 'dddd [сағат] LT',
	            lastDay : '[Кеше сағат] LT',
	            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ішінде',
	            past : '%s бұрын',
	            s : 'бірнеше секунд',
	            m : 'бір минут',
	            mm : '%d минут',
	            h : 'бір сағат',
	            hh : '%d сағат',
	            d : 'бір күн',
	            dd : '%d күн',
	            M : 'бір ай',
	            MM : '%d ай',
	            y : 'бір жыл',
	            yy : '%d жыл'
	        },
	        ordinalParse: /\d{1,2}-(ші|шы)/,
	        ordinal : function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return kk;

	}));

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : khmer (km)
	//! author : Kruy Vanna : https://github.com/kruyvanna

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var km = moment.defineLocale('km', {
	        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sទៀត',
	            past: '%sមុន',
	            s: 'ប៉ុន្មានវិនាទី',
	            m: 'មួយនាទី',
	            mm: '%d នាទី',
	            h: 'មួយម៉ោង',
	            hh: '%d ម៉ោង',
	            d: 'មួយថ្ងៃ',
	            dd: '%d ថ្ងៃ',
	            M: 'មួយខែ',
	            MM: '%d ខែ',
	            y: 'មួយឆ្នាំ',
	            yy: '%d ឆ្នាំ'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return km;

	}));

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : korean (ko)
	//!
	//! authors
	//!
	//! - Kyungwook, Park : https://github.com/kyungw00k
	//! - Jeeeyul Lee <jeeeyul@gmail.com>

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ko = moment.defineLocale('ko', {
	        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
	        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
	        longDateFormat : {
	            LT : 'A h시 m분',
	            LTS : 'A h시 m분 s초',
	            L : 'YYYY.MM.DD',
	            LL : 'YYYY년 MMMM D일',
	            LLL : 'YYYY년 MMMM D일 A h시 m분',
	            LLLL : 'YYYY년 MMMM D일 dddd A h시 m분'
	        },
	        calendar : {
	            sameDay : '오늘 LT',
	            nextDay : '내일 LT',
	            nextWeek : 'dddd LT',
	            lastDay : '어제 LT',
	            lastWeek : '지난주 dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s 후',
	            past : '%s 전',
	            s : '몇 초',
	            ss : '%d초',
	            m : '일분',
	            mm : '%d분',
	            h : '한 시간',
	            hh : '%d시간',
	            d : '하루',
	            dd : '%d일',
	            M : '한 달',
	            MM : '%d달',
	            y : '일 년',
	            yy : '%d년'
	        },
	        ordinalParse : /\d{1,2}일/,
	        ordinal : '%d일',
	        meridiemParse : /오전|오후/,
	        isPM : function (token) {
	            return token === '오후';
	        },
	        meridiem : function (hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        }
	    });

	    return ko;

	}));

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : kyrgyz (ky)
	//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    var suffixes = {
	        0: '-чү',
	        1: '-чи',
	        2: '-чи',
	        3: '-чү',
	        4: '-чү',
	        5: '-чи',
	        6: '-чы',
	        7: '-чи',
	        8: '-чи',
	        9: '-чу',
	        10: '-чу',
	        20: '-чы',
	        30: '-чу',
	        40: '-чы',
	        50: '-чү',
	        60: '-чы',
	        70: '-чи',
	        80: '-чи',
	        90: '-чу',
	        100: '-чү'
	    };

	    var ky = moment.defineLocale('ky', {
	        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
	        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
	        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бүгүн саат] LT',
	            nextDay : '[Эртең саат] LT',
	            nextWeek : 'dddd [саат] LT',
	            lastDay : '[Кече саат] LT',
	            lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ичинде',
	            past : '%s мурун',
	            s : 'бирнече секунд',
	            m : 'бир мүнөт',
	            mm : '%d мүнөт',
	            h : 'бир саат',
	            hh : '%d саат',
	            d : 'бир күн',
	            dd : '%d күн',
	            M : 'бир ай',
	            MM : '%d ай',
	            y : 'бир жыл',
	            yy : '%d жыл'
	        },
	        ordinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
	        ordinal : function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ky;

	}));

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Luxembourgish (lb)
	//! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'M': ['ee Mount', 'engem Mount'],
	            'y': ['ee Joer', 'engem Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'a ' + string;
	        }
	        return 'an ' + string;
	    }
	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'viru ' + string;
	        }
	        return 'virun ' + string;
	    }
	    /**
	     * Returns true if the word before the given number loses the '-n' ending.
	     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(number) {
	        number = parseInt(number, 10);
	        if (isNaN(number)) {
	            return false;
	        }
	        if (number < 0) {
	            // Negative Number --> always true
	            return true;
	        } else if (number < 10) {
	            // Only 1 digit
	            if (4 <= number && number <= 7) {
	                return true;
	            }
	            return false;
	        } else if (number < 100) {
	            // 2 digits
	            var lastDigit = number % 10, firstDigit = number / 10;
	            if (lastDigit === 0) {
	                return eifelerRegelAppliesToNumber(firstDigit);
	            }
	            return eifelerRegelAppliesToNumber(lastDigit);
	        } else if (number < 10000) {
	            // 3 or 4 digits --> recursively check first digit
	            while (number >= 10) {
	                number = number / 10;
	            }
	            return eifelerRegelAppliesToNumber(number);
	        } else {
	            // Anything larger than 4 digits: recursively check first n-3 digits
	            number = number / 1000;
	            return eifelerRegelAppliesToNumber(number);
	        }
	    }

	    var lb = moment.defineLocale('lb', {
	        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm [Auer]',
	            LTS: 'H:mm:ss [Auer]',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm [Auer]',
	            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	        },
	        calendar: {
	            sameDay: '[Haut um] LT',
	            sameElse: 'L',
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: function () {
	                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	                switch (this.day()) {
	                    case 2:
	                    case 4:
	                        return '[Leschten] dddd [um] LT';
	                    default:
	                        return '[Leschte] dddd [um] LT';
	                }
	            }
	        },
	        relativeTime : {
	            future : processFutureTime,
	            past : processPastTime,
	            s : 'e puer Sekonnen',
	            m : processRelativeTime,
	            mm : '%d Minutten',
	            h : processRelativeTime,
	            hh : '%d Stonnen',
	            d : processRelativeTime,
	            dd : '%d Deeg',
	            M : processRelativeTime,
	            MM : '%d Méint',
	            y : processRelativeTime,
	            yy : '%d Joer'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lb;

	}));

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : lao (lo)
	//! author : Ryan Hart : https://github.com/ryanhart2

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var lo = moment.defineLocale('lo', {
	        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
	        isPM: function (input) {
	            return input === 'ຕອນແລງ';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ຕອນເຊົ້າ';
	            } else {
	                return 'ຕອນແລງ';
	            }
	        },
	        calendar : {
	            sameDay : '[ມື້ນີ້ເວລາ] LT',
	            nextDay : '[ມື້ອື່ນເວລາ] LT',
	            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
	            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
	            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ອີກ %s',
	            past : '%sຜ່ານມາ',
	            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
	            m : '1 ນາທີ',
	            mm : '%d ນາທີ',
	            h : '1 ຊົ່ວໂມງ',
	            hh : '%d ຊົ່ວໂມງ',
	            d : '1 ມື້',
	            dd : '%d ມື້',
	            M : '1 ເດືອນ',
	            MM : '%d ເດືອນ',
	            y : '1 ປີ',
	            yy : '%d ປີ'
	        },
	        ordinalParse: /(ທີ່)\d{1,2}/,
	        ordinal : function (number) {
	            return 'ທີ່' + number;
	        }
	    });

	    return lo;

	}));

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Lithuanian (lt)
	//! author : Mindaugas Mozūras : https://github.com/mmozuras

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var units = {
	        'm' : 'minutė_minutės_minutę',
	        'mm': 'minutės_minučių_minutes',
	        'h' : 'valanda_valandos_valandą',
	        'hh': 'valandos_valandų_valandas',
	        'd' : 'diena_dienos_dieną',
	        'dd': 'dienos_dienų_dienas',
	        'M' : 'mėnuo_mėnesio_mėnesį',
	        'MM': 'mėnesiai_mėnesių_mėnesius',
	        'y' : 'metai_metų_metus',
	        'yy': 'metai_metų_metus'
	    };
	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return 'kelios sekundės';
	        } else {
	            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	        }
	    }
	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	    }
	    function special(number) {
	        return number % 10 === 0 || (number > 10 && number < 20);
	    }
	    function forms(key) {
	        return units[key].split('_');
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }
	    var lt = moment.defineLocale('lt', {
	        months : {
	            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
	            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_')
	        },
	        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	        weekdays : {
	            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
	            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
	            isFormat: /dddd HH:mm/
	        },
	        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY [m.] MMMM D [d.]',
	            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY [m.] MMMM D [d.]',
	            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	        },
	        calendar : {
	            sameDay : '[Šiandien] LT',
	            nextDay : '[Rytoj] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[Vakar] LT',
	            lastWeek : '[Praėjusį] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'po %s',
	            past : 'prieš %s',
	            s : translateSeconds,
	            m : translateSingular,
	            mm : translate,
	            h : translateSingular,
	            hh : translate,
	            d : translateSingular,
	            dd : translate,
	            M : translateSingular,
	            MM : translate,
	            y : translateSingular,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}-oji/,
	        ordinal : function (number) {
	            return number + '-oji';
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lt;

	}));

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : latvian (lv)
	//! author : Kristaps Karlsons : https://github.com/skakri
	//! author : Jānis Elmeris : https://github.com/JanisE

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var units = {
	        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'h': 'stundas_stundām_stunda_stundas'.split('_'),
	        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	        'd': 'dienas_dienām_diena_dienas'.split('_'),
	        'dd': 'dienas_dienām_diena_dienas'.split('_'),
	        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'y': 'gada_gadiem_gads_gadi'.split('_'),
	        'yy': 'gada_gadiem_gads_gadi'.split('_')
	    };
	    /**
	     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	     */
	    function format(forms, number, withoutSuffix) {
	        if (withoutSuffix) {
	            // E.g. "21 minūte", "3 minūtes".
	            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];
	        } else {
	            // E.g. "21 minūtes" as in "pēc 21 minūtes".
	            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];
	        }
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }
	    function relativeTimeWithSingular(number, withoutSuffix, key) {
	        return format(units[key], number, withoutSuffix);
	    }
	    function relativeSeconds(number, withoutSuffix) {
	        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	    }

	    var lv = moment.defineLocale('lv', {
	        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY.',
	            LL : 'YYYY. [gada] D. MMMM',
	            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
	            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	        },
	        calendar : {
	            sameDay : '[Šodien pulksten] LT',
	            nextDay : '[Rīt pulksten] LT',
	            nextWeek : 'dddd [pulksten] LT',
	            lastDay : '[Vakar pulksten] LT',
	            lastWeek : '[Pagājušā] dddd [pulksten] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'pēc %s',
	            past : 'pirms %s',
	            s : relativeSeconds,
	            m : relativeTimeWithSingular,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithSingular,
	            hh : relativeTimeWithPlural,
	            d : relativeTimeWithSingular,
	            dd : relativeTimeWithPlural,
	            M : relativeTimeWithSingular,
	            MM : relativeTimeWithPlural,
	            y : relativeTimeWithSingular,
	            yy : relativeTimeWithPlural
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lv;

	}));

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Montenegrin (me)
	//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jednog minuta'],
	            mm: ['minut', 'minuta', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mjesec', 'mjeseca', 'mjeseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var me = moment.defineLocale('me', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact : true,
	        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sjutra u] LT',

	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedjelje] [u] LT',
	                    '[prošlog] [ponedjeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srijede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mjesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return me;

	}));

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : macedonian (mk)
	//! author : Borislav Mickov : https://github.com/B0k0

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var mk = moment.defineLocale('mk', {
	        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Денес во] LT',
	            nextDay : '[Утре во] LT',
	            nextWeek : '[Во] dddd [во] LT',
	            lastDay : '[Вчера во] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[Изминатата] dddd [во] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[Изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'после %s',
	            past : 'пред %s',
	            s : 'неколку секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дена',
	            M : 'месец',
	            MM : '%d месеци',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mk;

	}));

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : malayalam (ml)
	//! author : Floyd Pink : https://github.com/floydpink

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ml = moment.defineLocale('ml', {
	        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm -നു',
	            LTS : 'A h:mm:ss -നു',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm -നു',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
	        },
	        calendar : {
	            sameDay : '[ഇന്ന്] LT',
	            nextDay : '[നാളെ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ഇന്നലെ] LT',
	            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s കഴിഞ്ഞ്',
	            past : '%s മുൻപ്',
	            s : 'അൽപ നിമിഷങ്ങൾ',
	            m : 'ഒരു മിനിറ്റ്',
	            mm : '%d മിനിറ്റ്',
	            h : 'ഒരു മണിക്കൂർ',
	            hh : '%d മണിക്കൂർ',
	            d : 'ഒരു ദിവസം',
	            dd : '%d ദിവസം',
	            M : 'ഒരു മാസം',
	            MM : '%d മാസം',
	            y : 'ഒരു വർഷം',
	            yy : '%d വർഷം'
	        },
	        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'രാത്രി' && hour >= 4) ||
	                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
	                    meridiem === 'വൈകുന്നേരം') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'രാത്രി';
	            } else if (hour < 12) {
	                return 'രാവിലെ';
	            } else if (hour < 17) {
	                return 'ഉച്ച കഴിഞ്ഞ്';
	            } else if (hour < 20) {
	                return 'വൈകുന്നേരം';
	            } else {
	                return 'രാത്രി';
	            }
	        }
	    });

	    return ml;

	}));

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Marathi (mr)
	//! author : Harshad Kale : https://github.com/kalehv
	//! author : Vivek Athalye : https://github.com/vnathalye

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    function relativeTimeMr(number, withoutSuffix, string, isFuture)
	    {
	        var output = '';
	        if (withoutSuffix) {
	            switch (string) {
	                case 's': output = 'काही सेकंद'; break;
	                case 'm': output = 'एक मिनिट'; break;
	                case 'mm': output = '%d मिनिटे'; break;
	                case 'h': output = 'एक तास'; break;
	                case 'hh': output = '%d तास'; break;
	                case 'd': output = 'एक दिवस'; break;
	                case 'dd': output = '%d दिवस'; break;
	                case 'M': output = 'एक महिना'; break;
	                case 'MM': output = '%d महिने'; break;
	                case 'y': output = 'एक वर्ष'; break;
	                case 'yy': output = '%d वर्षे'; break;
	            }
	        }
	        else {
	            switch (string) {
	                case 's': output = 'काही सेकंदां'; break;
	                case 'm': output = 'एका मिनिटा'; break;
	                case 'mm': output = '%d मिनिटां'; break;
	                case 'h': output = 'एका तासा'; break;
	                case 'hh': output = '%d तासां'; break;
	                case 'd': output = 'एका दिवसा'; break;
	                case 'dd': output = '%d दिवसां'; break;
	                case 'M': output = 'एका महिन्या'; break;
	                case 'MM': output = '%d महिन्यां'; break;
	                case 'y': output = 'एका वर्षा'; break;
	                case 'yy': output = '%d वर्षां'; break;
	            }
	        }
	        return output.replace(/%d/i, number);
	    }

	    var mr = moment.defineLocale('mr', {
	        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm वाजता',
	            LTS : 'A h:mm:ss वाजता',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm वाजता',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[उद्या] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future: '%sमध्ये',
	            past: '%sपूर्वी',
	            s: relativeTimeMr,
	            m: relativeTimeMr,
	            mm: relativeTimeMr,
	            h: relativeTimeMr,
	            hh: relativeTimeMr,
	            d: relativeTimeMr,
	            dd: relativeTimeMr,
	            M: relativeTimeMr,
	            MM: relativeTimeMr,
	            y: relativeTimeMr,
	            yy: relativeTimeMr
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात्री') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सकाळी') {
	                return hour;
	            } else if (meridiem === 'दुपारी') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'सायंकाळी') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात्री';
	            } else if (hour < 10) {
	                return 'सकाळी';
	            } else if (hour < 17) {
	                return 'दुपारी';
	            } else if (hour < 20) {
	                return 'सायंकाळी';
	            } else {
	                return 'रात्री';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mr;

	}));

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ms = moment.defineLocale('ms', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms;

	}));

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ms_my = moment.defineLocale('ms-my', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms_my;

	}));

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Burmese (my)
	//! author : Squar team, mysquar.com

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '၁',
	        '2': '၂',
	        '3': '၃',
	        '4': '၄',
	        '5': '၅',
	        '6': '၆',
	        '7': '၇',
	        '8': '၈',
	        '9': '၉',
	        '0': '၀'
	    }, numberMap = {
	        '၁': '1',
	        '၂': '2',
	        '၃': '3',
	        '၄': '4',
	        '၅': '5',
	        '၆': '6',
	        '၇': '7',
	        '၈': '8',
	        '၉': '9',
	        '၀': '0'
	    };

	    var my = moment.defineLocale('my', {
	        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ယနေ.] LT [မှာ]',
	            nextDay: '[မနက်ဖြန်] LT [မှာ]',
	            nextWeek: 'dddd LT [မှာ]',
	            lastDay: '[မနေ.က] LT [မှာ]',
	            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'လာမည့် %s မှာ',
	            past: 'လွန်ခဲ့သော %s က',
	            s: 'စက္ကန်.အနည်းငယ်',
	            m: 'တစ်မိနစ်',
	            mm: '%d မိနစ်',
	            h: 'တစ်နာရီ',
	            hh: '%d နာရီ',
	            d: 'တစ်ရက်',
	            dd: '%d ရက်',
	            M: 'တစ်လ',
	            MM: '%d လ',
	            y: 'တစ်နှစ်',
	            yy: '%d နှစ်'
	        },
	        preparse: function (string) {
	            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return my;

	}));

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian bokmål (nb)
	//! authors : Espen Hovlandsdal : https://github.com/rexxars
	//!           Sigurd Gartmann : https://github.com/sigurdga

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var nb = moment.defineLocale('nb', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] HH:mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'noen sekunder',
	            m : 'ett minutt',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dager',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nb;

	}));

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : nepali/nepalese
	//! author : suvash : https://github.com/suvash

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var ne = moment.defineLocale('ne', {
	        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'Aको h:mm बजे',
	            LTS : 'Aको h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, Aको h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'राति') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'बिहान') {
	                return hour;
	            } else if (meridiem === 'दिउँसो') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'साँझ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 3) {
	                return 'राति';
	            } else if (hour < 12) {
	                return 'बिहान';
	            } else if (hour < 16) {
	                return 'दिउँसो';
	            } else if (hour < 20) {
	                return 'साँझ';
	            } else {
	                return 'राति';
	            }
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[भोलि] LT',
	            nextWeek : '[आउँदो] dddd[,] LT',
	            lastDay : '[हिजो] LT',
	            lastWeek : '[गएको] dddd[,] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sमा',
	            past : '%s अगाडि',
	            s : 'केही क्षण',
	            m : 'एक मिनेट',
	            mm : '%d मिनेट',
	            h : 'एक घण्टा',
	            hh : '%d घण्टा',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महिना',
	            MM : '%d महिना',
	            y : 'एक बर्ष',
	            yy : '%d बर्ष'
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ne;

	}));

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : dutch (nl)
	//! author : Joris Röling : https://github.com/jjupiter

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

	    var nl = moment.defineLocale('nl', {
	        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'over %s',
	            past : '%s geleden',
	            s : 'een paar seconden',
	            m : 'één minuut',
	            mm : '%d minuten',
	            h : 'één uur',
	            hh : '%d uur',
	            d : 'één dag',
	            dd : '%d dagen',
	            M : 'één maand',
	            MM : '%d maanden',
	            y : 'één jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nl;

	}));

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian nynorsk (nn)
	//! author : https://github.com/mechuwind

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var nn = moment.defineLocale('nn', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s sidan',
	            s : 'nokre sekund',
	            m : 'eit minutt',
	            mm : '%d minutt',
	            h : 'ein time',
	            hh : '%d timar',
	            d : 'ein dag',
	            dd : '%d dagar',
	            M : 'ein månad',
	            MM : '%d månader',
	            y : 'eit år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nn;

	}));

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : punjabi india (pa-in)
	//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '੧',
	        '2': '੨',
	        '3': '੩',
	        '4': '੪',
	        '5': '੫',
	        '6': '੬',
	        '7': '੭',
	        '8': '੮',
	        '9': '੯',
	        '0': '੦'
	    },
	    numberMap = {
	        '੧': '1',
	        '੨': '2',
	        '੩': '3',
	        '੪': '4',
	        '੫': '5',
	        '੬': '6',
	        '੭': '7',
	        '੮': '8',
	        '੯': '9',
	        '੦': '0'
	    };

	    var pa_in = moment.defineLocale('pa-in', {
	        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
	        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
	        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm ਵਜੇ',
	            LTS : 'A h:mm:ss ਵਜੇ',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
	        },
	        calendar : {
	            sameDay : '[ਅਜ] LT',
	            nextDay : '[ਕਲ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ਕਲ] LT',
	            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ਵਿੱਚ',
	            past : '%s ਪਿਛਲੇ',
	            s : 'ਕੁਝ ਸਕਿੰਟ',
	            m : 'ਇਕ ਮਿੰਟ',
	            mm : '%d ਮਿੰਟ',
	            h : 'ਇੱਕ ਘੰਟਾ',
	            hh : '%d ਘੰਟੇ',
	            d : 'ਇੱਕ ਦਿਨ',
	            dd : '%d ਦਿਨ',
	            M : 'ਇੱਕ ਮਹੀਨਾ',
	            MM : '%d ਮਹੀਨੇ',
	            y : 'ਇੱਕ ਸਾਲ',
	            yy : '%d ਸਾਲ'
	        },
	        preparse: function (string) {
	            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
	        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ਰਾਤ') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ਸਵੇਰ') {
	                return hour;
	            } else if (meridiem === 'ਦੁਪਹਿਰ') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'ਸ਼ਾਮ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ਰਾਤ';
	            } else if (hour < 10) {
	                return 'ਸਵੇਰ';
	            } else if (hour < 17) {
	                return 'ਦੁਪਹਿਰ';
	            } else if (hour < 20) {
	                return 'ਸ਼ਾਮ';
	            } else {
	                return 'ਰਾਤ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return pa_in;

	}));

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : polish (pl)
	//! author : Rafal Hirsz : https://github.com/evoL

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
	        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	    function plural(n) {
	        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'minuta' : 'minutę';
	        case 'mm':
	            return result + (plural(number) ? 'minuty' : 'minut');
	        case 'h':
	            return withoutSuffix  ? 'godzina'  : 'godzinę';
	        case 'hh':
	            return result + (plural(number) ? 'godziny' : 'godzin');
	        case 'MM':
	            return result + (plural(number) ? 'miesiące' : 'miesięcy');
	        case 'yy':
	            return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }

	    var pl = moment.defineLocale('pl', {
	        months : function (momentToFormat, format) {
	            if (format === '') {
	                // Hack: if format empty we know this is used to generate
	                // RegExp by moment. Give then back both valid forms of months
	                // in RegExp ready format.
	                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	            } else if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	        weekdaysShort : 'nie_pon_wt_śr_czw_pt_sb'.split('_'),
	        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: '[W] dddd [o] LT',
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[W zeszłą niedzielę o] LT';
	                case 3:
	                    return '[W zeszłą środę o] LT';
	                case 6:
	                    return '[W zeszłą sobotę o] LT';
	                default:
	                    return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : '%s temu',
	            s : 'kilka sekund',
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : '1 dzień',
	            dd : '%d dni',
	            M : 'miesiąc',
	            MM : translate,
	            y : 'rok',
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pl;

	}));

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : portuguese (pt)
	//! author : Jefferson : https://github.com/jalex79

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var pt = moment.defineLocale('pt', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : 'há %s',
	            s : 'segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pt;

	}));

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : brazilian portuguese (pt-br)
	//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var pt_br = moment.defineLocale('pt-br', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : '%s atrás',
	            s : 'poucos segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº'
	    });

	    return pt_br;

	}));

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : romanian (ro)
	//! author : Vlad Gurdiga : https://github.com/gurdiga
	//! author : Valentin Agachi : https://github.com/avaly

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	                'mm': 'minute',
	                'hh': 'ore',
	                'dd': 'zile',
	                'MM': 'luni',
	                'yy': 'ani'
	            },
	            separator = ' ';
	        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	            separator = ' de ';
	        }
	        return number + separator + format[key];
	    }

	    var ro = moment.defineLocale('ro', {
	        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[azi la] LT',
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'peste %s',
	            past : '%s în urmă',
	            s : 'câteva secunde',
	            m : 'un minut',
	            mm : relativeTimeWithPlural,
	            h : 'o oră',
	            hh : relativeTimeWithPlural,
	            d : 'o zi',
	            dd : relativeTimeWithPlural,
	            M : 'o lună',
	            MM : relativeTimeWithPlural,
	            y : 'un an',
	            yy : relativeTimeWithPlural
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ro;

	}));

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : russian (ru)
	//! author : Viktorminator : https://github.com/Viktorminator
	//! Author : Menelion Elensúle : https://github.com/Oire
	//! author : Коренберг Марк : https://github.com/socketpair

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

	    // http://new.gramota.ru/spravka/rules/139-prop : § 103
	    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
	    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
	    var ru = moment.defineLocale('ru', {
	        months : {
	            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
	            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
	        },
	        monthsShort : {
	            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
	            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
	            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
	        },
	        weekdays : {
	            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
	            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
	        },
	        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	        monthsRegex: /^(сентябр[яь]|октябр[яь]|декабр[яь]|феврал[яь]|январ[яь]|апрел[яь]|августа?|ноябр[яь]|сент\.|февр\.|нояб\.|июнь|янв.|июль|дек.|авг.|апр.|марта|мар[.т]|окт.|июн[яь]|июл[яь]|ма[яй])/i,
	        monthsShortRegex: /^(сентябр[яь]|октябр[яь]|декабр[яь]|феврал[яь]|январ[яь]|апрел[яь]|августа?|ноябр[яь]|сент\.|февр\.|нояб\.|июнь|янв.|июль|дек.|авг.|апр.|марта|мар[.т]|окт.|июн[яь]|июл[яь]|ма[яй])/i,
	        monthsStrictRegex: /^(сентябр[яь]|октябр[яь]|декабр[яь]|феврал[яь]|январ[яь]|апрел[яь]|августа?|ноябр[яь]|марта?|июн[яь]|июл[яь]|ма[яй])/i,
	        monthsShortStrictRegex: /^(нояб\.|февр\.|сент\.|июль|янв\.|июн[яь]|мар[.т]|авг\.|апр\.|окт\.|дек\.|ма[яй])/i,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сегодня в] LT',
	            nextDay: '[Завтра в] LT',
	            lastDay: '[Вчера в] LT',
	            nextWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                    case 0:
	                        return '[В следующее] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В следующий] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В следующую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            lastWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                    case 0:
	                        return '[В прошлое] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В прошлый] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В прошлую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'через %s',
	            past : '%s назад',
	            s : 'несколько секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'час',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночи|утра|дня|вечера/i,
	        isPM : function (input) {
	            return /^(дня|вечера)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночи';
	            } else if (hour < 12) {
	                return 'утра';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечера';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го|я)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            case 'w':
	            case 'W':
	                return number + '-я';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ru;

	}));

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Northern Sami (se)
	//! authors : Bård Rolstad Henriksen : https://github.com/karamell

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    var se = moment.defineLocale('se', {
	        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
	        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
	        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
	        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
	        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'MMMM D. [b.] YYYY',
	            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
	            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[otne ti] LT',
	            nextDay: '[ihttin ti] LT',
	            nextWeek: 'dddd [ti] LT',
	            lastDay: '[ikte ti] LT',
	            lastWeek: '[ovddit] dddd [ti] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s geažes',
	            past : 'maŋit %s',
	            s : 'moadde sekunddat',
	            m : 'okta minuhta',
	            mm : '%d minuhtat',
	            h : 'okta diimmu',
	            hh : '%d diimmut',
	            d : 'okta beaivi',
	            dd : '%d beaivvit',
	            M : 'okta mánnu',
	            MM : '%d mánut',
	            y : 'okta jahki',
	            yy : '%d jagit'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return se;

	}));

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Sinhalese (si)
	//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    /*jshint -W100*/
	    var si = moment.defineLocale('si', {
	        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'a h:mm',
	            LTS : 'a h:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY MMMM D',
	            LLL : 'YYYY MMMM D, a h:mm',
	            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	        },
	        calendar : {
	            sameDay : '[අද] LT[ට]',
	            nextDay : '[හෙට] LT[ට]',
	            nextWeek : 'dddd LT[ට]',
	            lastDay : '[ඊයේ] LT[ට]',
	            lastWeek : '[පසුගිය] dddd LT[ට]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sකින්',
	            past : '%sකට පෙර',
	            s : 'තත්පර කිහිපය',
	            m : 'මිනිත්තුව',
	            mm : 'මිනිත්තු %d',
	            h : 'පැය',
	            hh : 'පැය %d',
	            d : 'දිනය',
	            dd : 'දින %d',
	            M : 'මාසය',
	            MM : 'මාස %d',
	            y : 'වසර',
	            yy : 'වසර %d'
	        },
	        ordinalParse: /\d{1,2} වැනි/,
	        ordinal : function (number) {
	            return number + ' වැනි';
	        },
	        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
	        isPM : function (input) {
	            return input === 'ප.ව.' || input === 'පස් වරු';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'ප.ව.' : 'පස් වරු';
	            } else {
	                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	            }
	        }
	    });

	    return si;

	}));

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovak (sk)
	//! author : Martin Minka : https://github.com/k2s
	//! based on work of petrbela : https://github.com/petrbela

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
	        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minúty' : 'minút');
	            } else {
	                return result + 'minútami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodín');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dni' : 'dní');
	            } else {
	                return result + 'dňami';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'mesiace' : 'mesiacov');
	            } else {
	                return result + 'mesiacmi';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'rokov');
	            } else {
	                return result + 'rokmi';
	            }
	            break;
	        }
	    }

	    var sk = moment.defineLocale('sk', {
	        months : months,
	        monthsShort : monthsShort,
	        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
	        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes o] LT',
	            nextDay: '[zajtra o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [o] LT';
	                case 3:
	                    return '[v stredu o] LT';
	                case 4:
	                    return '[vo štvrtok o] LT';
	                case 5:
	                    return '[v piatok o] LT';
	                case 6:
	                    return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulú nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[minulý] dddd [o] LT';
	                case 3:
	                    return '[minulú stredu o] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [o] LT';
	                case 6:
	                    return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'pred %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sk;

	}));

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovenian (sl)
	//! author : Robert Sedovšek : https://github.com/sedovsek

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	        case 'm':
	            return withoutSuffix ? 'ena minuta' : 'eno minuto';
	        case 'mm':
	            if (number === 1) {
	                result += withoutSuffix ? 'minuta' : 'minuto';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	            } else {
	                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'ena ura' : 'eno uro';
	        case 'hh':
	            if (number === 1) {
	                result += withoutSuffix ? 'ura' : 'uro';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'uri' : 'urama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'ure' : 'urami';
	            } else {
	                result += withoutSuffix || isFuture ? 'ur' : 'urami';
	            }
	            return result;
	        case 'd':
	            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	        case 'dd':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	            } else {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	            }
	            return result;
	        case 'M':
	            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	        case 'MM':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	            } else {
	                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	            }
	            return result;
	        case 'y':
	            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	        case 'yy':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'leto' : 'letom';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'leta' : 'leti';
	            } else {
	                result += withoutSuffix || isFuture ? 'let' : 'leti';
	            }
	            return result;
	        }
	    }

	    var sl = moment.defineLocale('sl', {
	        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danes ob] LT',
	            nextDay  : '[jutri ob] LT',

	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v] [nedeljo] [ob] LT';
	                case 3:
	                    return '[v] [sredo] [ob] LT';
	                case 6:
	                    return '[v] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay  : '[včeraj ob] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[prejšnjo] [nedeljo] [ob] LT';
	                case 3:
	                    return '[prejšnjo] [sredo] [ob] LT';
	                case 6:
	                    return '[prejšnjo] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'čez %s',
	            past   : 'pred %s',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : processRelativeTime,
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sl;

	}));

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Albanian (sq)
	//! author : Flakërim Ismani : https://github.com/flakerimi
	//! author: Menelion Elensúle: https://github.com/Oire (tests)
	//! author : Oerd Cukalla : https://github.com/oerd (fixes)

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sq = moment.defineLocale('sq', {
	        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
	        weekdaysParseExact : true,
	        meridiemParse: /PD|MD/,
	        isPM: function (input) {
	            return input.charAt(0) === 'M';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Sot në] LT',
	            nextDay : '[Nesër në] LT',
	            nextWeek : 'dddd [në] LT',
	            lastDay : '[Dje në] LT',
	            lastWeek : 'dddd [e kaluar në] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'në %s',
	            past : '%s më parë',
	            s : 'disa sekonda',
	            m : 'një minutë',
	            mm : '%d minuta',
	            h : 'një orë',
	            hh : '%d orë',
	            d : 'një ditë',
	            dd : '%d ditë',
	            M : 'një muaj',
	            MM : '%d muaj',
	            y : 'një vit',
	            yy : '%d vite'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sq;

	}));

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-latin (sr)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr = moment.defineLocale('sr', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedelju] [u] LT';
	                case 3:
	                    return '[u] [sredu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedelje] [u] LT',
	                    '[prošlog] [ponedeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'pre %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr;

	}));

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-cyrillic (sr-cyrl)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr_cyrl = moment.defineLocale('sr-cyrl', {
	        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
	        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
	        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
	        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[у] [недељу] [у] LT';
	                case 3:
	                    return '[у] [среду] [у] LT';
	                case 6:
	                    return '[у] [суботу] [у] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[у] dddd [у] LT';
	                }
	            },
	            lastDay  : '[јуче у] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[прошле] [недеље] [у] LT',
	                    '[прошлог] [понедељка] [у] LT',
	                    '[прошлог] [уторка] [у] LT',
	                    '[прошле] [среде] [у] LT',
	                    '[прошлог] [четвртка] [у] LT',
	                    '[прошлог] [петка] [у] LT',
	                    '[прошле] [суботе] [у] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past   : 'пре %s',
	            s      : 'неколико секунди',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'дан',
	            dd     : translator.translate,
	            M      : 'месец',
	            MM     : translator.translate,
	            y      : 'годину',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr_cyrl;

	}));

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : siSwati (ss)
	//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    var ss = moment.defineLocale('ss', {
	        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
	        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
	        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
	        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
	        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Namuhla nga] LT',
	            nextDay : '[Kusasa nga] LT',
	            nextWeek : 'dddd [nga] LT',
	            lastDay : '[Itolo nga] LT',
	            lastWeek : 'dddd [leliphelile] [nga] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'nga %s',
	            past : 'wenteka nga %s',
	            s : 'emizuzwana lomcane',
	            m : 'umzuzu',
	            mm : '%d emizuzu',
	            h : 'lihora',
	            hh : '%d emahora',
	            d : 'lilanga',
	            dd : '%d emalanga',
	            M : 'inyanga',
	            MM : '%d tinyanga',
	            y : 'umnyaka',
	            yy : '%d iminyaka'
	        },
	        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'ekuseni';
	            } else if (hours < 15) {
	                return 'emini';
	            } else if (hours < 19) {
	                return 'entsambama';
	            } else {
	                return 'ebusuku';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ekuseni') {
	                return hour;
	            } else if (meridiem === 'emini') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
	                if (hour === 0) {
	                    return 0;
	                }
	                return hour + 12;
	            }
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : '%d',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ss;

	}));

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swedish (sv)
	//! author : Jens Alm : https://github.com/ulmus

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sv = moment.defineLocale('sv', {
	        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [kl.] HH:mm',
	            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: '[På] dddd LT',
	            lastWeek: '[I] dddd[s] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'för %s sedan',
	            s : 'några sekunder',
	            m : 'en minut',
	            mm : '%d minuter',
	            h : 'en timme',
	            hh : '%d timmar',
	            d : 'en dag',
	            dd : '%d dagar',
	            M : 'en månad',
	            MM : '%d månader',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}(e|a)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'e' :
	                (b === 1) ? 'a' :
	                (b === 2) ? 'a' :
	                (b === 3) ? 'e' : 'e';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sv;

	}));

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swahili (sw)
	//! author : Fahad Kassim : https://github.com/fadsel

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sw = moment.defineLocale('sw', {
	        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
	        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
	        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[leo saa] LT',
	            nextDay : '[kesho saa] LT',
	            nextWeek : '[wiki ijayo] dddd [saat] LT',
	            lastDay : '[jana] LT',
	            lastWeek : '[wiki iliyopita] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s baadaye',
	            past : 'tokea %s',
	            s : 'hivi punde',
	            m : 'dakika moja',
	            mm : 'dakika %d',
	            h : 'saa limoja',
	            hh : 'masaa %d',
	            d : 'siku moja',
	            dd : 'masiku %d',
	            M : 'mwezi mmoja',
	            MM : 'miezi %d',
	            y : 'mwaka mmoja',
	            yy : 'miaka %d'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sw;

	}));

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tamil (ta)
	//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '௧',
	        '2': '௨',
	        '3': '௩',
	        '4': '௪',
	        '5': '௫',
	        '6': '௬',
	        '7': '௭',
	        '8': '௮',
	        '9': '௯',
	        '0': '௦'
	    }, numberMap = {
	        '௧': '1',
	        '௨': '2',
	        '௩': '3',
	        '௪': '4',
	        '௫': '5',
	        '௬': '6',
	        '௭': '7',
	        '௮': '8',
	        '௯': '9',
	        '௦': '0'
	    };

	    var ta = moment.defineLocale('ta', {
	        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, HH:mm',
	            LLLL : 'dddd, D MMMM YYYY, HH:mm'
	        },
	        calendar : {
	            sameDay : '[இன்று] LT',
	            nextDay : '[நாளை] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[நேற்று] LT',
	            lastWeek : '[கடந்த வாரம்] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s இல்',
	            past : '%s முன்',
	            s : 'ஒரு சில விநாடிகள்',
	            m : 'ஒரு நிமிடம்',
	            mm : '%d நிமிடங்கள்',
	            h : 'ஒரு மணி நேரம்',
	            hh : '%d மணி நேரம்',
	            d : 'ஒரு நாள்',
	            dd : '%d நாட்கள்',
	            M : 'ஒரு மாதம்',
	            MM : '%d மாதங்கள்',
	            y : 'ஒரு வருடம்',
	            yy : '%d ஆண்டுகள்'
	        },
	        ordinalParse: /\d{1,2}வது/,
	        ordinal : function (number) {
	            return number + 'வது';
	        },
	        preparse: function (string) {
	            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // refer http://ta.wikipedia.org/s/1er1
	        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 2) {
	                return ' யாமம்';
	            } else if (hour < 6) {
	                return ' வைகறை';  // வைகறை
	            } else if (hour < 10) {
	                return ' காலை'; // காலை
	            } else if (hour < 14) {
	                return ' நண்பகல்'; // நண்பகல்
	            } else if (hour < 18) {
	                return ' எற்பாடு'; // எற்பாடு
	            } else if (hour < 22) {
	                return ' மாலை'; // மாலை
	            } else {
	                return ' யாமம்';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'யாமம்') {
	                return hour < 2 ? hour : hour + 12;
	            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	                return hour;
	            } else if (meridiem === 'நண்பகல்') {
	                return hour >= 10 ? hour : hour + 12;
	            } else {
	                return hour + 12;
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ta;

	}));

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : telugu (te)
	//! author : Krishna Chaitanya Thota : https://github.com/kcthota

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var te = moment.defineLocale('te', {
	        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
	        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
	        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
	        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[నేడు] LT',
	            nextDay : '[రేపు] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[నిన్న] LT',
	            lastWeek : '[గత] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s లో',
	            past : '%s క్రితం',
	            s : 'కొన్ని క్షణాలు',
	            m : 'ఒక నిమిషం',
	            mm : '%d నిమిషాలు',
	            h : 'ఒక గంట',
	            hh : '%d గంటలు',
	            d : 'ఒక రోజు',
	            dd : '%d రోజులు',
	            M : 'ఒక నెల',
	            MM : '%d నెలలు',
	            y : 'ఒక సంవత్సరం',
	            yy : '%d సంవత్సరాలు'
	        },
	        ordinalParse : /\d{1,2}వ/,
	        ordinal : '%dవ',
	        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'రాత్రి') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ఉదయం') {
	                return hour;
	            } else if (meridiem === 'మధ్యాహ్నం') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'సాయంత్రం') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'రాత్రి';
	            } else if (hour < 10) {
	                return 'ఉదయం';
	            } else if (hour < 17) {
	                return 'మధ్యాహ్నం';
	            } else if (hour < 20) {
	                return 'సాయంత్రం';
	            } else {
	                return 'రాత్రి';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return te;

	}));

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : thai (th)
	//! author : Kridsada Thanabulpong : https://github.com/sirn

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var th = moment.defineLocale('th', {
	        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	        monthsShort : 'มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H นาฬิกา m นาที',
	            LTS : 'H นาฬิกา m นาที s วินาที',
	            L : 'YYYY/MM/DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY เวลา H นาฬิกา m นาที',
	            LLLL : 'วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที'
	        },
	        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	        isPM: function (input) {
	            return input === 'หลังเที่ยง';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ก่อนเที่ยง';
	            } else {
	                return 'หลังเที่ยง';
	            }
	        },
	        calendar : {
	            sameDay : '[วันนี้ เวลา] LT',
	            nextDay : '[พรุ่งนี้ เวลา] LT',
	            nextWeek : 'dddd[หน้า เวลา] LT',
	            lastDay : '[เมื่อวานนี้ เวลา] LT',
	            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'อีก %s',
	            past : '%sที่แล้ว',
	            s : 'ไม่กี่วินาที',
	            m : '1 นาที',
	            mm : '%d นาที',
	            h : '1 ชั่วโมง',
	            hh : '%d ชั่วโมง',
	            d : '1 วัน',
	            dd : '%d วัน',
	            M : '1 เดือน',
	            MM : '%d เดือน',
	            y : '1 ปี',
	            yy : '%d ปี'
	        }
	    });

	    return th;

	}));

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tagalog/Filipino (tl-ph)
	//! author : Dan Hagman

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tl_ph = moment.defineLocale('tl-ph', {
	        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'MM/D/YYYY',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY HH:mm',
	            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Ngayon sa] LT',
	            nextDay: '[Bukas sa] LT',
	            nextWeek: 'dddd [sa] LT',
	            lastDay: '[Kahapon sa] LT',
	            lastWeek: 'dddd [huling linggo] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'sa loob ng %s',
	            past : '%s ang nakalipas',
	            s : 'ilang segundo',
	            m : 'isang minuto',
	            mm : '%d minuto',
	            h : 'isang oras',
	            hh : '%d oras',
	            d : 'isang araw',
	            dd : '%d araw',
	            M : 'isang buwan',
	            MM : '%d buwan',
	            y : 'isang taon',
	            yy : '%d taon'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return tl_ph;

	}));

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Klingon (tlh)
	//! author : Dominika Kruk : https://github.com/amaranthrose

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

	    function translateFuture(output) {
	        var time = output;
	        time = (output.indexOf('jaj') !== -1) ?
	    	time.slice(0, -3) + 'leS' :
	    	(output.indexOf('jar') !== -1) ?
	    	time.slice(0, -3) + 'waQ' :
	    	(output.indexOf('DIS') !== -1) ?
	    	time.slice(0, -3) + 'nem' :
	    	time + ' pIq';
	        return time;
	    }

	    function translatePast(output) {
	        var time = output;
	        time = (output.indexOf('jaj') !== -1) ?
	    	time.slice(0, -3) + 'Hu’' :
	    	(output.indexOf('jar') !== -1) ?
	    	time.slice(0, -3) + 'wen' :
	    	(output.indexOf('DIS') !== -1) ?
	    	time.slice(0, -3) + 'ben' :
	    	time + ' ret';
	        return time;
	    }

	    function translate(number, withoutSuffix, string, isFuture) {
	        var numberNoun = numberAsNoun(number);
	        switch (string) {
	            case 'mm':
	                return numberNoun + ' tup';
	            case 'hh':
	                return numberNoun + ' rep';
	            case 'dd':
	                return numberNoun + ' jaj';
	            case 'MM':
	                return numberNoun + ' jar';
	            case 'yy':
	                return numberNoun + ' DIS';
	        }
	    }

	    function numberAsNoun(number) {
	        var hundred = Math.floor((number % 1000) / 100),
	    	ten = Math.floor((number % 100) / 10),
	    	one = number % 10,
	    	word = '';
	        if (hundred > 0) {
	            word += numbersNouns[hundred] + 'vatlh';
	        }
	        if (ten > 0) {
	            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
	        }
	        if (one > 0) {
	            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
	        }
	        return (word === '') ? 'pagh' : word;
	    }

	    var tlh = moment.defineLocale('tlh', {
	        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
	        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[DaHjaj] LT',
	            nextDay: '[wa’leS] LT',
	            nextWeek: 'LLL',
	            lastDay: '[wa’Hu’] LT',
	            lastWeek: 'LLL',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : translateFuture,
	            past : translatePast,
	            s : 'puS lup',
	            m : 'wa’ tup',
	            mm : translate,
	            h : 'wa’ rep',
	            hh : translate,
	            d : 'wa’ jaj',
	            dd : translate,
	            M : 'wa’ jar',
	            MM : translate,
	            y : 'wa’ DIS',
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return tlh;

	}));

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : turkish (tr)
	//! authors : Erhan Gundogan : https://github.com/erhangundogan,
	//!           Burak Yiğit Kaya: https://github.com/BYK

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        1: '\'inci',
	        5: '\'inci',
	        8: '\'inci',
	        70: '\'inci',
	        80: '\'inci',
	        2: '\'nci',
	        7: '\'nci',
	        20: '\'nci',
	        50: '\'nci',
	        3: '\'üncü',
	        4: '\'üncü',
	        100: '\'üncü',
	        6: '\'ncı',
	        9: '\'uncu',
	        10: '\'uncu',
	        30: '\'uncu',
	        60: '\'ıncı',
	        90: '\'ıncı'
	    };

	    var tr = moment.defineLocale('tr', {
	        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[yarın saat] LT',
	            nextWeek : '[haftaya] dddd [saat] LT',
	            lastDay : '[dün] LT',
	            lastWeek : '[geçen hafta] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s önce',
	            s : 'birkaç saniye',
	            m : 'bir dakika',
	            mm : '%d dakika',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir yıl',
	            yy : '%d yıl'
	        },
	        ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '\'ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tr;

	}));

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : talossan (tzl)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v with the help of Iustì Canun

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
	    // This is currently too difficult (maybe even impossible) to add.
	    var tzl = moment.defineLocale('tzl', {
	        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM [dallas] YYYY',
	            LLL : 'D. MMMM [dallas] YYYY HH.mm',
	            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
	        },
	        meridiemParse: /d\'o|d\'a/i,
	        isPM : function (input) {
	            return 'd\'o' === input.toLowerCase();
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'd\'o' : 'D\'O';
	            } else {
	                return isLower ? 'd\'a' : 'D\'A';
	            }
	        },
	        calendar : {
	            sameDay : '[oxhi à] LT',
	            nextDay : '[demà à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[ieiri à] LT',
	            lastWeek : '[sür el] dddd [lasteu à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'osprei %s',
	            past : 'ja%s',
	            s : processRelativeTime,
	            m : processRelativeTime,
	            mm : processRelativeTime,
	            h : processRelativeTime,
	            hh : processRelativeTime,
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['viensas secunds', '\'iensas secunds'],
	            'm': ['\'n míut', '\'iens míut'],
	            'mm': [number + ' míuts', '' + number + ' míuts'],
	            'h': ['\'n þora', '\'iensa þora'],
	            'hh': [number + ' þoras', '' + number + ' þoras'],
	            'd': ['\'n ziua', '\'iensa ziua'],
	            'dd': [number + ' ziuas', '' + number + ' ziuas'],
	            'M': ['\'n mes', '\'iens mes'],
	            'MM': [number + ' mesen', '' + number + ' mesen'],
	            'y': ['\'n ar', '\'iens ar'],
	            'yy': [number + ' ars', '' + number + ' ars']
	        };
	        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
	    }

	    return tzl;

	}));

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt (tzm)
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tzm = moment.defineLocale('tzm', {
	        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	            past : 'ⵢⴰⵏ %s',
	            s : 'ⵉⵎⵉⴽ',
	            m : 'ⵎⵉⵏⵓⴺ',
	            mm : '%d ⵎⵉⵏⵓⴺ',
	            h : 'ⵙⴰⵄⴰ',
	            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	            d : 'ⴰⵙⵙ',
	            dd : '%d oⵙⵙⴰⵏ',
	            M : 'ⴰⵢoⵓⵔ',
	            MM : '%d ⵉⵢⵢⵉⵔⵏ',
	            y : 'ⴰⵙⴳⴰⵙ',
	            yy : '%d ⵉⵙⴳⴰⵙⵏ'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm;

	}));

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tzm_latn = moment.defineLocale('tzm-latn', {
	        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[asdkh g] LT',
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dadkh s yan %s',
	            past : 'yan %s',
	            s : 'imik',
	            m : 'minuḍ',
	            mm : '%d minuḍ',
	            h : 'saɛa',
	            hh : '%d tassaɛin',
	            d : 'ass',
	            dd : '%d ossan',
	            M : 'ayowr',
	            MM : '%d iyyirn',
	            y : 'asgas',
	            yy : '%d isgasn'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm_latn;

	}));

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : ukrainian (uk)
	//! author : zemlanin : https://github.com/zemlanin
	//! Author : Menelion Elensúle : https://github.com/Oire

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
	            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        },
	        nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	            'accusative' :
	            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	                'genitive' :
	                'nominative');
	        return weekdays[nounCase][m.day()];
	    }
	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }

	    var uk = moment.defineLocale('uk', {
	        months : {
	            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
	            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
	        },
	        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY р.',
	            LLL : 'D MMMM YYYY р., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
	        },
	        calendar : {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return processHoursFunction('[Минулої] dddd [').call(this);
	                case 1:
	                case 2:
	                case 4:
	                    return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past : '%s тому',
	            s : 'декілька секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'годину',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'місяць',
	            MM : relativeTimeWithPlural,
	            y : 'рік',
	            yy : relativeTimeWithPlural
	        },
	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	        meridiemParse: /ночі|ранку|дня|вечора/,
	        isPM: function (input) {
	            return /^(дня|вечора)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночі';
	            } else if (hour < 12) {
	                return 'ранку';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечора';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return uk;

	}));

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : uzbek (uz)
	//! author : Sardor Muminov : https://github.com/muminoff

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var uz = moment.defineLocale('uz', {
	        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
	        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бугун соат] LT [да]',
	            nextDay : '[Эртага] LT [да]',
	            nextWeek : 'dddd [куни соат] LT [да]',
	            lastDay : '[Кеча соат] LT [да]',
	            lastWeek : '[Утган] dddd [куни соат] LT [да]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'Якин %s ичида',
	            past : 'Бир неча %s олдин',
	            s : 'фурсат',
	            m : 'бир дакика',
	            mm : '%d дакика',
	            h : 'бир соат',
	            hh : '%d соат',
	            d : 'бир кун',
	            dd : '%d кун',
	            M : 'бир ой',
	            MM : '%d ой',
	            y : 'бир йил',
	            yy : '%d йил'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return uz;

	}));

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : vietnamese (vi)
	//! author : Bang Nguyen : https://github.com/bangnk

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var vi = moment.defineLocale('vi', {
	        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysParseExact : true,
	        meridiemParse: /sa|ch/i,
	        isPM : function (input) {
	            return /^ch$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'sa' : 'SA';
	            } else {
	                return isLower ? 'ch' : 'CH';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM [năm] YYYY',
	            LLL : 'D MMMM [năm] YYYY HH:mm',
	            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
	            l : 'DD/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hôm nay lúc] LT',
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s tới',
	            past : '%s trước',
	            s : 'vài giây',
	            m : 'một phút',
	            mm : '%d phút',
	            h : 'một giờ',
	            hh : '%d giờ',
	            d : 'một ngày',
	            dd : '%d ngày',
	            M : 'một tháng',
	            MM : '%d tháng',
	            y : 'một năm',
	            yy : '%d năm'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return vi;

	}));

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : pseudo (x-pseudo)
	//! author : Andrew Hood : https://github.com/andrewhood125

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var x_pseudo = moment.defineLocale('x-pseudo', {
	        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
	        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
	        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
	        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[T~ódá~ý át] LT',
	            nextDay : '[T~ómó~rró~w át] LT',
	            nextWeek : 'dddd [át] LT',
	            lastDay : '[Ý~ést~érdá~ý át] LT',
	            lastWeek : '[L~ást] dddd [át] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'í~ñ %s',
	            past : '%s á~gó',
	            s : 'á ~féw ~sécó~ñds',
	            m : 'á ~míñ~úté',
	            mm : '%d m~íñú~tés',
	            h : 'á~ñ hó~úr',
	            hh : '%d h~óúrs',
	            d : 'á ~dáý',
	            dd : '%d d~áýs',
	            M : 'á ~móñ~th',
	            MM : '%d m~óñt~hs',
	            y : 'á ~ýéár',
	            yy : '%d ý~éárs'
	        },
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return x_pseudo;

	}));

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chinese (zh-cn)
	//! author : suupic : https://github.com/suupic
	//! author : Zeno Zeng : https://github.com/zenozeng

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var zh_cn = moment.defineLocale('zh-cn', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah点mm分',
	            LTS : 'Ah点m分s秒',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah点mm分',
	            LLLL : 'YYYY年MMMD日ddddAh点mm分',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah点mm分',
	            llll : 'YYYY年MMMD日ddddAh点mm分'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' ||
	                    meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            } else {
	                // '中午'
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : function () {
	                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
	            },
	            nextDay : function () {
	                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
	            },
	            lastDay : function () {
	                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
	            },
	            nextWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.diff(startOfWeek, 'days') >= 7 ? '[下]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            lastWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            sameElse : 'LL'
	        },
	        ordinalParse: /\d{1,2}(日|月|周)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            case 'M':
	                return number + '月';
	            case 'w':
	            case 'W':
	                return number + '周';
	            default:
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s内',
	            past : '%s前',
	            s : '几秒',
	            m : '1 分钟',
	            mm : '%d 分钟',
	            h : '1 小时',
	            hh : '%d 小时',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 个月',
	            MM : '%d 个月',
	            y : '1 年',
	            yy : '%d 年'
	        },
	        week : {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return zh_cn;

	}));

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : traditional chinese (zh-tw)
	//! author : Ben : https://github.com/ben-lin

	;(function (global, factory) {
	    true ? factory(__webpack_require__(346)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var zh_tw = moment.defineLocale('zh-tw', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah點mm分',
	            LTS : 'Ah點m分s秒',
	            L : 'YYYY年MMMD日',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah點mm分',
	            LLLL : 'YYYY年MMMD日ddddAh點mm分',
	            l : 'YYYY年MMMD日',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah點mm分',
	            llll : 'YYYY年MMMD日ddddAh點mm分'
	        },
	        meridiemParse: /早上|上午|中午|下午|晚上/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        ordinalParse: /\d{1,2}(日|月|週)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd' :
	            case 'D' :
	            case 'DDD' :
	                return number + '日';
	            case 'M' :
	                return number + '月';
	            case 'w' :
	            case 'W' :
	                return number + '週';
	            default :
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s內',
	            past : '%s前',
	            s : '幾秒',
	            m : '1分鐘',
	            mm : '%d分鐘',
	            h : '1小時',
	            hh : '%d小時',
	            d : '1天',
	            dd : '%d天',
	            M : '1個月',
	            MM : '%d個月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });

	    return zh_tw;

	}));

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3
	//     http://underscorejs.org
	//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	//     Underscore may be freely distributed under the MIT license.

	(function() {

	  // Baseline setup
	  // --------------

	  // Establish the root object, `window` in the browser, or `exports` on the server.
	  var root = this;

	  // Save the previous value of the `_` variable.
	  var previousUnderscore = root._;

	  // Save bytes in the minified (but not gzipped) version:
	  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

	  // Create quick reference variables for speed access to core prototypes.
	  var
	    push             = ArrayProto.push,
	    slice            = ArrayProto.slice,
	    toString         = ObjProto.toString,
	    hasOwnProperty   = ObjProto.hasOwnProperty;

	  // All **ECMAScript 5** native function implementations that we hope to use
	  // are declared here.
	  var
	    nativeIsArray      = Array.isArray,
	    nativeKeys         = Object.keys,
	    nativeBind         = FuncProto.bind,
	    nativeCreate       = Object.create;

	  // Naked function reference for surrogate-prototype-swapping.
	  var Ctor = function(){};

	  // Create a safe reference to the Underscore object for use below.
	  var _ = function(obj) {
	    if (obj instanceof _) return obj;
	    if (!(this instanceof _)) return new _(obj);
	    this._wrapped = obj;
	  };

	  // Export the Underscore object for **Node.js**, with
	  // backwards-compatibility for the old `require()` API. If we're in
	  // the browser, add `_` as a global object.
	  if (true) {
	    if (typeof module !== 'undefined' && module.exports) {
	      exports = module.exports = _;
	    }
	    exports._ = _;
	  } else {
	    root._ = _;
	  }

	  // Current version.
	  _.VERSION = '1.8.3';

	  // Internal function that returns an efficient (for current engines) version
	  // of the passed-in callback, to be repeatedly applied in other Underscore
	  // functions.
	  var optimizeCb = function(func, context, argCount) {
	    if (context === void 0) return func;
	    switch (argCount == null ? 3 : argCount) {
	      case 1: return function(value) {
	        return func.call(context, value);
	      };
	      case 2: return function(value, other) {
	        return func.call(context, value, other);
	      };
	      case 3: return function(value, index, collection) {
	        return func.call(context, value, index, collection);
	      };
	      case 4: return function(accumulator, value, index, collection) {
	        return func.call(context, accumulator, value, index, collection);
	      };
	    }
	    return function() {
	      return func.apply(context, arguments);
	    };
	  };

	  // A mostly-internal function to generate callbacks that can be applied
	  // to each element in a collection, returning the desired result — either
	  // identity, an arbitrary callback, a property matcher, or a property accessor.
	  var cb = function(value, context, argCount) {
	    if (value == null) return _.identity;
	    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
	    if (_.isObject(value)) return _.matcher(value);
	    return _.property(value);
	  };
	  _.iteratee = function(value, context) {
	    return cb(value, context, Infinity);
	  };

	  // An internal function for creating assigner functions.
	  var createAssigner = function(keysFunc, undefinedOnly) {
	    return function(obj) {
	      var length = arguments.length;
	      if (length < 2 || obj == null) return obj;
	      for (var index = 1; index < length; index++) {
	        var source = arguments[index],
	            keys = keysFunc(source),
	            l = keys.length;
	        for (var i = 0; i < l; i++) {
	          var key = keys[i];
	          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
	        }
	      }
	      return obj;
	    };
	  };

	  // An internal function for creating a new object that inherits from another.
	  var baseCreate = function(prototype) {
	    if (!_.isObject(prototype)) return {};
	    if (nativeCreate) return nativeCreate(prototype);
	    Ctor.prototype = prototype;
	    var result = new Ctor;
	    Ctor.prototype = null;
	    return result;
	  };

	  var property = function(key) {
	    return function(obj) {
	      return obj == null ? void 0 : obj[key];
	    };
	  };

	  // Helper for collection methods to determine whether a collection
	  // should be iterated as an array or as an object
	  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
	  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
	  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
	  var getLength = property('length');
	  var isArrayLike = function(collection) {
	    var length = getLength(collection);
	    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
	  };

	  // Collection Functions
	  // --------------------

	  // The cornerstone, an `each` implementation, aka `forEach`.
	  // Handles raw objects in addition to array-likes. Treats all
	  // sparse array-likes as if they were dense.
	  _.each = _.forEach = function(obj, iteratee, context) {
	    iteratee = optimizeCb(iteratee, context);
	    var i, length;
	    if (isArrayLike(obj)) {
	      for (i = 0, length = obj.length; i < length; i++) {
	        iteratee(obj[i], i, obj);
	      }
	    } else {
	      var keys = _.keys(obj);
	      for (i = 0, length = keys.length; i < length; i++) {
	        iteratee(obj[keys[i]], keys[i], obj);
	      }
	    }
	    return obj;
	  };

	  // Return the results of applying the iteratee to each element.
	  _.map = _.collect = function(obj, iteratee, context) {
	    iteratee = cb(iteratee, context);
	    var keys = !isArrayLike(obj) && _.keys(obj),
	        length = (keys || obj).length,
	        results = Array(length);
	    for (var index = 0; index < length; index++) {
	      var currentKey = keys ? keys[index] : index;
	      results[index] = iteratee(obj[currentKey], currentKey, obj);
	    }
	    return results;
	  };

	  // Create a reducing function iterating left or right.
	  function createReduce(dir) {
	    // Optimized iterator function as using arguments.length
	    // in the main function will deoptimize the, see #1991.
	    function iterator(obj, iteratee, memo, keys, index, length) {
	      for (; index >= 0 && index < length; index += dir) {
	        var currentKey = keys ? keys[index] : index;
	        memo = iteratee(memo, obj[currentKey], currentKey, obj);
	      }
	      return memo;
	    }

	    return function(obj, iteratee, memo, context) {
	      iteratee = optimizeCb(iteratee, context, 4);
	      var keys = !isArrayLike(obj) && _.keys(obj),
	          length = (keys || obj).length,
	          index = dir > 0 ? 0 : length - 1;
	      // Determine the initial value if none is provided.
	      if (arguments.length < 3) {
	        memo = obj[keys ? keys[index] : index];
	        index += dir;
	      }
	      return iterator(obj, iteratee, memo, keys, index, length);
	    };
	  }

	  // **Reduce** builds up a single result from a list of values, aka `inject`,
	  // or `foldl`.
	  _.reduce = _.foldl = _.inject = createReduce(1);

	  // The right-associative version of reduce, also known as `foldr`.
	  _.reduceRight = _.foldr = createReduce(-1);

	  // Return the first value which passes a truth test. Aliased as `detect`.
	  _.find = _.detect = function(obj, predicate, context) {
	    var key;
	    if (isArrayLike(obj)) {
	      key = _.findIndex(obj, predicate, context);
	    } else {
	      key = _.findKey(obj, predicate, context);
	    }
	    if (key !== void 0 && key !== -1) return obj[key];
	  };

	  // Return all the elements that pass a truth test.
	  // Aliased as `select`.
	  _.filter = _.select = function(obj, predicate, context) {
	    var results = [];
	    predicate = cb(predicate, context);
	    _.each(obj, function(value, index, list) {
	      if (predicate(value, index, list)) results.push(value);
	    });
	    return results;
	  };

	  // Return all the elements for which a truth test fails.
	  _.reject = function(obj, predicate, context) {
	    return _.filter(obj, _.negate(cb(predicate)), context);
	  };

	  // Determine whether all of the elements match a truth test.
	  // Aliased as `all`.
	  _.every = _.all = function(obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var keys = !isArrayLike(obj) && _.keys(obj),
	        length = (keys || obj).length;
	    for (var index = 0; index < length; index++) {
	      var currentKey = keys ? keys[index] : index;
	      if (!predicate(obj[currentKey], currentKey, obj)) return false;
	    }
	    return true;
	  };

	  // Determine if at least one element in the object matches a truth test.
	  // Aliased as `any`.
	  _.some = _.any = function(obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var keys = !isArrayLike(obj) && _.keys(obj),
	        length = (keys || obj).length;
	    for (var index = 0; index < length; index++) {
	      var currentKey = keys ? keys[index] : index;
	      if (predicate(obj[currentKey], currentKey, obj)) return true;
	    }
	    return false;
	  };

	  // Determine if the array or object contains a given item (using `===`).
	  // Aliased as `includes` and `include`.
	  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
	    if (!isArrayLike(obj)) obj = _.values(obj);
	    if (typeof fromIndex != 'number' || guard) fromIndex = 0;
	    return _.indexOf(obj, item, fromIndex) >= 0;
	  };

	  // Invoke a method (with arguments) on every item in a collection.
	  _.invoke = function(obj, method) {
	    var args = slice.call(arguments, 2);
	    var isFunc = _.isFunction(method);
	    return _.map(obj, function(value) {
	      var func = isFunc ? method : value[method];
	      return func == null ? func : func.apply(value, args);
	    });
	  };

	  // Convenience version of a common use case of `map`: fetching a property.
	  _.pluck = function(obj, key) {
	    return _.map(obj, _.property(key));
	  };

	  // Convenience version of a common use case of `filter`: selecting only objects
	  // containing specific `key:value` pairs.
	  _.where = function(obj, attrs) {
	    return _.filter(obj, _.matcher(attrs));
	  };

	  // Convenience version of a common use case of `find`: getting the first object
	  // containing specific `key:value` pairs.
	  _.findWhere = function(obj, attrs) {
	    return _.find(obj, _.matcher(attrs));
	  };

	  // Return the maximum element (or element-based computation).
	  _.max = function(obj, iteratee, context) {
	    var result = -Infinity, lastComputed = -Infinity,
	        value, computed;
	    if (iteratee == null && obj != null) {
	      obj = isArrayLike(obj) ? obj : _.values(obj);
	      for (var i = 0, length = obj.length; i < length; i++) {
	        value = obj[i];
	        if (value > result) {
	          result = value;
	        }
	      }
	    } else {
	      iteratee = cb(iteratee, context);
	      _.each(obj, function(value, index, list) {
	        computed = iteratee(value, index, list);
	        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
	          result = value;
	          lastComputed = computed;
	        }
	      });
	    }
	    return result;
	  };

	  // Return the minimum element (or element-based computation).
	  _.min = function(obj, iteratee, context) {
	    var result = Infinity, lastComputed = Infinity,
	        value, computed;
	    if (iteratee == null && obj != null) {
	      obj = isArrayLike(obj) ? obj : _.values(obj);
	      for (var i = 0, length = obj.length; i < length; i++) {
	        value = obj[i];
	        if (value < result) {
	          result = value;
	        }
	      }
	    } else {
	      iteratee = cb(iteratee, context);
	      _.each(obj, function(value, index, list) {
	        computed = iteratee(value, index, list);
	        if (computed < lastComputed || computed === Infinity && result === Infinity) {
	          result = value;
	          lastComputed = computed;
	        }
	      });
	    }
	    return result;
	  };

	  // Shuffle a collection, using the modern version of the
	  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
	  _.shuffle = function(obj) {
	    var set = isArrayLike(obj) ? obj : _.values(obj);
	    var length = set.length;
	    var shuffled = Array(length);
	    for (var index = 0, rand; index < length; index++) {
	      rand = _.random(0, index);
	      if (rand !== index) shuffled[index] = shuffled[rand];
	      shuffled[rand] = set[index];
	    }
	    return shuffled;
	  };

	  // Sample **n** random values from a collection.
	  // If **n** is not specified, returns a single random element.
	  // The internal `guard` argument allows it to work with `map`.
	  _.sample = function(obj, n, guard) {
	    if (n == null || guard) {
	      if (!isArrayLike(obj)) obj = _.values(obj);
	      return obj[_.random(obj.length - 1)];
	    }
	    return _.shuffle(obj).slice(0, Math.max(0, n));
	  };

	  // Sort the object's values by a criterion produced by an iteratee.
	  _.sortBy = function(obj, iteratee, context) {
	    iteratee = cb(iteratee, context);
	    return _.pluck(_.map(obj, function(value, index, list) {
	      return {
	        value: value,
	        index: index,
	        criteria: iteratee(value, index, list)
	      };
	    }).sort(function(left, right) {
	      var a = left.criteria;
	      var b = right.criteria;
	      if (a !== b) {
	        if (a > b || a === void 0) return 1;
	        if (a < b || b === void 0) return -1;
	      }
	      return left.index - right.index;
	    }), 'value');
	  };

	  // An internal function used for aggregate "group by" operations.
	  var group = function(behavior) {
	    return function(obj, iteratee, context) {
	      var result = {};
	      iteratee = cb(iteratee, context);
	      _.each(obj, function(value, index) {
	        var key = iteratee(value, index, obj);
	        behavior(result, value, key);
	      });
	      return result;
	    };
	  };

	  // Groups the object's values by a criterion. Pass either a string attribute
	  // to group by, or a function that returns the criterion.
	  _.groupBy = group(function(result, value, key) {
	    if (_.has(result, key)) result[key].push(value); else result[key] = [value];
	  });

	  // Indexes the object's values by a criterion, similar to `groupBy`, but for
	  // when you know that your index values will be unique.
	  _.indexBy = group(function(result, value, key) {
	    result[key] = value;
	  });

	  // Counts instances of an object that group by a certain criterion. Pass
	  // either a string attribute to count by, or a function that returns the
	  // criterion.
	  _.countBy = group(function(result, value, key) {
	    if (_.has(result, key)) result[key]++; else result[key] = 1;
	  });

	  // Safely create a real, live array from anything iterable.
	  _.toArray = function(obj) {
	    if (!obj) return [];
	    if (_.isArray(obj)) return slice.call(obj);
	    if (isArrayLike(obj)) return _.map(obj, _.identity);
	    return _.values(obj);
	  };

	  // Return the number of elements in an object.
	  _.size = function(obj) {
	    if (obj == null) return 0;
	    return isArrayLike(obj) ? obj.length : _.keys(obj).length;
	  };

	  // Split a collection into two arrays: one whose elements all satisfy the given
	  // predicate, and one whose elements all do not satisfy the predicate.
	  _.partition = function(obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var pass = [], fail = [];
	    _.each(obj, function(value, key, obj) {
	      (predicate(value, key, obj) ? pass : fail).push(value);
	    });
	    return [pass, fail];
	  };

	  // Array Functions
	  // ---------------

	  // Get the first element of an array. Passing **n** will return the first N
	  // values in the array. Aliased as `head` and `take`. The **guard** check
	  // allows it to work with `_.map`.
	  _.first = _.head = _.take = function(array, n, guard) {
	    if (array == null) return void 0;
	    if (n == null || guard) return array[0];
	    return _.initial(array, array.length - n);
	  };

	  // Returns everything but the last entry of the array. Especially useful on
	  // the arguments object. Passing **n** will return all the values in
	  // the array, excluding the last N.
	  _.initial = function(array, n, guard) {
	    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
	  };

	  // Get the last element of an array. Passing **n** will return the last N
	  // values in the array.
	  _.last = function(array, n, guard) {
	    if (array == null) return void 0;
	    if (n == null || guard) return array[array.length - 1];
	    return _.rest(array, Math.max(0, array.length - n));
	  };

	  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
	  // Especially useful on the arguments object. Passing an **n** will return
	  // the rest N values in the array.
	  _.rest = _.tail = _.drop = function(array, n, guard) {
	    return slice.call(array, n == null || guard ? 1 : n);
	  };

	  // Trim out all falsy values from an array.
	  _.compact = function(array) {
	    return _.filter(array, _.identity);
	  };

	  // Internal implementation of a recursive `flatten` function.
	  var flatten = function(input, shallow, strict, startIndex) {
	    var output = [], idx = 0;
	    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
	      var value = input[i];
	      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
	        //flatten current level of array or arguments object
	        if (!shallow) value = flatten(value, shallow, strict);
	        var j = 0, len = value.length;
	        output.length += len;
	        while (j < len) {
	          output[idx++] = value[j++];
	        }
	      } else if (!strict) {
	        output[idx++] = value;
	      }
	    }
	    return output;
	  };

	  // Flatten out an array, either recursively (by default), or just one level.
	  _.flatten = function(array, shallow) {
	    return flatten(array, shallow, false);
	  };

	  // Return a version of the array that does not contain the specified value(s).
	  _.without = function(array) {
	    return _.difference(array, slice.call(arguments, 1));
	  };

	  // Produce a duplicate-free version of the array. If the array has already
	  // been sorted, you have the option of using a faster algorithm.
	  // Aliased as `unique`.
	  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
	    if (!_.isBoolean(isSorted)) {
	      context = iteratee;
	      iteratee = isSorted;
	      isSorted = false;
	    }
	    if (iteratee != null) iteratee = cb(iteratee, context);
	    var result = [];
	    var seen = [];
	    for (var i = 0, length = getLength(array); i < length; i++) {
	      var value = array[i],
	          computed = iteratee ? iteratee(value, i, array) : value;
	      if (isSorted) {
	        if (!i || seen !== computed) result.push(value);
	        seen = computed;
	      } else if (iteratee) {
	        if (!_.contains(seen, computed)) {
	          seen.push(computed);
	          result.push(value);
	        }
	      } else if (!_.contains(result, value)) {
	        result.push(value);
	      }
	    }
	    return result;
	  };

	  // Produce an array that contains the union: each distinct element from all of
	  // the passed-in arrays.
	  _.union = function() {
	    return _.uniq(flatten(arguments, true, true));
	  };

	  // Produce an array that contains every item shared between all the
	  // passed-in arrays.
	  _.intersection = function(array) {
	    var result = [];
	    var argsLength = arguments.length;
	    for (var i = 0, length = getLength(array); i < length; i++) {
	      var item = array[i];
	      if (_.contains(result, item)) continue;
	      for (var j = 1; j < argsLength; j++) {
	        if (!_.contains(arguments[j], item)) break;
	      }
	      if (j === argsLength) result.push(item);
	    }
	    return result;
	  };

	  // Take the difference between one array and a number of other arrays.
	  // Only the elements present in just the first array will remain.
	  _.difference = function(array) {
	    var rest = flatten(arguments, true, true, 1);
	    return _.filter(array, function(value){
	      return !_.contains(rest, value);
	    });
	  };

	  // Zip together multiple lists into a single array -- elements that share
	  // an index go together.
	  _.zip = function() {
	    return _.unzip(arguments);
	  };

	  // Complement of _.zip. Unzip accepts an array of arrays and groups
	  // each array's elements on shared indices
	  _.unzip = function(array) {
	    var length = array && _.max(array, getLength).length || 0;
	    var result = Array(length);

	    for (var index = 0; index < length; index++) {
	      result[index] = _.pluck(array, index);
	    }
	    return result;
	  };

	  // Converts lists into objects. Pass either a single array of `[key, value]`
	  // pairs, or two parallel arrays of the same length -- one of keys, and one of
	  // the corresponding values.
	  _.object = function(list, values) {
	    var result = {};
	    for (var i = 0, length = getLength(list); i < length; i++) {
	      if (values) {
	        result[list[i]] = values[i];
	      } else {
	        result[list[i][0]] = list[i][1];
	      }
	    }
	    return result;
	  };

	  // Generator function to create the findIndex and findLastIndex functions
	  function createPredicateIndexFinder(dir) {
	    return function(array, predicate, context) {
	      predicate = cb(predicate, context);
	      var length = getLength(array);
	      var index = dir > 0 ? 0 : length - 1;
	      for (; index >= 0 && index < length; index += dir) {
	        if (predicate(array[index], index, array)) return index;
	      }
	      return -1;
	    };
	  }

	  // Returns the first index on an array-like that passes a predicate test
	  _.findIndex = createPredicateIndexFinder(1);
	  _.findLastIndex = createPredicateIndexFinder(-1);

	  // Use a comparator function to figure out the smallest index at which
	  // an object should be inserted so as to maintain order. Uses binary search.
	  _.sortedIndex = function(array, obj, iteratee, context) {
	    iteratee = cb(iteratee, context, 1);
	    var value = iteratee(obj);
	    var low = 0, high = getLength(array);
	    while (low < high) {
	      var mid = Math.floor((low + high) / 2);
	      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
	    }
	    return low;
	  };

	  // Generator function to create the indexOf and lastIndexOf functions
	  function createIndexFinder(dir, predicateFind, sortedIndex) {
	    return function(array, item, idx) {
	      var i = 0, length = getLength(array);
	      if (typeof idx == 'number') {
	        if (dir > 0) {
	            i = idx >= 0 ? idx : Math.max(idx + length, i);
	        } else {
	            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
	        }
	      } else if (sortedIndex && idx && length) {
	        idx = sortedIndex(array, item);
	        return array[idx] === item ? idx : -1;
	      }
	      if (item !== item) {
	        idx = predicateFind(slice.call(array, i, length), _.isNaN);
	        return idx >= 0 ? idx + i : -1;
	      }
	      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
	        if (array[idx] === item) return idx;
	      }
	      return -1;
	    };
	  }

	  // Return the position of the first occurrence of an item in an array,
	  // or -1 if the item is not included in the array.
	  // If the array is large and already in sort order, pass `true`
	  // for **isSorted** to use binary search.
	  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
	  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

	  // Generate an integer Array containing an arithmetic progression. A port of
	  // the native Python `range()` function. See
	  // [the Python documentation](http://docs.python.org/library/functions.html#range).
	  _.range = function(start, stop, step) {
	    if (stop == null) {
	      stop = start || 0;
	      start = 0;
	    }
	    step = step || 1;

	    var length = Math.max(Math.ceil((stop - start) / step), 0);
	    var range = Array(length);

	    for (var idx = 0; idx < length; idx++, start += step) {
	      range[idx] = start;
	    }

	    return range;
	  };

	  // Function (ahem) Functions
	  // ------------------

	  // Determines whether to execute a function as a constructor
	  // or a normal function with the provided arguments
	  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
	    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
	    var self = baseCreate(sourceFunc.prototype);
	    var result = sourceFunc.apply(self, args);
	    if (_.isObject(result)) return result;
	    return self;
	  };

	  // Create a function bound to a given object (assigning `this`, and arguments,
	  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
	  // available.
	  _.bind = function(func, context) {
	    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
	    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
	    var args = slice.call(arguments, 2);
	    var bound = function() {
	      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
	    };
	    return bound;
	  };

	  // Partially apply a function by creating a version that has had some of its
	  // arguments pre-filled, without changing its dynamic `this` context. _ acts
	  // as a placeholder, allowing any combination of arguments to be pre-filled.
	  _.partial = function(func) {
	    var boundArgs = slice.call(arguments, 1);
	    var bound = function() {
	      var position = 0, length = boundArgs.length;
	      var args = Array(length);
	      for (var i = 0; i < length; i++) {
	        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
	      }
	      while (position < arguments.length) args.push(arguments[position++]);
	      return executeBound(func, bound, this, this, args);
	    };
	    return bound;
	  };

	  // Bind a number of an object's methods to that object. Remaining arguments
	  // are the method names to be bound. Useful for ensuring that all callbacks
	  // defined on an object belong to it.
	  _.bindAll = function(obj) {
	    var i, length = arguments.length, key;
	    if (length <= 1) throw new Error('bindAll must be passed function names');
	    for (i = 1; i < length; i++) {
	      key = arguments[i];
	      obj[key] = _.bind(obj[key], obj);
	    }
	    return obj;
	  };

	  // Memoize an expensive function by storing its results.
	  _.memoize = function(func, hasher) {
	    var memoize = function(key) {
	      var cache = memoize.cache;
	      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
	      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
	      return cache[address];
	    };
	    memoize.cache = {};
	    return memoize;
	  };

	  // Delays a function for the given number of milliseconds, and then calls
	  // it with the arguments supplied.
	  _.delay = function(func, wait) {
	    var args = slice.call(arguments, 2);
	    return setTimeout(function(){
	      return func.apply(null, args);
	    }, wait);
	  };

	  // Defers a function, scheduling it to run after the current call stack has
	  // cleared.
	  _.defer = _.partial(_.delay, _, 1);

	  // Returns a function, that, when invoked, will only be triggered at most once
	  // during a given window of time. Normally, the throttled function will run
	  // as much as it can, without ever going more than once per `wait` duration;
	  // but if you'd like to disable the execution on the leading edge, pass
	  // `{leading: false}`. To disable execution on the trailing edge, ditto.
	  _.throttle = function(func, wait, options) {
	    var context, args, result;
	    var timeout = null;
	    var previous = 0;
	    if (!options) options = {};
	    var later = function() {
	      previous = options.leading === false ? 0 : _.now();
	      timeout = null;
	      result = func.apply(context, args);
	      if (!timeout) context = args = null;
	    };
	    return function() {
	      var now = _.now();
	      if (!previous && options.leading === false) previous = now;
	      var remaining = wait - (now - previous);
	      context = this;
	      args = arguments;
	      if (remaining <= 0 || remaining > wait) {
	        if (timeout) {
	          clearTimeout(timeout);
	          timeout = null;
	        }
	        previous = now;
	        result = func.apply(context, args);
	        if (!timeout) context = args = null;
	      } else if (!timeout && options.trailing !== false) {
	        timeout = setTimeout(later, remaining);
	      }
	      return result;
	    };
	  };

	  // Returns a function, that, as long as it continues to be invoked, will not
	  // be triggered. The function will be called after it stops being called for
	  // N milliseconds. If `immediate` is passed, trigger the function on the
	  // leading edge, instead of the trailing.
	  _.debounce = function(func, wait, immediate) {
	    var timeout, args, context, timestamp, result;

	    var later = function() {
	      var last = _.now() - timestamp;

	      if (last < wait && last >= 0) {
	        timeout = setTimeout(later, wait - last);
	      } else {
	        timeout = null;
	        if (!immediate) {
	          result = func.apply(context, args);
	          if (!timeout) context = args = null;
	        }
	      }
	    };

	    return function() {
	      context = this;
	      args = arguments;
	      timestamp = _.now();
	      var callNow = immediate && !timeout;
	      if (!timeout) timeout = setTimeout(later, wait);
	      if (callNow) {
	        result = func.apply(context, args);
	        context = args = null;
	      }

	      return result;
	    };
	  };

	  // Returns the first function passed as an argument to the second,
	  // allowing you to adjust arguments, run code before and after, and
	  // conditionally execute the original function.
	  _.wrap = function(func, wrapper) {
	    return _.partial(wrapper, func);
	  };

	  // Returns a negated version of the passed-in predicate.
	  _.negate = function(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    };
	  };

	  // Returns a function that is the composition of a list of functions, each
	  // consuming the return value of the function that follows.
	  _.compose = function() {
	    var args = arguments;
	    var start = args.length - 1;
	    return function() {
	      var i = start;
	      var result = args[start].apply(this, arguments);
	      while (i--) result = args[i].call(this, result);
	      return result;
	    };
	  };

	  // Returns a function that will only be executed on and after the Nth call.
	  _.after = function(times, func) {
	    return function() {
	      if (--times < 1) {
	        return func.apply(this, arguments);
	      }
	    };
	  };

	  // Returns a function that will only be executed up to (but not including) the Nth call.
	  _.before = function(times, func) {
	    var memo;
	    return function() {
	      if (--times > 0) {
	        memo = func.apply(this, arguments);
	      }
	      if (times <= 1) func = null;
	      return memo;
	    };
	  };

	  // Returns a function that will be executed at most one time, no matter how
	  // often you call it. Useful for lazy initialization.
	  _.once = _.partial(_.before, 2);

	  // Object Functions
	  // ----------------

	  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
	  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
	  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
	                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

	  function collectNonEnumProps(obj, keys) {
	    var nonEnumIdx = nonEnumerableProps.length;
	    var constructor = obj.constructor;
	    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;

	    // Constructor is a special case.
	    var prop = 'constructor';
	    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

	    while (nonEnumIdx--) {
	      prop = nonEnumerableProps[nonEnumIdx];
	      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
	        keys.push(prop);
	      }
	    }
	  }

	  // Retrieve the names of an object's own properties.
	  // Delegates to **ECMAScript 5**'s native `Object.keys`
	  _.keys = function(obj) {
	    if (!_.isObject(obj)) return [];
	    if (nativeKeys) return nativeKeys(obj);
	    var keys = [];
	    for (var key in obj) if (_.has(obj, key)) keys.push(key);
	    // Ahem, IE < 9.
	    if (hasEnumBug) collectNonEnumProps(obj, keys);
	    return keys;
	  };

	  // Retrieve all the property names of an object.
	  _.allKeys = function(obj) {
	    if (!_.isObject(obj)) return [];
	    var keys = [];
	    for (var key in obj) keys.push(key);
	    // Ahem, IE < 9.
	    if (hasEnumBug) collectNonEnumProps(obj, keys);
	    return keys;
	  };

	  // Retrieve the values of an object's properties.
	  _.values = function(obj) {
	    var keys = _.keys(obj);
	    var length = keys.length;
	    var values = Array(length);
	    for (var i = 0; i < length; i++) {
	      values[i] = obj[keys[i]];
	    }
	    return values;
	  };

	  // Returns the results of applying the iteratee to each element of the object
	  // In contrast to _.map it returns an object
	  _.mapObject = function(obj, iteratee, context) {
	    iteratee = cb(iteratee, context);
	    var keys =  _.keys(obj),
	          length = keys.length,
	          results = {},
	          currentKey;
	      for (var index = 0; index < length; index++) {
	        currentKey = keys[index];
	        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
	      }
	      return results;
	  };

	  // Convert an object into a list of `[key, value]` pairs.
	  _.pairs = function(obj) {
	    var keys = _.keys(obj);
	    var length = keys.length;
	    var pairs = Array(length);
	    for (var i = 0; i < length; i++) {
	      pairs[i] = [keys[i], obj[keys[i]]];
	    }
	    return pairs;
	  };

	  // Invert the keys and values of an object. The values must be serializable.
	  _.invert = function(obj) {
	    var result = {};
	    var keys = _.keys(obj);
	    for (var i = 0, length = keys.length; i < length; i++) {
	      result[obj[keys[i]]] = keys[i];
	    }
	    return result;
	  };

	  // Return a sorted list of the function names available on the object.
	  // Aliased as `methods`
	  _.functions = _.methods = function(obj) {
	    var names = [];
	    for (var key in obj) {
	      if (_.isFunction(obj[key])) names.push(key);
	    }
	    return names.sort();
	  };

	  // Extend a given object with all the properties in passed-in object(s).
	  _.extend = createAssigner(_.allKeys);

	  // Assigns a given object with all the own properties in the passed-in object(s)
	  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
	  _.extendOwn = _.assign = createAssigner(_.keys);

	  // Returns the first key on an object that passes a predicate test
	  _.findKey = function(obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var keys = _.keys(obj), key;
	    for (var i = 0, length = keys.length; i < length; i++) {
	      key = keys[i];
	      if (predicate(obj[key], key, obj)) return key;
	    }
	  };

	  // Return a copy of the object only containing the whitelisted properties.
	  _.pick = function(object, oiteratee, context) {
	    var result = {}, obj = object, iteratee, keys;
	    if (obj == null) return result;
	    if (_.isFunction(oiteratee)) {
	      keys = _.allKeys(obj);
	      iteratee = optimizeCb(oiteratee, context);
	    } else {
	      keys = flatten(arguments, false, false, 1);
	      iteratee = function(value, key, obj) { return key in obj; };
	      obj = Object(obj);
	    }
	    for (var i = 0, length = keys.length; i < length; i++) {
	      var key = keys[i];
	      var value = obj[key];
	      if (iteratee(value, key, obj)) result[key] = value;
	    }
	    return result;
	  };

	   // Return a copy of the object without the blacklisted properties.
	  _.omit = function(obj, iteratee, context) {
	    if (_.isFunction(iteratee)) {
	      iteratee = _.negate(iteratee);
	    } else {
	      var keys = _.map(flatten(arguments, false, false, 1), String);
	      iteratee = function(value, key) {
	        return !_.contains(keys, key);
	      };
	    }
	    return _.pick(obj, iteratee, context);
	  };

	  // Fill in a given object with default properties.
	  _.defaults = createAssigner(_.allKeys, true);

	  // Creates an object that inherits from the given prototype object.
	  // If additional properties are provided then they will be added to the
	  // created object.
	  _.create = function(prototype, props) {
	    var result = baseCreate(prototype);
	    if (props) _.extendOwn(result, props);
	    return result;
	  };

	  // Create a (shallow-cloned) duplicate of an object.
	  _.clone = function(obj) {
	    if (!_.isObject(obj)) return obj;
	    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
	  };

	  // Invokes interceptor with the obj, and then returns obj.
	  // The primary purpose of this method is to "tap into" a method chain, in
	  // order to perform operations on intermediate results within the chain.
	  _.tap = function(obj, interceptor) {
	    interceptor(obj);
	    return obj;
	  };

	  // Returns whether an object has a given set of `key:value` pairs.
	  _.isMatch = function(object, attrs) {
	    var keys = _.keys(attrs), length = keys.length;
	    if (object == null) return !length;
	    var obj = Object(object);
	    for (var i = 0; i < length; i++) {
	      var key = keys[i];
	      if (attrs[key] !== obj[key] || !(key in obj)) return false;
	    }
	    return true;
	  };


	  // Internal recursive comparison function for `isEqual`.
	  var eq = function(a, b, aStack, bStack) {
	    // Identical objects are equal. `0 === -0`, but they aren't identical.
	    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
	    if (a === b) return a !== 0 || 1 / a === 1 / b;
	    // A strict comparison is necessary because `null == undefined`.
	    if (a == null || b == null) return a === b;
	    // Unwrap any wrapped objects.
	    if (a instanceof _) a = a._wrapped;
	    if (b instanceof _) b = b._wrapped;
	    // Compare `[[Class]]` names.
	    var className = toString.call(a);
	    if (className !== toString.call(b)) return false;
	    switch (className) {
	      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
	      case '[object RegExp]':
	      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
	      case '[object String]':
	        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
	        // equivalent to `new String("5")`.
	        return '' + a === '' + b;
	      case '[object Number]':
	        // `NaN`s are equivalent, but non-reflexive.
	        // Object(NaN) is equivalent to NaN
	        if (+a !== +a) return +b !== +b;
	        // An `egal` comparison is performed for other numeric values.
	        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
	      case '[object Date]':
	      case '[object Boolean]':
	        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
	        // millisecond representations. Note that invalid dates with millisecond representations
	        // of `NaN` are not equivalent.
	        return +a === +b;
	    }

	    var areArrays = className === '[object Array]';
	    if (!areArrays) {
	      if (typeof a != 'object' || typeof b != 'object') return false;

	      // Objects with different constructors are not equivalent, but `Object`s or `Array`s
	      // from different frames are.
	      var aCtor = a.constructor, bCtor = b.constructor;
	      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
	                               _.isFunction(bCtor) && bCtor instanceof bCtor)
	                          && ('constructor' in a && 'constructor' in b)) {
	        return false;
	      }
	    }
	    // Assume equality for cyclic structures. The algorithm for detecting cyclic
	    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

	    // Initializing stack of traversed objects.
	    // It's done here since we only need them for objects and arrays comparison.
	    aStack = aStack || [];
	    bStack = bStack || [];
	    var length = aStack.length;
	    while (length--) {
	      // Linear search. Performance is inversely proportional to the number of
	      // unique nested structures.
	      if (aStack[length] === a) return bStack[length] === b;
	    }

	    // Add the first object to the stack of traversed objects.
	    aStack.push(a);
	    bStack.push(b);

	    // Recursively compare objects and arrays.
	    if (areArrays) {
	      // Compare array lengths to determine if a deep comparison is necessary.
	      length = a.length;
	      if (length !== b.length) return false;
	      // Deep compare the contents, ignoring non-numeric properties.
	      while (length--) {
	        if (!eq(a[length], b[length], aStack, bStack)) return false;
	      }
	    } else {
	      // Deep compare objects.
	      var keys = _.keys(a), key;
	      length = keys.length;
	      // Ensure that both objects contain the same number of properties before comparing deep equality.
	      if (_.keys(b).length !== length) return false;
	      while (length--) {
	        // Deep compare each member
	        key = keys[length];
	        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
	      }
	    }
	    // Remove the first object from the stack of traversed objects.
	    aStack.pop();
	    bStack.pop();
	    return true;
	  };

	  // Perform a deep comparison to check if two objects are equal.
	  _.isEqual = function(a, b) {
	    return eq(a, b);
	  };

	  // Is a given array, string, or object empty?
	  // An "empty" object has no enumerable own-properties.
	  _.isEmpty = function(obj) {
	    if (obj == null) return true;
	    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
	    return _.keys(obj).length === 0;
	  };

	  // Is a given value a DOM element?
	  _.isElement = function(obj) {
	    return !!(obj && obj.nodeType === 1);
	  };

	  // Is a given value an array?
	  // Delegates to ECMA5's native Array.isArray
	  _.isArray = nativeIsArray || function(obj) {
	    return toString.call(obj) === '[object Array]';
	  };

	  // Is a given variable an object?
	  _.isObject = function(obj) {
	    var type = typeof obj;
	    return type === 'function' || type === 'object' && !!obj;
	  };

	  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
	  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {
	    _['is' + name] = function(obj) {
	      return toString.call(obj) === '[object ' + name + ']';
	    };
	  });

	  // Define a fallback version of the method in browsers (ahem, IE < 9), where
	  // there isn't any inspectable "Arguments" type.
	  if (!_.isArguments(arguments)) {
	    _.isArguments = function(obj) {
	      return _.has(obj, 'callee');
	    };
	  }

	  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
	  // IE 11 (#1621), and in Safari 8 (#1929).
	  if (typeof /./ != 'function' && typeof Int8Array != 'object') {
	    _.isFunction = function(obj) {
	      return typeof obj == 'function' || false;
	    };
	  }

	  // Is a given object a finite number?
	  _.isFinite = function(obj) {
	    return isFinite(obj) && !isNaN(parseFloat(obj));
	  };

	  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
	  _.isNaN = function(obj) {
	    return _.isNumber(obj) && obj !== +obj;
	  };

	  // Is a given value a boolean?
	  _.isBoolean = function(obj) {
	    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
	  };

	  // Is a given value equal to null?
	  _.isNull = function(obj) {
	    return obj === null;
	  };

	  // Is a given variable undefined?
	  _.isUndefined = function(obj) {
	    return obj === void 0;
	  };

	  // Shortcut function for checking if an object has a given property directly
	  // on itself (in other words, not on a prototype).
	  _.has = function(obj, key) {
	    return obj != null && hasOwnProperty.call(obj, key);
	  };

	  // Utility Functions
	  // -----------------

	  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
	  // previous owner. Returns a reference to the Underscore object.
	  _.noConflict = function() {
	    root._ = previousUnderscore;
	    return this;
	  };

	  // Keep the identity function around for default iteratees.
	  _.identity = function(value) {
	    return value;
	  };

	  // Predicate-generating functions. Often useful outside of Underscore.
	  _.constant = function(value) {
	    return function() {
	      return value;
	    };
	  };

	  _.noop = function(){};

	  _.property = property;

	  // Generates a function for a given object that returns a given property.
	  _.propertyOf = function(obj) {
	    return obj == null ? function(){} : function(key) {
	      return obj[key];
	    };
	  };

	  // Returns a predicate for checking whether an object has a given set of
	  // `key:value` pairs.
	  _.matcher = _.matches = function(attrs) {
	    attrs = _.extendOwn({}, attrs);
	    return function(obj) {
	      return _.isMatch(obj, attrs);
	    };
	  };

	  // Run a function **n** times.
	  _.times = function(n, iteratee, context) {
	    var accum = Array(Math.max(0, n));
	    iteratee = optimizeCb(iteratee, context, 1);
	    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
	    return accum;
	  };

	  // Return a random integer between min and max (inclusive).
	  _.random = function(min, max) {
	    if (max == null) {
	      max = min;
	      min = 0;
	    }
	    return min + Math.floor(Math.random() * (max - min + 1));
	  };

	  // A (possibly faster) way to get the current timestamp as an integer.
	  _.now = Date.now || function() {
	    return new Date().getTime();
	  };

	   // List of HTML entities for escaping.
	  var escapeMap = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#x27;',
	    '`': '&#x60;'
	  };
	  var unescapeMap = _.invert(escapeMap);

	  // Functions for escaping and unescaping strings to/from HTML interpolation.
	  var createEscaper = function(map) {
	    var escaper = function(match) {
	      return map[match];
	    };
	    // Regexes for identifying a key that needs to be escaped
	    var source = '(?:' + _.keys(map).join('|') + ')';
	    var testRegexp = RegExp(source);
	    var replaceRegexp = RegExp(source, 'g');
	    return function(string) {
	      string = string == null ? '' : '' + string;
	      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
	    };
	  };
	  _.escape = createEscaper(escapeMap);
	  _.unescape = createEscaper(unescapeMap);

	  // If the value of the named `property` is a function then invoke it with the
	  // `object` as context; otherwise, return it.
	  _.result = function(object, property, fallback) {
	    var value = object == null ? void 0 : object[property];
	    if (value === void 0) {
	      value = fallback;
	    }
	    return _.isFunction(value) ? value.call(object) : value;
	  };

	  // Generate a unique integer id (unique within the entire client session).
	  // Useful for temporary DOM ids.
	  var idCounter = 0;
	  _.uniqueId = function(prefix) {
	    var id = ++idCounter + '';
	    return prefix ? prefix + id : id;
	  };

	  // By default, Underscore uses ERB-style template delimiters, change the
	  // following template settings to use alternative delimiters.
	  _.templateSettings = {
	    evaluate    : /<%([\s\S]+?)%>/g,
	    interpolate : /<%=([\s\S]+?)%>/g,
	    escape      : /<%-([\s\S]+?)%>/g
	  };

	  // When customizing `templateSettings`, if you don't want to define an
	  // interpolation, evaluation or escaping regex, we need one that is
	  // guaranteed not to match.
	  var noMatch = /(.)^/;

	  // Certain characters need to be escaped so that they can be put into a
	  // string literal.
	  var escapes = {
	    "'":      "'",
	    '\\':     '\\',
	    '\r':     'r',
	    '\n':     'n',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

	  var escapeChar = function(match) {
	    return '\\' + escapes[match];
	  };

	  // JavaScript micro-templating, similar to John Resig's implementation.
	  // Underscore templating handles arbitrary delimiters, preserves whitespace,
	  // and correctly escapes quotes within interpolated code.
	  // NB: `oldSettings` only exists for backwards compatibility.
	  _.template = function(text, settings, oldSettings) {
	    if (!settings && oldSettings) settings = oldSettings;
	    settings = _.defaults({}, settings, _.templateSettings);

	    // Combine delimiters into one regular expression via alternation.
	    var matcher = RegExp([
	      (settings.escape || noMatch).source,
	      (settings.interpolate || noMatch).source,
	      (settings.evaluate || noMatch).source
	    ].join('|') + '|$', 'g');

	    // Compile the template source, escaping string literals appropriately.
	    var index = 0;
	    var source = "__p+='";
	    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
	      source += text.slice(index, offset).replace(escaper, escapeChar);
	      index = offset + match.length;

	      if (escape) {
	        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
	      } else if (interpolate) {
	        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
	      } else if (evaluate) {
	        source += "';\n" + evaluate + "\n__p+='";
	      }

	      // Adobe VMs need the match returned to produce the correct offest.
	      return match;
	    });
	    source += "';\n";

	    // If a variable is not specified, place data values in local scope.
	    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

	    source = "var __t,__p='',__j=Array.prototype.join," +
	      "print=function(){__p+=__j.call(arguments,'');};\n" +
	      source + 'return __p;\n';

	    try {
	      var render = new Function(settings.variable || 'obj', '_', source);
	    } catch (e) {
	      e.source = source;
	      throw e;
	    }

	    var template = function(data) {
	      return render.call(this, data, _);
	    };

	    // Provide the compiled source as a convenience for precompilation.
	    var argument = settings.variable || 'obj';
	    template.source = 'function(' + argument + '){\n' + source + '}';

	    return template;
	  };

	  // Add a "chain" function. Start chaining a wrapped Underscore object.
	  _.chain = function(obj) {
	    var instance = _(obj);
	    instance._chain = true;
	    return instance;
	  };

	  // OOP
	  // ---------------
	  // If Underscore is called as a function, it returns a wrapped object that
	  // can be used OO-style. This wrapper holds altered versions of all the
	  // underscore functions. Wrapped objects may be chained.

	  // Helper function to continue chaining intermediate results.
	  var result = function(instance, obj) {
	    return instance._chain ? _(obj).chain() : obj;
	  };

	  // Add your own custom functions to the Underscore object.
	  _.mixin = function(obj) {
	    _.each(_.functions(obj), function(name) {
	      var func = _[name] = obj[name];
	      _.prototype[name] = function() {
	        var args = [this._wrapped];
	        push.apply(args, arguments);
	        return result(this, func.apply(_, args));
	      };
	    });
	  };

	  // Add all of the Underscore functions to the wrapper object.
	  _.mixin(_);

	  // Add all mutator Array functions to the wrapper.
	  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
	    var method = ArrayProto[name];
	    _.prototype[name] = function() {
	      var obj = this._wrapped;
	      method.apply(obj, arguments);
	      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
	      return result(this, obj);
	    };
	  });

	  // Add all accessor Array functions to the wrapper.
	  _.each(['concat', 'join', 'slice'], function(name) {
	    var method = ArrayProto[name];
	    _.prototype[name] = function() {
	      return result(this, method.apply(this._wrapped, arguments));
	    };
	  });

	  // Extracts the result from a wrapped and chained object.
	  _.prototype.value = function() {
	    return this._wrapped;
	  };

	  // Provide unwrapping proxy for some methods used in engine operations
	  // such as arithmetic and JSON stringification.
	  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

	  _.prototype.toString = function() {
	    return '' + this._wrapped;
	  };

	  // AMD registration happens at the end for compatibility with AMD loaders
	  // that may not enforce next-turn semantics on modules. Even though general
	  // practice for AMD registration is to be anonymous, underscore registers
	  // as a named module because, like jQuery, it is a base library that is
	  // popular enough to be bundled in a third party lib, but not be part of
	  // an AMD load request. Those cases could generate an error when an
	  // anonymous define() is called outside of a loader request.
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	}.call(this));


/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	opyright (c) 2015, The Regents of the University of California,
	through Lawrence Berkeley National Laboratory (subject to receipt
	of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _immutable = __webpack_require__(301);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _moment = __webpack_require__(346);

	var _moment2 = _interopRequireDefault(_moment);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	A time range is a simple representation of a begin and end time, used
	to maintain consistency across an application.

	### Construction

	You can define a TimeRange with moments, Javascript Date objects
	or ms since UNIX epoch. Here we construct one with two moments:

	```js
	var fmt = "YYYY-MM-DD HH:mm";
	var beginTime = moment("2012-01-11 11:11", fmt);
	var endTime =   moment("2012-02-22 12:12", fmt);
	var range = new TimeRange(beginTime, endTime);
	```

	or with ms times:

	```js
	var range = new TimeRange([1326309060000, 1329941520000]);
	```

	 */

	var TimeRange = function () {

	    /**
	     * Builds a new TimeRange which may be of several different formats:
	     *   - Another TimeRange (copy constructor)
	     *   - An Immutable.List containing two Dates.
	     *   - A Javascript array containing two Date or ms timestamps
	     *   - Two arguments, begin and end, each of which may be a Data,
	     *     a Moment, or a ms timestamp.
	     */

	    function TimeRange(arg1, arg2) {
	        _classCallCheck(this, TimeRange);

	        if (arg1 instanceof TimeRange) {
	            var other = arg1;
	            this._range = other._range;
	        } else if (arg1 instanceof _immutable2.default.List) {
	            var rangeList = arg1;
	            this._range = rangeList;
	        } else if (_underscore2.default.isArray(arg1)) {
	            var rangeArray = arg1;
	            this._range = new _immutable2.default.List([new Date(rangeArray[0]), new Date(rangeArray[1])]);
	        } else {
	            var b = arg1;
	            var e = arg2;
	            if (_underscore2.default.isDate(b) && _underscore2.default.isDate(e)) {
	                this._range = new _immutable2.default.List([new Date(b.getTime()), new Date(e.getTime())]);
	            } else if (_moment2.default.isMoment(b) && _moment2.default.isMoment(e)) {
	                this._range = new _immutable2.default.List([new Date(b.valueOf()), new Date(e.valueOf())]);
	            } else if (_underscore2.default.isNumber(b) && _underscore2.default.isNumber(e)) {
	                this._range = new _immutable2.default.List([new Date(b), new Date(e)]);
	            }
	        }
	    }

	    /**
	     * Returns the internal range, which is an Immutable List containing
	     * begin and end times.
	     *
	     * @return {Immutable.List} List containing the begin and end of the time range.
	     */


	    _createClass(TimeRange, [{
	        key: "range",
	        value: function range() {
	            return this._range;
	        }

	        //
	        // Serialize
	        //

	        /**
	         * Returns the TimeRange as JSON, which will be a Javascript array
	         * of two ms timestamps.
	         *
	         * @return {number[]} JSON representation of the TimeRange
	         */

	    }, {
	        key: "toJSON",
	        value: function toJSON() {
	            return [this.begin().getTime(), this.end().getTime()];
	        }

	        /**
	         * Returns the TimeRange as a string, useful for serialization.
	         *
	         * @return {string} String representation of the TimeRange
	         */

	    }, {
	        key: "toString",
	        value: function toString() {
	            return JSON.stringify(this.toJSON());
	        }

	        /**
	         * Returns the TimeRange as a string expressed in local time
	         *
	         * @return {string} String representation of the TimeRange
	         */

	    }, {
	        key: "toLocalString",
	        value: function toLocalString() {
	            return "[" + this.begin() + ", " + this.end() + "]";
	        }

	        /**
	         * Returns the TimeRange as a string expressed in UTC time
	         *
	         * @return {string} String representation of the TimeRange
	         */

	    }, {
	        key: "toUTCString",
	        value: function toUTCString() {
	            return "[" + this.begin().toUTCString() + ", " + this.end().toUTCString() + "]";
	        }

	        /**
	         * Returns a human friendly version of the TimeRange, e.g.
	         * "Aug 1, 2014 05:19:59 am to Aug 1, 2014 07:41:06 am"
	         *
	         * @return {string} Human friendly string representation of the TimeRange
	         */

	    }, {
	        key: "humanize",
	        value: function humanize() {
	            var begin = (0, _moment2.default)(this.begin());
	            var end = (0, _moment2.default)(this.end());
	            var beginStr = begin.format("MMM D, YYYY hh:mm:ss a");
	            var endStr = end.format("MMM D, YYYY hh:mm:ss a");

	            return beginStr + " to " + endStr;
	        }

	        /**
	         * Returns a human friendly version of the TimeRange
	         * @example
	         * "a few seconds ago to a month ago"
	         *
	         * @return {string} Human friendly string representation of the TimeRange
	         */

	    }, {
	        key: "relativeString",
	        value: function relativeString() {
	            var begin = (0, _moment2.default)(this.begin());
	            var end = (0, _moment2.default)(this.end());
	            return begin.fromNow() + " to " + end.fromNow();
	        }

	        /**
	         * Returns the begin time of the TimeRange.
	         *
	         * @return {Date} The begin time of the TimeRange
	         */

	    }, {
	        key: "begin",
	        value: function begin() {
	            return this._range.get(0);
	        }

	        /**
	         * Returns the end time of the TimeRange.
	         *
	         * @return {Date} The end time of the TimeRange
	         */

	    }, {
	        key: "end",
	        value: function end() {
	            return this._range.get(1);
	        }

	        /**
	         * Sets a new begin time on the TimeRange. The result will be
	         * a new TimeRange.
	         *
	         * @param {Date} t Time to set the begin time to
	         * @return {TimeRange} The new mutated TimeRange
	         */

	    }, {
	        key: "setBegin",
	        value: function setBegin(t) {
	            return new TimeRange(this._range.set(0, t));
	        }

	        /**
	         * Sets a new end time on the TimeRange. The result will be
	         * a new TimeRange.
	         *
	         * @param {Date} t Time to set the end time to
	         * @return {TimeRange} The new mutated TimeRange
	         */

	    }, {
	        key: "setEnd",
	        value: function setEnd(t) {
	            return new TimeRange(this._range.set(1, t));
	        }

	        /**
	         * Returns if the two TimeRanges can be considered equal,
	         * in that they have the same times.
	         *
	         * @param {TimeRange} other The TimeRange to compare to
	         * @return {boolean} Result
	         */

	    }, {
	        key: "equals",
	        value: function equals(other) {
	            return this.begin().getTime() === other.begin().getTime() && this.end().getTime() === other.end().getTime();
	        }

	        /**
	         * Returns true if other is completely inside this.
	         *
	         * @param {TimeRange} other The TimeRange to compare to
	         * @return {boolean} Result
	         */

	    }, {
	        key: "contains",
	        value: function contains(other) {
	            if (_underscore2.default.isDate(other)) {
	                return this.begin() <= other && this.end() >= other;
	            } else {
	                return this.begin() <= other.begin() && this.end() >= other.end();
	            }
	            return false;
	        }

	        /**
	         * Returns true if this TimeRange is completely within the supplied
	         * other TimeRange.
	         *
	         * @param {TimeRange} other The TimeRange to compare to
	         * @return {boolean} Result
	         */

	    }, {
	        key: "within",
	        value: function within(other) {
	            return this.begin() >= other.begin() && this.end() <= other.end();
	        }

	        /**
	         * Returns true if the passed in other TimeRange overlaps this time Range.
	         *
	         * @param {TimeRange} other The TimeRange to compare to
	         * @return {boolean} Result
	         */

	    }, {
	        key: "overlaps",
	        value: function overlaps(other) {
	            if (this.contains(other.begin()) && !this.contains(other.end()) || this.contains(other.end()) && !this.contains(other.begin())) {
	                return true;
	            } else {
	                return false;
	            }
	        }

	        /**
	         * Returns true if the passed in other Range in no way
	         * overlaps this time Range.
	         *
	         * @param {TimeRange} other The TimeRange to compare to
	         * @return {boolean} Result
	         */

	    }, {
	        key: "disjoint",
	        value: function disjoint(other) {
	            return this.end() < other.begin() || this.begin() > other.end();
	        }

	        /**
	         * @param {TimeRange} other The TimeRange to extend with
	         * @return {TimeRange} a new Timerange which covers the extents of this and
	         * other combined.
	         */

	    }, {
	        key: "extents",
	        value: function extents(other) {
	            var b = this.begin() < other.begin() ? this.begin() : other.begin();
	            var e = this.end() > other.end() ? this.end() : other.end();
	            return new TimeRange(new Date(b.getTime()), new Date(e.getTime()));
	        }

	        /**
	         * @param {TimeRange} other The TimeRange to intersect with
	         * @return {TimeRange} A new TimeRange which represents the intersection
	         * (overlapping) part of this and other.
	         */

	    }, {
	        key: "intersection",
	        value: function intersection(other) {
	            if (this.disjoint(other)) {
	                return undefined;
	            }
	            var b = this.begin() > other.begin() ? this.begin() : other.begin();
	            var e = this.end() < other.end() ? this.end() : other.end();
	            return new TimeRange(new Date(b.getTime()), new Date(e.getTime()));
	        }

	        /**
	         * @return {number} The duration of the TimeRange in milliseconds
	         */

	    }, {
	        key: "duration",
	        value: function duration() {
	            return this.end().getTime() - this.begin().getTime();
	        }

	        /**
	         * @return {string} A user friendly version of the duration.
	         */

	    }, {
	        key: "humanizeDuration",
	        value: function humanizeDuration() {
	            return _moment2.default.duration(this.duration()).humanize();
	        }

	        //
	        // Static TimeRange creators
	        //

	        /**
	         * @return {TimeRange} The last day, as a TimeRange
	         */

	    }], [{
	        key: "lastDay",
	        value: function lastDay() {
	            var endTime = (0, _moment2.default)();
	            var beginTime = endTime.clone().subtract(24, "hours");
	            return new TimeRange(beginTime, endTime);
	        }

	        /**
	         * @return {TimeRange} The last seven days, as a TimeRange
	         */

	    }, {
	        key: "lastSevenDays",
	        value: function lastSevenDays() {
	            var endTime = (0, _moment2.default)();
	            var beginTime = endTime.clone().subtract(7, "days");
	            return new TimeRange(beginTime, endTime);
	        }

	        /**
	         * @return {TimeRange} The last thirty days, as a TimeRange
	         */

	    }, {
	        key: "lastThirtyDays",
	        value: function lastThirtyDays() {
	            var endTime = (0, _moment2.default)();
	            var beginTime = endTime.clone().subtract(30, "days");
	            return new TimeRange(beginTime, endTime);
	        }

	        /**
	         * @return {TimeRange} The last month, as a TimeRange
	         */

	    }, {
	        key: "lastMonth",
	        value: function lastMonth() {
	            var endTime = (0, _moment2.default)();
	            var beginTime = endTime.clone().subtract(1, "month");
	            return new TimeRange(beginTime, endTime);
	        }

	        /**
	         * @return {TimeRange} The last 90 days, as a TimeRange
	         */

	    }, {
	        key: "lastNinetyDays",
	        value: function lastNinetyDays() {
	            var endTime = (0, _moment2.default)();
	            var beginTime = endTime.clone().subtract(90, "days");
	            return new TimeRange(beginTime, endTime);
	        }

	        /**
	         * @return {TimeRange} The last year, as a TimeRange
	         */

	    }, {
	        key: "lastYear",
	        value: function lastYear() {
	            var endTime = (0, _moment2.default)();
	            var beginTime = endTime.clone().subtract(1, "year");
	            return new TimeRange(beginTime, endTime);
	        }
	    }]);

	    return TimeRange;
	}();

	exports.default = TimeRange;

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _chai = __webpack_require__(304);

	var _moment = __webpack_require__(346);

	var _moment2 = _interopRequireDefault(_moment);

	var _range = __webpack_require__(450);

	var _range2 = _interopRequireDefault(_range);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var fmt = "YYYY-MM-DD HH:mm"; /**
	                               *  Copyright (c) 2015, The Regents of the University of California,
	                               *  through Lawrence Berkeley National Laboratory (subject to receipt
	                               *  of any required approvals from the U.S. Dept. of Energy).
	                               *  All rights reserved.
	                               *
	                               *  This source code is licensed under the BSD-style license found in the
	                               *  LICENSE file in the root directory of this source tree.
	                               */

	/* global it, describe */
	/* eslint no-unused-expressions: 0 */
	/* eslint-disable max-len */

	var fmt2 = "YYYY-MM-DD HH:mm:ss";

	describe("Time range", function () {

	    describe("creation", function () {

	        it("can create a new range with a begin and end time", function (done) {
	            var beginTime = (0, _moment2.default)("2012-01-11 11:11", fmt).toDate();
	            var endTime = (0, _moment2.default)("2012-02-22 12:12", fmt).toDate();
	            var range = new _range2.default(beginTime, endTime);
	            (0, _chai.expect)(range.begin().getTime()).to.equal(beginTime.getTime());
	            (0, _chai.expect)(range.end().getTime()).to.equal(endTime.getTime());
	            done();
	        });

	        it("can create a new range with two UNIX epoch times in an array", function (done) {
	            var range = new _range2.default([1326309060000, 1329941520000]);
	            (0, _chai.expect)(range.toJSON()).to.deep.equal([1326309060000, 1329941520000]);
	            done();
	        });
	    });

	    describe("copy constructor", function () {

	        it("can be used to give a new range", function (done) {
	            var beginTime = (0, _moment2.default)("2012-01-11 1:11", fmt).toDate();
	            var endTime = (0, _moment2.default)("2012-02-12 2:12", fmt).toDate();
	            var rangeOrig = new _range2.default(beginTime, endTime);
	            var rangeCopy = new _range2.default(rangeOrig);
	            // We expect the copy to not equal the original, but for the dates
	            // within the copy to be the same
	            (0, _chai.expect)(rangeCopy).to.not.equal(rangeOrig);
	            (0, _chai.expect)(rangeCopy.begin().getTime()).to.equal(beginTime.getTime());
	            (0, _chai.expect)(rangeCopy.end().getTime()).to.equal(endTime.getTime());
	            done();
	        });
	    });

	    describe("serialization", function () {

	        it("can output JSON in the correct format", function (done) {
	            var beginTime = _moment2.default.utc("2012-01-11 11:11", fmt).toDate();
	            var endTime = _moment2.default.utc("2012-02-22 12:12", fmt).toDate();
	            var range = new _range2.default(beginTime, endTime);
	            (0, _chai.expect)(range.toJSON()).to.deep.equal([1326280260000, 1329912720000]);
	            done();
	        });

	        it("can output a string representation", function (done) {
	            var beginTime = _moment2.default.utc("2012-01-11 11:11", fmt).toDate();
	            var endTime = _moment2.default.utc("2012-02-22 12:12", fmt).toDate();
	            var range = new _range2.default(beginTime, endTime);
	            (0, _chai.expect)(range.toString()).to.equal("[1326280260000,1329912720000]");
	            done();
	        });
	    });

	    describe("human friendly display code", function () {

	        it("can display a range as a human friendly string", function (done) {
	            var beginTime = (0, _moment2.default)("2014-08-01 05:19:59", fmt2).toDate();
	            var endTime = (0, _moment2.default)("2014-08-01 07:41:06", fmt2).toDate();
	            var range = new _range2.default(beginTime, endTime);
	            var expected = "Aug 1, 2014 05:19:59 am to Aug 1, 2014 07:41:06 am";
	            (0, _chai.expect)(range.humanize()).to.equal(expected);
	            done();
	        });

	        it("can display last day as a human friendly string", function (done) {
	            var range = _range2.default.lastDay();
	            var expected = "a day ago to a few seconds ago";
	            (0, _chai.expect)(range.relativeString()).to.equal(expected);
	            done();
	        });

	        it("can display last 7 days as a human friendly string", function (done) {
	            var range = _range2.default.lastSevenDays();
	            var expected = "7 days ago to a few seconds ago";
	            (0, _chai.expect)(range.relativeString()).to.equal(expected);
	            done();
	        });

	        it("can display last 30 days as a human friendly string", function (done) {
	            var range = _range2.default.lastThirtyDays();
	            var expected = "a month ago to a few seconds ago";
	            (0, _chai.expect)(range.relativeString()).to.equal(expected);
	            done();
	        });

	        it("can display last month as a human friendly string", function (done) {
	            var range = _range2.default.lastMonth();
	            var expected = "a month ago to a few seconds ago";
	            (0, _chai.expect)(range.relativeString()).to.equal(expected);
	            done();
	        });

	        it("can display last 90 days as a human friendly string", function (done) {
	            var range = _range2.default.lastNinetyDays();
	            var expected = "3 months ago to a few seconds ago";
	            (0, _chai.expect)(range.relativeString()).to.equal(expected);
	            done();
	        });
	    });

	    describe("mutation", function () {

	        it("can be mutatated to form a new range", function (done) {
	            var beginTime = (0, _moment2.default)("2012-01-11 1:11", fmt).toDate();
	            var endTime = (0, _moment2.default)("2012-02-12 2:12", fmt).toDate();
	            var newTime = (0, _moment2.default)("2012-03-13 3:13", fmt).toDate();
	            var range = new _range2.default(beginTime, endTime);
	            var mutatedTimeRange = range.setEnd(newTime);

	            // Expect the range to be difference and the end time to be different
	            (0, _chai.expect)(mutatedTimeRange).to.not.equal(range);
	            (0, _chai.expect)(mutatedTimeRange.end().getTime()).to.equal(newTime.getTime());
	            done();
	        });
	    });

	    describe("TimeRange compare to another range", function () {

	        it("can be compared to see if they are equal", function (done) {
	            var ta = (0, _moment2.default)("2010-01-01 12:00", fmt).toDate();
	            var tb = (0, _moment2.default)("2010-02-01 12:00", fmt).toDate();
	            var range1 = new _range2.default(ta, tb);
	            var tc = (0, _moment2.default)("2010-01-01 12:00", fmt).toDate();
	            var td = (0, _moment2.default)("2010-02-01 12:00", fmt).toDate();
	            var range2 = new _range2.default(tc, td);
	            var te = (0, _moment2.default)("2012-03-01 12:00", fmt).toDate();
	            var tf = (0, _moment2.default)("2012-04-02 12:00", fmt).toDate();
	            var range3 = new _range2.default(te, tf);
	            (0, _chai.expect)(range1.equals(range2)).to.be.true;
	            (0, _chai.expect)(range1.equals(range3)).to.be.false;
	            done();
	        });

	        it("can be compared for overlap to a non-overlapping range", function (done) {
	            var ta = (0, _moment2.default)("2010-01-01 12:00", fmt).toDate();
	            var tb = (0, _moment2.default)("2010-02-01 12:00", fmt).toDate();
	            var range1 = new _range2.default(ta, tb);
	            var tc = (0, _moment2.default)("2010-03-15 12:00", fmt).toDate();
	            var td = (0, _moment2.default)("2010-04-15 12:00", fmt).toDate();
	            var range2 = new _range2.default(tc, td);
	            (0, _chai.expect)(range1.overlaps(range2)).to.be.false;
	            (0, _chai.expect)(range2.overlaps(range1)).to.be.false;
	            done();
	        });

	        it("can be compared for overlap to an overlapping range", function (done) {
	            var ta = (0, _moment2.default)("2010-01-01 12:00", fmt).toDate();
	            var tb = (0, _moment2.default)("2010-09-01 12:00", fmt).toDate();
	            var range1 = new _range2.default(ta, tb);

	            var td = (0, _moment2.default)("2010-08-15 12:00", fmt).toDate();
	            var te = (0, _moment2.default)("2010-11-15 12:00", fmt).toDate();
	            var range2 = new _range2.default(td, te);

	            (0, _chai.expect)(range1.overlaps(range2)).to.be.true;
	            (0, _chai.expect)(range2.overlaps(range1)).to.be.true;
	            done();
	        });

	        it("can be compared for containment to an range contained within it completely", function (done) {
	            var ta = (0, _moment2.default)("2010-01-01 12:00", fmt).toDate();
	            var tb = (0, _moment2.default)("2010-09-01 12:00", fmt).toDate();
	            var range1 = new _range2.default(ta, tb);

	            var td = (0, _moment2.default)("2010-03-15 12:00", fmt).toDate();
	            var te = (0, _moment2.default)("2010-06-15 12:00", fmt).toDate();
	            var range2 = new _range2.default(td, te);

	            (0, _chai.expect)(range1.contains(range2)).to.be.true;
	            done();
	        });

	        it("can be compared for containment to an overlapping range", function (done) {
	            var ta = (0, _moment2.default)("2010-01-01 12:00", fmt).toDate();
	            var tb = (0, _moment2.default)("2010-09-01 12:00", fmt).toDate();
	            var range1 = new _range2.default(ta, tb);

	            var td = (0, _moment2.default)("2010-06-15 12:00", fmt).toDate();
	            var te = (0, _moment2.default)("2010-12-15 12:00", fmt).toDate();
	            var range2 = new _range2.default(td, te);

	            (0, _chai.expect)(range1.contains(range2)).to.be.false;
	            done();
	        });
	    });

	    describe("TimeRange compare with time", function () {

	        it("can be compared to a time before the range", function (done) {
	            var ta = (0, _moment2.default)("2010-06-01 12:00", fmt).toDate();
	            var tb = (0, _moment2.default)("2010-08-01 12:00", fmt).toDate();
	            var range1 = new _range2.default(ta, tb);
	            var before = (0, _moment2.default)("2010-01-15 12:00", fmt).toDate();
	            (0, _chai.expect)(range1.contains(before)).to.be.false;
	            done();
	        });

	        it("can be compared to a time during the range", function (done) {
	            var ta = (0, _moment2.default)("2010-06-01 12:00", fmt).toDate();
	            var tb = (0, _moment2.default)("2010-08-01 12:00", fmt).toDate();
	            var range1 = new _range2.default(ta, tb);
	            var during = (0, _moment2.default)("2010-07-15 12:00", fmt).toDate();
	            (0, _chai.expect)(range1.contains(during)).to.be.true;
	            done();
	        });

	        it("can be compared to a time after the range", function (done) {
	            var ta = (0, _moment2.default)("2010-06-01 12:00", fmt).toDate();
	            var tb = (0, _moment2.default)("2010-08-01 12:00", fmt).toDate();
	            var range1 = new _range2.default(ta, tb);
	            var after = (0, _moment2.default)("2010-12-15 12:00", fmt).toDate();
	            (0, _chai.expect)(range1.contains(after)).to.be.false;
	            done();
	        });
	    });

	    describe("Intersections of ranges", function () {

	        it("can be undefined if the ranges don't intersect", function (done) {
	            // Two non-overlapping ranges: intersect() returns undefined
	            var beginTime = (0, _moment2.default)("2010-01-01 12:00", fmt).toDate();
	            var endTime = (0, _moment2.default)("2010-06-01 12:00", fmt).toDate();
	            var range = new _range2.default(beginTime, endTime);
	            var beginTimeOutside = (0, _moment2.default)("2010-07-15 12:00", fmt).toDate();
	            var endTimeOutside = (0, _moment2.default)("2010-08-15 12:00", fmt).toDate();
	            var rangeOutside = new _range2.default(beginTimeOutside, endTimeOutside);
	            (0, _chai.expect)(range.intersection(rangeOutside)).to.be.undefined;
	            done();
	        });

	        it("can be a new range if the ranges intersect", function (done) {
	            // Two overlapping ranges: intersect() returns
	            //    01 -------06       range
	            //           05-----07   rangeOverlap
	            //           05-06       intersection
	            var beginTime = (0, _moment2.default)("2010-01-01 12:00", fmt).toDate();
	            var endTime = (0, _moment2.default)("2010-06-01 12:00", fmt).toDate();
	            var range = new _range2.default(beginTime, endTime);
	            var beginTimeOverlap = (0, _moment2.default)("2010-05-01 12:00", fmt).toDate();
	            var endTimeOverlap = (0, _moment2.default)("2010-07-01 12:00", fmt).toDate();
	            var rangeOverlap = new _range2.default(beginTimeOverlap, endTimeOverlap);
	            var expected = new _range2.default(beginTimeOverlap, endTime);
	            (0, _chai.expect)(range.intersection(rangeOverlap).toString()).to.equal(expected.toString());
	            done();
	        });

	        it("can be a new range (the smaller range) if one range surrounds another", function (done) {
	            // One range fully inside the other intersect() returns the smaller range
	            //    01 -------06    range
	            //       02--04       rangeInside
	            //       02--04       intersection
	            var beginTime = (0, _moment2.default)("2010-01-01 12:00", fmt).toDate();
	            var endTime = (0, _moment2.default)("2010-06-01 12:00", fmt).toDate();
	            var range = new _range2.default(beginTime, endTime);
	            var beginTimeInside = (0, _moment2.default)("2010-02-01 12:00", fmt).toDate();
	            var endTimeInside = (0, _moment2.default)("2010-04-01 12:00", fmt).toDate();
	            var rangeInside = new _range2.default(beginTimeInside, endTimeInside);
	            (0, _chai.expect)(range.intersection(rangeInside).toString()).to.equal(rangeInside.toString());
	            (0, _chai.expect)(rangeInside.intersection(range).toString()).to.equal(rangeInside.toString());
	            done();
	        });
	    });
	});

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _chai = __webpack_require__(304);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _timerangeevent = __webpack_require__(455);

	var _timerangeevent2 = _interopRequireDefault(_timerangeevent);

	var _indexedevent = __webpack_require__(454);

	var _indexedevent2 = _interopRequireDefault(_indexedevent);

	var _range = __webpack_require__(450);

	var _range2 = _interopRequireDefault(_range);

	var _index = __webpack_require__(344);

	var _index2 = _interopRequireDefault(_index);

	var _functions = __webpack_require__(456);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var outageList = {
	    status: "OK",
	    outage_events: [{
	        start_time: "2015-04-22T03:30:00Z",
	        end_time: "2015-04-22T13:00:00Z",
	        description: "At 13:33 pacific circuit 06519 went down.",
	        title: "STAR-CR5 < 100 ge 06519 > ANL  - Outage",
	        completed: true,
	        external_ticket: "",
	        esnet_ticket: "ESNET-20150421-013",
	        organization: "Internet2 / Level 3",
	        type: "U"
	    }, {
	        start_time: "2015-04-22T03:30:00Z",
	        end_time: "2015-04-22T16:50:00Z",
	        title: "STAR-CR5 < 100 ge 06519 > ANL  - Outage",
	        description: "The listed circuit was unavailable due to\nbent pins in two clots of the optical node chassis.",
	        completed: true,
	        external_ticket: "3576:144",
	        esnet_ticket: "ESNET-20150421-013",
	        organization: "Internet2 / Level 3",
	        type: "U"
	    }, {
	        start_time: "2015-03-04T09:00:00Z",
	        end_time: "2015-03-04T14:00:00Z",
	        title: "ANL Scheduled Maintenance",
	        description: "ANL will be switching border routers...",
	        completed: true,
	        external_ticket: "",
	        esnet_ticket: "ESNET-20150302-002",
	        organization: "ANL",
	        type: "P"
	    }]
	}; /**
	    *  Copyright (c) 2015, The Regents of the University of California,
	    *  through Lawrence Berkeley National Laboratory (subject to receipt
	    *  of any required approvals from the U.S. Dept. of Energy).
	    *  All rights reserved.
	    *
	    *  This source code is licensed under the BSD-style license found in the
	    *  LICENSE file in the root directory of this source tree.
	    */

	/* global it, describe */
	/* eslint no-unused-expressions: 0 */
	/* eslint-disable max-len */

	var deepEventData = {
	    NorthRoute: {
	        in: 123,
	        out: 456
	    },
	    SouthRoute: {
	        in: 654,
	        out: 223
	    }
	};

	describe("Events", function () {

	    describe("Event creation", function () {

	        it("can create a regular Event, with deep data", function (done) {
	            var timestamp = new Date("2015-04-22T03:30:00Z");
	            var event = new _event2.default(timestamp, deepEventData);
	            (0, _chai.expect)(event.get("NorthRoute")).to.deep.equal({ in: 123, out: 456 });
	            (0, _chai.expect)(event.get("SouthRoute")).to.deep.equal({ in: 654, out: 223 });
	            done();
	        });

	        it("can create an IndexedEvent using a string index and data", function (done) {
	            var event = new _indexedevent2.default("1d-12355", { value: 42 });
	            var expected = "[Thu, 30 Oct 2003 00:00:00 GMT, Fri, 31 Oct 2003 00:00:00 GMT]";
	            (0, _chai.expect)(event.timerangeAsUTCString()).to.equal(expected);
	            (0, _chai.expect)(event.get("value")).to.equal(42);
	            done();
	        });

	        it("can create an indexed event using an existing Index and data", function (done) {
	            var index = new _index2.default("1d-12355");
	            var event = new _indexedevent2.default(index, { value: 42 });
	            var expected = "[Thu, 30 Oct 2003 00:00:00 GMT, Fri, 31 Oct 2003 00:00:00 GMT]";
	            (0, _chai.expect)(event.timerangeAsUTCString()).to.equal(expected);
	            (0, _chai.expect)(event.get("value")).to.equal(42);
	            done();
	        });

	        it("can create a TimeRangeEvent using a object", function (done) {
	            // Pick one event
	            var sampleEvent = outageList["outage_events"][0];

	            // Extract the begin and end times
	            var beginTime = new Date(sampleEvent.start_time);
	            var endTime = new Date(sampleEvent.end_time);
	            var timerange = new _range2.default(beginTime, endTime);
	            var event = new _timerangeevent2.default(timerange, sampleEvent);
	            var expected = "{\"timerange\":[1429673400000,1429707600000],\"data\":{\"external_ticket\":\"\",\"start_time\":\"2015-04-22T03:30:00Z\",\"completed\":true,\"end_time\":\"2015-04-22T13:00:00Z\",\"organization\":\"Internet2 / Level 3\",\"title\":\"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",\"type\":\"U\",\"esnet_ticket\":\"ESNET-20150421-013\",\"description\":\"At 13:33 pacific circuit 06519 went down.\"}}";
	            (0, _chai.expect)("" + event).to.equal(expected);
	            (0, _chai.expect)(event.begin().getTime()).to.equal(1429673400000);
	            (0, _chai.expect)(event.end().getTime()).to.equal(1429707600000);
	            (0, _chai.expect)(event.humanizeDuration()).to.equal("10 hours");
	            (0, _chai.expect)(event.get("title")).to.equal("STAR-CR5 < 100 ge 06519 > ANL  - Outage");
	            done();
	        });
	    });

	    describe("Event merging", function () {

	        it("can merge multiple events together", function (done) {
	            var t = new Date("2015-04-22T03:30:00Z");
	            var event1 = new _event2.default(t, { a: 5, b: 6 });
	            var event2 = new _event2.default(t, { c: 2 });
	            var merged = _event2.default.merge([event1, event2]);
	            (0, _chai.expect)(merged.get("a")).to.equal(5);
	            (0, _chai.expect)(merged.get("b")).to.equal(6);
	            (0, _chai.expect)(merged.get("c")).to.equal(2);
	            done();
	        });

	        it("can merge multiple indexed events together", function (done) {
	            var index = "1h-396206";
	            var event1 = new _indexedevent2.default(index, { a: 5, b: 6 });
	            var event2 = new _indexedevent2.default(index, { c: 2 });
	            var merged = _event2.default.merge([event1, event2]);
	            (0, _chai.expect)(merged.get("a")).to.equal(5);
	            (0, _chai.expect)(merged.get("b")).to.equal(6);
	            (0, _chai.expect)(merged.get("c")).to.equal(2);
	            done();
	        });

	        it("can merge multiple timerange events together", function (done) {
	            var beginTime = new Date("2015-04-22T03:30:00Z");
	            var endTime = new Date("2015-04-22T13:00:00Z");
	            var timerange = new _range2.default(beginTime, endTime);
	            var event1 = new _timerangeevent2.default(timerange, { a: 5, b: 6 });
	            var event2 = new _timerangeevent2.default(timerange, { c: 2 });
	            var merged = _event2.default.merge([event1, event2]);
	            (0, _chai.expect)(merged.get("a")).to.equal(5);
	            (0, _chai.expect)(merged.get("b")).to.equal(6);
	            (0, _chai.expect)(merged.get("c")).to.equal(2);
	            done();
	        });
	    });

	    describe("Event summing", function () {

	        it("can sum multiple events together", function (done) {
	            var t = new Date("2015-04-22T03:30:00Z");
	            var events = [new _event2.default(t, { a: 5, b: 6, c: 7 }), new _event2.default(t, { a: 2, b: 3, c: 4 }), new _event2.default(t, { a: 1, b: 2, c: 3 })];
	            var result = _event2.default.sum(events);
	            (0, _chai.expect)(result.get("a")).to.equal(8);
	            (0, _chai.expect)(result.get("b")).to.equal(11);
	            (0, _chai.expect)(result.get("c")).to.equal(14);
	            done();
	        });

	        it("can't sum multiple events together if they have different timestamps", function (done) {
	            var t1 = new Date("2015-04-22T03:30:00Z");
	            var t2 = new Date("2015-04-22T04:00:00Z");
	            var t3 = new Date("2015-04-22T04:30:00Z");
	            var events = [new _event2.default(t1, { a: 5, b: 6, c: 7 }), new _event2.default(t2, { a: 2, b: 3, c: 4 }), new _event2.default(t3, { a: 1, b: 2, c: 3 })];

	            (0, _chai.expect)(_event2.default.sum.bind(undefined, events)).to.throw("sum() expects all events to have the same timestamp");

	            done();
	        });
	    });

	    /*
	    describe("Event filling", () => {
	         it("can fill NaNs with a fixed value for a specific field", done => {
	            const t = new Date("2015-04-22T03:30:00Z");
	            const event = new Event(t, {a: 5, b: NaN, c: NaN});
	            const filled = event.fill("NaN", 0, "b");
	            expect(filled.get("a")).to.equal(5);
	            expect(filled.get("b")).to.equal(0);
	            expect(isNaN(filled.get("c"))).to.equal(true);
	            done();
	        });
	         it("can fill NaNs with a fixed value for all fields", done => {
	            const t = new Date("2015-04-22T03:30:00Z");
	            const event = new Event(t, {a: 5, b: NaN, c: NaN});
	            const filled = event.fill("NaN", 99);
	            expect(filled.get("a")).to.equal(5);
	            expect(filled.get("b")).to.equal(99);
	            expect(filled.get("c")).to.equal(99);
	            done();
	        });
	    });*/

	    describe("Deep event get", function () {
	        it("can create an event with deep data and then get values back with dot notation", function (done) {
	            var timestamp = new Date("2015-04-22T03:30:00Z");
	            var event = new _event2.default(timestamp, deepEventData);
	            var eventValue = void 0;
	            for (var i = 0; i < 100000; i++) {
	                eventValue = event.get(["NorthRoute", "in"]); //1550ms
	            }
	            (0, _chai.expect)(eventValue).to.equal(123);
	            done();
	        });
	    });

	    describe("Event mapreduce", function () {

	        var events = [];
	        events.push(new _event2.default(1445449170000, { name: "source1", in: 2, out: 11 }));
	        events.push(new _event2.default(1445449200000, { name: "source1", in: 4, out: 13 }));
	        events.push(new _event2.default(1445449230000, { name: "source1", in: 6, out: 15 }));
	        events.push(new _event2.default(1445449260000, { name: "source1", in: 8, out: 18 }));

	        it("should generate the correct key values for a string selector", function (done) {
	            (0, _chai.expect)(_event2.default.map(events, "in")).to.deep.equal({ in: [2, 4, 6, 8] });
	            done();
	        });

	        it("should generate the correct key values for a string selector", function (done) {
	            (0, _chai.expect)(_event2.default.map(events, ["in", "out"])).to.deep.equal({
	                in: [2, 4, 6, 8],
	                out: [11, 13, 15, 18]
	            });
	            done();
	        });

	        it("should generate the correct key values for a string selector", function (done) {
	            var result = _event2.default.map(events, function (event) {
	                return {
	                    sum: event.get("in") + event.get("out")
	                };
	            });
	            (0, _chai.expect)(result).to.deep.equal({
	                sum: [13, 17, 21, 26]
	            });

	            (0, _chai.expect)(_event2.default.reduce(result, _functions.avg)).to.deep.equal({ sum: 19.25 });

	            done();
	        });

	        it("should be able to run a simple mapReduce calculation", function (done) {
	            var result = _event2.default.mapReduce(events, ["in", "out"], _functions.avg);
	            (0, _chai.expect)(result).to.deep.equal({ in: 5, out: 14.25 });
	            done();
	        });
	    });
	});

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *  Copyright (c) 2015, The Regents of the University of California,
	through Lawrence Berkeley National Laboratory (subject to receipt
	of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	

	var _moment = __webpack_require__(346);

	var _moment2 = _interopRequireDefault(_moment);

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _immutable = __webpack_require__(301);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _indexedevent = __webpack_require__(454);

	var _indexedevent2 = _interopRequireDefault(_indexedevent);

	var _timerangeevent = __webpack_require__(455);

	var _timerangeevent2 = _interopRequireDefault(_timerangeevent);

	var _functions = __webpack_require__(456);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function timestampFromArg(arg) {
	    if (_underscore2.default.isNumber(arg)) {
	        return new Date(arg);
	    } else if (_underscore2.default.isDate(arg)) {
	        return new Date(arg.getTime());
	    } else if (_moment2.default.isMoment(arg)) {
	        return new Date(arg.valueOf());
	    } else {
	        throw new Error("Unable to get timestamp from " + arg + ". Should be a number, date, or moment.");
	    }
	}

	function dataFromArg(arg) {
	    var data = void 0;
	    if (_underscore2.default.isObject(arg)) {
	        // Deeply convert the data to Immutable Map
	        data = new _immutable2.default.fromJS(arg);
	    } else if (data instanceof _immutable2.default.Map) {
	        // Copy reference to the data
	        data = arg;
	    } else if (_underscore2.default.isNumber(arg) || _underscore2.default.isString(arg)) {
	        // Just add it to the value key of a new Map
	        // e.g. new Event(t, 25); -> t, {value: 25}
	        data = new _immutable2.default.Map({ value: arg });
	    } else {
	        throw new Error("Unable to interpret event data from " + arg + ".");
	    }
	    return data;
	}

	/**
	There are three types of Events in Pond:

	1. *Event* - a generic event which associates a timestamp with some data
	2. *TimeRangeEvent* - associates a TimeRange with some data
	3. *IndexedEvent* - associates a time range specified as an Index

	### Construction

	The creation of an Event is done by combining two parts: the timestamp (or time range, or Index...) and the data, along with an optional key which is described below.

	 * For a basic `Event`, you specify the timestamp as either a Javascript Date object, a Moment, or the number of milliseconds since the UNIX epoch.

	 * For a `TimeRangeEvent`, you specify a TimeRange, along with the data.

	 * For a `IndexedEvent`, you specify an Index, along with the data, and if the event should be considered to be in UTC time or not.

	To specify the data you can supply:

	 * a Javascript object of key/values. The object may contained nested data.

	 * an Immutable.Map

	 * a simple type such as an integer. This is a shorthand for supplying {"value": v}.

	**Example:**

	Given some source of data that looks like this:

	```json
	const sampleEvent = {
	    "start_time": "2015-04-22T03:30:00Z",
	    "end_time": "2015-04-22T13:00:00Z",
	    "description": "At 13:33 pacific circuit 06519 went down.",
	    "title": "STAR-CR5 - Outage",
	    "completed": true,
	    "external_ticket": "",
	    "esnet_ticket": "ESNET-20150421-013",
	    "organization": "Internet2 / Level 3",
	    "type": "U"
	}
	```

	We first extract the begin and end times to build a TimeRange:

	```js
	let b = new Date(sampleEvent.start_time);
	let e = new Date(sampleEvent.end_time);
	let timerange = new TimeRange(b, e);
	```

	Then we combine the TimeRange and the event itself to create the Event.

	```js
	let outageEvent = new TimeRangeEvent(timerange, sampleEvent);
	```

	Once we have an event we can get access the time range with:

	```js
	outageEvent.begin().getTime()   // 1429673400000
	outageEvent.end().getTime())    // 1429707600000
	outageEvent.humanizeDuration()) // "10 hours"
	```

	And we can access the data like so:

	```js
	outageEvent.get("title")  // "STAR-CR5 - Outage"
	```

	Or use:

	```js
	outageEvent.data()
	```

	to fetch the whole data object, which will be an Immutable Map.
	*/

	var Event = function () {

	    /**
	     * The creation of an Event is done by combining two parts:
	     * the timestamp and the data.
	     *
	     * To construct you specify the timestamp as either:
	     *     - Javascript Date object
	     *     - a Moment, or
	     *     - millisecond timestamp: the number of ms since the UNIX epoch
	     *
	     * To specify the data you can supply either:
	     *     - a Javascript object containing key values pairs
	     *     - an Immutable.Map, or
	     *     - a simple type such as an integer. In the case of the simple type
	     *       this is a shorthand for supplying {"value": v}.
	     */

	    function Event(arg1, arg2) {
	        _classCallCheck(this, Event);

	        if (arg1 instanceof Event) {
	            var other = arg1;
	            this._d = other._d;
	            return;
	        }
	        if (arg1 instanceof _immutable2.default.Map && arg1.has("time") && arg1.has("data")) {
	            this._d = arg1;
	            return;
	        }
	        var time = timestampFromArg(arg1);
	        var data = dataFromArg(arg2);
	        this._d = new _immutable2.default.Map({ time: time, data: data });
	    }

	    /**
	     * Returns the Event as a JSON object, essentially:
	     *  {time: t, data: {key: value, ...}}
	     * @return {Object} The event as JSON.
	     */


	    _createClass(Event, [{
	        key: "toJSON",
	        value: function toJSON() {
	            return {
	                time: this.timestamp().getTime(),
	                data: this.data().toJSON()
	            };
	        }

	        /**
	         * Retruns the Event as a string, useful for serialization.
	         * @return {string} The Event as a string
	         */

	    }, {
	        key: "toString",
	        value: function toString() {
	            return JSON.stringify(this.toJSON());
	        }

	        /**
	         * Returns a flat array starting with the timestamp, followed by the values.
	         */

	    }, {
	        key: "toPoint",
	        value: function toPoint() {
	            return [this.timestamp().getTime()].concat(_toConsumableArray(_underscore2.default.values(this.data().toJSON())));
	        }

	        /**
	         * The timestamp of this data, in UTC time, as a string.
	         */

	    }, {
	        key: "timestampAsUTCString",
	        value: function timestampAsUTCString() {
	            return this.timestamp().toUTCString();
	        }

	        /**
	         * The timestamp of this data, in Local time, as a string.
	         */

	    }, {
	        key: "timestampAsLocalString",
	        value: function timestampAsLocalString() {
	            return this.timestamp().toString();
	        }

	        /**
	         * The timestamp of this data
	         */

	    }, {
	        key: "timestamp",
	        value: function timestamp() {
	            return this._d.get("time");
	        }

	        /**
	         * The begin time of this Event, which will be just the timestamp
	         */

	    }, {
	        key: "begin",
	        value: function begin() {
	            return this.timestamp();
	        }

	        /**
	         * The end time of this Event, which will be just the timestamp
	         */

	    }, {
	        key: "end",
	        value: function end() {
	            return this.timestamp();
	        }

	        /**
	         * Direct access to the event data. The result will be an Immutable.Map.
	         */

	    }, {
	        key: "data",
	        value: function data() {
	            return this._d.get("data");
	        }

	        /**
	         * Sets the data portion of the event and returns a new Event.
	         */

	    }, {
	        key: "setData",
	        value: function setData(data) {
	            var d = this._d.set("data", dataFromArg(data));
	            return new Event(d);
	        }

	        /**
	         * Get specific data out of the Event. The data will be converted
	         * to a js object. You can use a fieldSpec to address deep data.
	         * A fieldSpec could be "a.b"
	         */

	    }, {
	        key: "get",
	        value: function get() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? ["value"] : arguments[0];

	            var v = void 0;
	            if (_underscore2.default.isArray(fieldSpec)) {
	                v = this.data().getIn(fieldSpec);
	            } else if (_underscore2.default.isString(fieldSpec)) {
	                var searchKeyPath = fieldSpec.split(".");
	                v = this.data().getIn(searchKeyPath);
	            }

	            if (v instanceof _immutable2.default.Map || v instanceof _immutable2.default.List) {
	                return v.toJS();
	            }
	            return v;
	        }

	        /**
	         * Alias for get()
	         */

	    }, {
	        key: "value",
	        value: function value(fieldSpec) {
	            return this.get(fieldSpec);
	        }
	    }, {
	        key: "stringify",
	        value: function stringify() {
	            return JSON.stringify(this.data());
	        }

	        /**
	         * Collapses this event's columns, represented by the fieldSpecList
	         * into a single column. The collapsing itself is done with the reducer
	         * function. Optionally the collapsed column could be appended to the
	         * existing columns, or replace them (the default).
	         */

	    }, {
	        key: "collapse",
	        value: function collapse(fieldSpecList, name, reducer) {
	            var _this = this;

	            var append = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];

	            var data = append ? this.data().toJS() : {};
	            var d = fieldSpecList.map(function (fs) {
	                return _this.get(fs);
	            });
	            data[name] = reducer(d);
	            return this.setData(data);
	        }

	        /*
	        fill(type, arg1, arg2) {
	            if (type === "NaN") {
	                const fixedValue = arg1;
	                const fixedKey = arg2;
	                const data = this._data.withMutations(d => {
	                    this._data.forEach((value, key) => {
	                        if (_.isNaN(value) && (!fixedKey || fixedKey === key)) {
	                            d.set(key, fixedValue);
	                        }
	                    });
	                });
	                this._data = data;
	                return this;
	            } else {
	                const msg = "Invalid fill type";
	                throw new Error(msg);
	            }
	        }
	        */

	    }], [{
	        key: "is",
	        value: function is(event1, event2) {
	            return _immutable2.default.is(event1._d, event2._d);
	        }

	        /**
	         * The same as Event.value() only it will return false if the
	         * value is either undefined, NaN or Null.
	         */

	    }, {
	        key: "isValidValue",
	        value: function isValidValue(event) {
	            var fieldSpec = arguments.length <= 1 || arguments[1] === undefined ? "value" : arguments[1];

	            var v = event.value(fieldSpec);
	            var invalid = _underscore2.default.isUndefined(v) || _underscore2.default.isNaN(v) || _underscore2.default.isNull(v);
	            return !invalid;
	        }

	        /**
	         * Function to select specific fields of an event using
	         * a fieldSpec and return a new event with just those fields.
	         *
	         * The fieldSpec currently can be:
	         *  * A single field name
	         *  * An array of field names
	         *
	         * The function returns a new event.
	         */

	    }, {
	        key: "selector",
	        value: function selector(event, fieldSpec) {
	            var data = {};
	            if (_underscore2.default.isString(fieldSpec)) {
	                var fieldName = fieldSpec;
	                var value = event.get(fieldName);
	                data[fieldName] = value;
	            } else if (_underscore2.default.isArray(fieldSpec)) {
	                _underscore2.default.each(fieldSpec, function (fieldName) {
	                    var value = event.get(fieldName);
	                    data[fieldName] = value;
	                });
	            } else {
	                return event;
	            }
	            return event.setData(data);
	        }
	    }, {
	        key: "mergeEvents",
	        value: function mergeEvents(events) {
	            var t = events[0].timestamp();
	            var data = {};
	            _underscore2.default.each(events, function (event) {
	                if (!event instanceof Event) {
	                    var msg = "Events being merged must have the same type";
	                    throw new Error(msg);
	                }

	                if (t.getTime() !== event.timestamp().getTime()) {
	                    var _msg = "Events being merged must have the same timestamp";
	                    throw new Error(_msg);
	                }

	                var d = event.toJSON().data;
	                _underscore2.default.each(d, function (val, key) {
	                    if (_underscore2.default.has(data, key)) {
	                        var _msg2 = "Events being merged may not have the same key '" + key + "'";
	                        throw new Error(_msg2);
	                    }
	                    data[key] = val;
	                });
	            });

	            var e = new Event(t.getTime(), data);
	            return e;
	        }
	    }, {
	        key: "mergeTimeRangeEvents",
	        value: function mergeTimeRangeEvents(events) {
	            var timerange = events[0].timerange();
	            var data = {};
	            _underscore2.default.each(events, function (event) {
	                if (!event instanceof _timerangeevent2.default) {
	                    var msg = "Events being merged must have the same type";
	                    throw new Error(msg);
	                }

	                if (timerange.toUTCString() !== event.timerange().toUTCString()) {
	                    var _msg3 = "Events being merged must have the same timerange";
	                    throw new Error(_msg3);
	                }

	                var d = event.toJSON().data;
	                _underscore2.default.each(d, function (val, key) {
	                    if (_underscore2.default.has(data, key)) {
	                        var _msg4 = "Events being merged may not have the same key '" + key + "'";
	                        throw new Error(_msg4);
	                    }
	                    data[key] = val;
	                });
	            });

	            return new _timerangeevent2.default(timerange, data);
	        }
	    }, {
	        key: "mergeIndexedEvents",
	        value: function mergeIndexedEvents(events) {
	            var index = events[0].indexAsString();
	            var data = {};
	            _underscore2.default.each(events, function (event) {
	                if (!event instanceof _indexedevent2.default) {
	                    throw new Error("Events being merged must have the same type");
	                }

	                if (index !== event.indexAsString()) {
	                    throw new Error("Events being merged must have the same index");
	                }

	                var d = event.toJSON().data;
	                _underscore2.default.each(d, function (val, key) {
	                    if (_underscore2.default.has(data, key)) {
	                        var msg = "Events being merged may not have the same key '" + key + "'";
	                        throw new Error(msg);
	                    }
	                    data[key] = val;
	                });
	            });
	            return new _indexedevent2.default(index, data);
	        }
	    }, {
	        key: "merge",
	        value: function merge(events) {
	            if (events.length < 1) {
	                return;
	            } else if (events.length === 1) {
	                return events[0];
	            }

	            if (events[0] instanceof Event) {
	                return Event.mergeEvents(events);
	            } else if (events[0] instanceof _timerangeevent2.default) {
	                return Event.mergeTimeRangeEvents(events);
	            } else if (events[0] instanceof _indexedevent2.default) {
	                return Event.mergeIndexedEvents(events);
	            }
	        }

	        /**
	         * Combines multiple events with the same time together
	         * to form a new event. Doesn't currently work on IndexedEvents
	         * or TimeRangeEvents.
	         */

	    }, {
	        key: "combine",
	        value: function combine(events, fieldSpec, reducer) {
	            if (events.length < 1) {
	                return;
	            }
	            var mapped = Event.map(events, function (event) {
	                var mapEvent = {};
	                // Which field do we want to work with
	                var fieldNames = [];
	                if (!fieldSpec) {
	                    fieldNames = _underscore2.default.map(event.data().toJSON(), function (value, fieldName) {
	                        return fieldName;
	                    });
	                } else if (_underscore2.default.isString(fieldSpec)) {
	                    fieldNames = [fieldSpec];
	                } else if (_underscore2.default.isArray(fieldSpec)) {
	                    fieldNames = fieldSpec;
	                }
	                // Map the fields, along with the timestamp, to the value
	                _underscore2.default.each(fieldNames, function (fieldName) {
	                    mapEvent[event.timestamp().getTime() + "::" + fieldName] = event.data().get(fieldName);
	                });

	                return mapEvent;
	            });

	            var eventData = {};
	            _underscore2.default.each(Event.reduce(mapped, reducer), function (value, key) {
	                var _key$split = key.split("::");

	                var _key$split2 = _slicedToArray(_key$split, 2);

	                var timestamp = _key$split2[0];
	                var fieldName = _key$split2[1];

	                if (!_underscore2.default.has(eventData, timestamp)) {
	                    eventData[timestamp] = {};
	                }
	                eventData[timestamp][fieldName] = value;
	            });

	            return _underscore2.default.map(eventData, function (data, timestamp) {
	                return new Event(+timestamp, data);
	            });
	        }

	        /**
	         * Sum takes multiple events of the same time and uses
	         * combine() to add them together
	         */

	    }, {
	        key: "sum",
	        value: function sum(events, fieldSpec) {
	            // Since all the events should be of the same time
	            // we can just take the first result from combine
	            var t = void 0;
	            events.forEach(function (e) {
	                if (!t) t = e.timestamp().getTime();
	                if (t !== e.timestamp().getTime()) {
	                    throw new Error("sum() expects all events to have the same timestamp");
	                }
	            });

	            return Event.combine(events, fieldSpec, _functions.sum)[0];
	        }

	        /**
	         * Avg takes multiple events of the same time and uses
	         * combine() to avg them
	         */

	    }, {
	        key: "avg",
	        value: function avg(events, fieldSpec) {
	            return Event.combine(events, fieldSpec, _functions.avg)[0];
	        }

	        /**
	         * Maps a list of events according to the fieldSpec
	         * passed in. The spec maybe a single field name, a
	         * list of field names, or a function that takes an
	         * event and returns a key/value pair.
	         *
	         * Example 1:
	         *         in   out
	         *  3am    1    2
	         *  4am    3    4
	         *
	         * Mapper result:  { in: [1, 3], out: [2, 4]}
	         */

	    }, {
	        key: "map",
	        value: function map(evts) {
	            var multiFieldSpec = arguments.length <= 1 || arguments[1] === undefined ? "value" : arguments[1];

	            var result = {};

	            var events = void 0;
	            if (evts instanceof _immutable2.default.List) {
	                events = evts;
	            } else if (_underscore2.default.isArray(evts)) {
	                events = new _immutable2.default.List(evts);
	            } else {
	                throw new Error("Unknown event list type. Should be an array or Immutable List");
	            }

	            if (_underscore2.default.isString(multiFieldSpec)) {
	                (function () {
	                    var fieldSpec = multiFieldSpec;
	                    events.forEach(function (event) {
	                        if (!_underscore2.default.has(result, fieldSpec)) {
	                            result[fieldSpec] = [];
	                        }
	                        var value = event.get(fieldSpec);

	                        result[fieldSpec].push(value);
	                    });
	                })();
	            } else if (_underscore2.default.isArray(multiFieldSpec)) {
	                _underscore2.default.each(multiFieldSpec, function (fieldSpec) {
	                    events.forEach(function (event) {

	                        if (!_underscore2.default.has(result, fieldSpec)) {
	                            result[fieldSpec] = [];
	                        }
	                        result[fieldSpec].push(event.get(fieldSpec));
	                    });
	                });
	            } else if (_underscore2.default.isFunction(multiFieldSpec)) {
	                events.forEach(function (event) {
	                    var pair = multiFieldSpec(event);
	                    _underscore2.default.each(pair, function (value, key) {
	                        if (!_underscore2.default.has(result, key)) {
	                            result[key] = [];
	                        }
	                        result[key].push(value);
	                    });
	                });
	            } else {
	                events.forEach(function (event) {
	                    _underscore2.default.each(event.data().toJSON(), function (value, key) {
	                        if (!_underscore2.default.has(result, key)) {
	                            result[key] = [];
	                        }
	                        result[key].push(value);
	                    });
	                });
	            }
	            return result;
	        }

	        /**
	         * Takes a list of events and a reducer function and returns
	         * a new Event with the result, for each column. The reducer is
	         * of the form:
	         *     function sum(valueList) {
	         *         return calcValue;
	         *     }
	         */

	    }, {
	        key: "reduce",
	        value: function reduce(mapped, reducer) {
	            var result = {};
	            _underscore2.default.each(mapped, function (valueList, key) {
	                result[key] = reducer(valueList);
	            });
	            return result;
	        }
	    }, {
	        key: "mapReduce",
	        value: function mapReduce(events, multiFieldSpec, reducer) {
	            return Event.reduce(this.map(events, multiFieldSpec), reducer);
	        }
	    }]);

	    return Event;
	}();

	exports.default = Event;

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	opyright (c) 2015, The Regents of the University of California,
	through Lawrence Berkeley National Laboratory (subject to receipt
	of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _immutable = __webpack_require__(301);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _index = __webpack_require__(344);

	var _index2 = _interopRequireDefault(_index);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function indexFromArgs(arg1) {
	    var arg2 = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

	    if (_underscore2.default.isString(arg1)) {
	        return new _index2.default(arg1, arg2);
	    } else if (arg1 instanceof _index2.default) {
	        return arg1;
	    } else {
	        throw new Error("Unable to get index from " + arg1 + ". Should be a string or Index.");
	    }
	}

	function dataFromArg(arg) {
	    var data = void 0;
	    if (_underscore2.default.isObject(arg)) {
	        // Deeply convert the data to Immutable Map
	        data = new _immutable2.default.fromJS(arg);
	    } else if (data instanceof _immutable2.default.Map) {
	        // Copy reference to the data
	        data = arg;
	    } else if (_underscore2.default.isNumber(arg) || _underscore2.default.isString(arg)) {
	        // Just add it to the value key of a new Map
	        // e.g. new Event(t, 25); -> t, {value: 25}
	        data = new _immutable2.default.Map({ value: arg });
	    } else {
	        throw new Error("Unable to interpret event data from " + arg + ".");
	    }
	    return data;
	}

	/**
	 * An IndexedEvent uses an Index to specify a timerange over which the event
	 * occurs and maps that to a data object representing some measurement or metric
	 * during that time range.
	 *
	 * You can supply the index as a string or as an Index object.
	 *
	 * Example Indexes are:
	 *     - 1d-1565 is the entire duration of the 1565th day since the UNIX epoch
	 *     - 2014-03 is the entire duration of march in 2014
	 *
	 * The range, as expressed by the Index, is provided by the convenience method
	 * `range()`, which returns a TimeRange instance. Alternatively the begin
	 * and end times represented by the Index can be found with `begin()`
	 * and `end()` respectively.
	 *
	 * The data is also specified during construction, and is generally expected to
	 * be an object or an Immutable.Map. If an object is provided it will be stored
	 * internally as an ImmutableMap. If the data provided is some other type then
	 * it will be equivalent to supplying an object of `{value: data}`. Data may be
	 * undefined.
	 *
	 * The get the data out of an IndexedEvent instance use `data()`. It will return
	 * an Immutable.Map.
	 */

	var IndexedEvent = function () {

	    /**
	     * The creation of an IndexedEvent is done by combining two parts:
	     * the Index and the data.
	     *
	     * To construct you specify an Index, along with the data.
	     *
	     * The index may be an Index, or a string.
	     *
	     * To specify the data you can supply either:
	     *     - a Javascript object containing key values pairs
	     *     - an Immutable.Map, or
	     *     - a simple type such as an integer. In the case of the simple type
	     *       this is a shorthand for supplying {"value": v}.
	     */

	    function IndexedEvent(arg1, arg2, arg3) {
	        _classCallCheck(this, IndexedEvent);

	        if (arg1 instanceof IndexedEvent) {
	            var other = arg1;
	            this._d = other._d;
	            return;
	        } else if (arg1 instanceof _immutable2.default.Map) {
	            this._d = arg1;
	            return;
	        }
	        var index = indexFromArgs(arg1, arg3);
	        var data = dataFromArg(arg2);
	        this._d = new _immutable2.default.Map({ index: index, data: data });
	    }

	    _createClass(IndexedEvent, [{
	        key: "toJSON",
	        value: function toJSON() {
	            return {
	                index: this.indexAsString(),
	                data: this.data().toJSON()
	            };
	        }
	    }, {
	        key: "toString",
	        value: function toString() {
	            return JSON.stringify(this.toJSON());
	        }

	        /**
	         * Returns a flat array starting with the timestamp, followed by the values.
	         */

	    }, {
	        key: "toPoint",
	        value: function toPoint() {
	            return [this.indexAsString()].concat(_toConsumableArray(_underscore2.default.values(this.data().toJSON())));
	        }

	        /**
	         * Returns the Index associated with the data in this Event
	         * @return {Index} The Index
	         */

	    }, {
	        key: "index",
	        value: function index() {
	            return this._d.get("index");
	        }

	        /**
	         * Sets the data of the event and returns a new IndexedEvent.
	         */

	    }, {
	        key: "setData",
	        value: function setData(data) {
	            var d = this._d.set("data", dataFromArg(data));
	            return new IndexedEvent(d);
	        }

	        /**
	         * Access the event data
	         * @return {Immutable.Map} Data for the Event
	         */

	    }, {
	        key: "data",
	        value: function data() {
	            return this._d.get("data");
	        }

	        /**
	         * Returns the Index as a string, same as event.index().toString()
	         * @return {string} The Index
	         */

	    }, {
	        key: "indexAsString",
	        value: function indexAsString() {
	            return this.index().asString();
	        }

	        /**
	         * The TimeRange of this data, in UTC, as a string.
	         * @return {string} TimeRange of this data.
	         */

	    }, {
	        key: "timerangeAsUTCString",
	        value: function timerangeAsUTCString() {
	            return this.timerange().toUTCString();
	        }

	        /**
	         * The TimeRange of this data, in Local time, as a string.
	         * @return {string} TimeRange of this data.
	         */

	    }, {
	        key: "timerangeAsLocalString",
	        value: function timerangeAsLocalString() {
	            return this.timerange().toLocalString();
	        }

	        /**
	         * The TimeRange of this data
	         * @return {TimeRange} TimeRange of this data.
	         */

	    }, {
	        key: "timerange",
	        value: function timerange() {
	            return this.index().asTimerange();
	        }

	        /**
	         * The begin time of this Event
	         * @return {Data} Begin time
	         */

	    }, {
	        key: "begin",
	        value: function begin() {
	            return this.timerange().begin();
	        }

	        /**
	         * The end time of this Event
	         * @return {Data} End time
	         */

	    }, {
	        key: "end",
	        value: function end() {
	            return this.timerange().end();
	        }

	        /**
	         * Alias for the begin() time.
	         * @return {Data} Time representing this Event
	         */

	    }, {
	        key: "timestamp",
	        value: function timestamp() {
	            return this.begin();
	        }

	        /**
	         * Get specific data out of the Event. The data will be converted
	         * to a js object. You can use a fieldSpec to address deep data.
	         * A fieldSpec could be "a.b"
	         */

	    }, {
	        key: "get",
	        value: function get() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? ["value"] : arguments[0];

	            var v = void 0;
	            if (_underscore2.default.isArray(fieldSpec)) {
	                v = this.data().getIn(fieldSpec);
	            } else if (_underscore2.default.isString(fieldSpec)) {
	                var searchKeyPath = fieldSpec.split(".");
	                v = this.data().getIn(searchKeyPath);
	            }

	            if (v instanceof _immutable2.default.Map || v instanceof _immutable2.default.List) {
	                return v.toJS();
	            }
	            return v;
	        }
	    }, {
	        key: "value",
	        value: function value(fieldSpec) {
	            return this.get(fieldSpec);
	        }
	    }]);

	    return IndexedEvent;
	}();

	exports.default = IndexedEvent;

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.TimeRangeEvent = undefined;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *  Copyright (c) 2016, The Regents of the University of California,
	through Lawrence Berkeley National Laboratory (subject to receipt
	of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _immutable = __webpack_require__(301);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _range = __webpack_require__(450);

	var _range2 = _interopRequireDefault(_range);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function timeRangeFromArg(arg) {
	    if (arg instanceof _range2.default) {
	        return arg;
	    } else if (_underscore2.default.isArray(arg) && arg.length === 2) {
	        return new _range2.default(arg);
	    } else {
	        throw new Error("Unable to parse timerange. Should be a TimeRange. Got " + arg + ".");
	    }
	}

	function dataFromArg(arg) {
	    var data = void 0;
	    if (_underscore2.default.isObject(arg)) {
	        // Deeply convert the data to Immutable Map
	        data = new _immutable2.default.fromJS(arg);
	    } else if (data instanceof _immutable2.default.Map) {
	        // Copy reference to the data
	        data = arg;
	    } else if (_underscore2.default.isNumber(arg) || _underscore2.default.isString(arg)) {
	        // Just add it to the value key of a new Map
	        // e.g. new Event(t, 25); -> t, {value: 25}
	        data = new _immutable2.default.Map({ value: arg });
	    } else {
	        throw new Error("Unable to interpret event data from " + arg + ".");
	    }
	    return data;
	}

	/**
	 * A TimeRangeEvent uses a TimeRange to specify the range over
	 * which the event occurs and maps that to a data object representing
	 * some measurements or metrics during that time range.
	 *
	 * You supply the timerange as a TimeRange object.
	 *
	 * The data is also specified during construction and me be either:
	 *  1) a Javascript object or simple type
	 *  2) an Immutable.Map.
	 *  3) Simple measurement
	 *
	 * If an Javascript object is provided it will be stored internally as an
	 * Immutable Map. If the data provided is some other simple type (such as an
	 * integer) then it will be equivalent to supplying an object of {value: data}.
	 * Data may also be undefined.
	 *
	 * To get the data out of an TimeRangeEvent instance use `data()`.
	 * It will return an Immutable.Map. Alternatively you can call `toJSON()`
	 * to return a Javascript object representation of the data, while
	 * `toString()` will serialize the entire event to a string.
	 */

	var TimeRangeEvent = exports.TimeRangeEvent = function () {

	    /**
	     * The creation of an TimeRangeEvent is done by combining two parts:
	     * the timerange and the data.
	     *
	     * To construct you specify a TimeRange, along with the data.
	     *
	     * To specify the data you can supply either:
	     *     - a Javascript object containing key values pairs
	     *     - an Immutable.Map, or
	     *     - a simple type such as an integer. In the case of the simple type
	     *       this is a shorthand for supplying {"value": v}.
	     */

	    function TimeRangeEvent(arg1, arg2) {
	        _classCallCheck(this, TimeRangeEvent);

	        if (arg1 instanceof TimeRangeEvent) {
	            var other = arg1;
	            this._d = other._d;
	            return;
	        } else if (arg1 instanceof _immutable2.default.Map) {
	            this._d = arg1;
	            return;
	        }
	        var range = timeRangeFromArg(arg1);
	        var data = dataFromArg(arg2);
	        this._d = new _immutable2.default.Map({ range: range, data: data });
	    }

	    _createClass(TimeRangeEvent, [{
	        key: "toJSON",
	        value: function toJSON() {
	            return {
	                timerange: this.timerange().toJSON(),
	                data: this.data().toJSON()
	            };
	        }
	    }, {
	        key: "toString",
	        value: function toString() {
	            return JSON.stringify(this.toJSON());
	        }

	        //
	        // Access the timerange represented by the index
	        //

	        /**
	         * Returns a flat array starting with the timestamp, followed by the values.
	         */

	    }, {
	        key: "toPoint",
	        value: function toPoint() {
	            return [this.timerange().toJSON()].concat(_toConsumableArray(_underscore2.default.values(this.data().toJSON())));
	        }

	        /**
	         * The TimeRange of this data
	         * @return {TimeRange} TimeRange of this data.
	         */

	    }, {
	        key: "timerange",
	        value: function timerange() {
	            return this._d.get("range");
	        }

	        /**
	         * Access the event data
	         * @return {Immutable.Map} Data for the Event
	         */

	    }, {
	        key: "data",
	        value: function data() {
	            return this._d.get("data");
	        }

	        /**
	         * Sets the data portion of the event and
	         * returns a new TimeRangeEvent.
	         */

	    }, {
	        key: "setData",
	        value: function setData(data) {
	            var d = this._d.set("data", dataFromArg(data));
	            return new TimeRangeEvent(d);
	        }

	        /**
	         * The TimeRange of this data, in UTC, as a string.
	         * @return {string} TimeRange of this data.
	         */

	    }, {
	        key: "timerangeAsUTCString",
	        value: function timerangeAsUTCString() {
	            return this.timerange().toUTCString();
	        }

	        /**
	         * The TimeRange of this data, in Local time, as a string.
	         * @return {string} TimeRange of this data.
	         */

	    }, {
	        key: "timerangeAsLocalString",
	        value: function timerangeAsLocalString() {
	            return this.timerange().toLocalString();
	        }

	        /**
	         * The begin time of this Event
	         * @return {Data} Begin time
	         */

	    }, {
	        key: "begin",
	        value: function begin() {
	            return this.timerange().begin();
	        }

	        /**
	         * The end time of this Event
	         * @return {Data} End time
	         */

	    }, {
	        key: "end",
	        value: function end() {
	            return this.timerange().end();
	        }

	        /**
	         * Alias for the begin() time.
	         * @return {Data} Time representing this Event
	         */

	    }, {
	        key: "timestamp",
	        value: function timestamp() {
	            return this.begin();
	        }
	    }, {
	        key: "humanizeDuration",
	        value: function humanizeDuration() {
	            return this.timerange().humanizeDuration();
	        }

	        /**
	         * Get specific data out of the Event. The data will be converted
	         * to a js object. You can use a fieldSpec to address deep data.
	         * A fieldSpec could be "a.b"
	         */

	    }, {
	        key: "get",
	        value: function get() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? ["value"] : arguments[0];

	            var v = void 0;
	            if (_underscore2.default.isArray(fieldSpec)) {
	                v = this.data().getIn(fieldSpec);
	            } else if (_underscore2.default.isString(fieldSpec)) {
	                var searchKeyPath = fieldSpec.split(".");
	                v = this.data().getIn(searchKeyPath);
	            }

	            if (v instanceof _immutable2.default.Map || v instanceof _immutable2.default.List) {
	                return v.toJS();
	            }
	            return v;
	        }
	    }, {
	        key: "value",
	        value: function value(fieldSpec) {
	            return this.get(fieldSpec);
	        }
	    }]);

	    return TimeRangeEvent;
	}();

	exports.default = TimeRangeEvent;

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.keep = keep;
	exports.sum = sum;
	exports.avg = avg;
	exports.max = max;
	exports.min = min;
	exports.count = count;
	exports.first = first;
	exports.last = last;
	exports.difference = difference;
	exports.median = median;
	exports.stdev = stdev;

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function keep(values) {
	    var result = first(values);
	    values.forEach(function (v) {
	        if (!_underscore2.default.isNull(v) && !_underscore2.default.isUndefined(v) && v !== result) {
	            return null;
	        }
	    });
	    return result;
	} /**
	   *  Copyright (c) 2015, The Regents of the University of California,
	   *  through Lawrence Berkeley National Laboratory (subject to receipt
	   *  of any required approvals from the U.S. Dept. of Energy).
	   *  All rights reserved.
	   *
	   *  This source code is licensed under the BSD-style license found in the
	   *  LICENSE file in the root directory of this source tree.
	   */

	function sum(values) {
	    return _underscore2.default.reduce(values, function (a, b) {
	        return a + b;
	    }, 0);
	}

	function avg(values) {
	    var sum = _underscore2.default.reduce(values, function (a, b) {
	        return a + b;
	    }, 0);
	    return sum / values.length;
	}

	function max(values) {
	    var max = _underscore2.default.max(values);
	    if (_underscore2.default.isFinite(max)) {
	        return max;
	    }
	}

	function min(values) {
	    var min = _underscore2.default.min(values);
	    if (_underscore2.default.isFinite(min)) {
	        return min;
	    }
	}

	function count(values) {
	    return values.length;
	}

	function first(values) {
	    return values.length ? values[0] : undefined;
	}

	function last(values) {
	    return values.length ? values[values.length - 1] : undefined;
	}

	function difference(values) {
	    return _underscore2.default.max(values) - _underscore2.default.min(values);
	}

	function median(values) {
	    var sorted = values.sort();
	    var i = Math.floor(sorted.length / 2);
	    if (sorted.length % 2 === 0) {
	        var a = sorted[i];
	        var b = sorted[i - 1];
	        return (a + b) / 2;
	    } else {
	        return sorted[i];
	    }
	}

	function stdev(values) {
	    var sums = 0;
	    var mean = avg(values);
	    values.forEach(function (v) {
	        return sums += Math.pow(v - mean, 2);
	    });
	    return Math.sqrt(sums / values.length);
	}

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _chai = __webpack_require__(304);

	var _collection = __webpack_require__(458);

	var _collection2 = _interopRequireDefault(_collection);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var eventList1 = [new _event2.default(new Date("2015-04-22T03:30:00Z"), { in: 1, out: 2 }), new _event2.default(new Date("2015-04-22T03:31:00Z"), { in: 3, out: 4 }), new _event2.default(new Date("2015-04-22T03:32:00Z"), { in: 5, out: 6 })]; /**
	                                                                                                                                                                                                                                                  *  Copyright (c) 2015, The Regents of the University of California,
	                                                                                                                                                                                                                                                  *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                  *  of any required approvals from the U.S. Dept. of Energy).
	                                                                                                                                                                                                                                                  *  All rights reserved.
	                                                                                                                                                                                                                                                  *
	                                                                                                                                                                                                                                                  *  This source code is licensed under the BSD-style license found in the
	                                                                                                                                                                                                                                                  *  LICENSE file in the root directory of this source tree.
	                                                                                                                                                                                                                                                  */

	/* global it, describe */
	/* eslint no-unused-expressions: 0 */
	/* eslint-disable max-len */
	/* eslint no-unused-vars: 0 */

	var unorderedEventList = [new _event2.default(new Date("2015-04-22T03:31:00Z"), { in: 3, out: 4 }), new _event2.default(new Date("2015-04-22T03:30:00Z"), { in: 1, out: 2 }), new _event2.default(new Date("2015-04-22T03:32:00Z"), { in: 5, out: 6 })];

	/**
	 * Note the Collections are currently moslty tested through either
	 * the pipeline code or the TimeSeries code.
	 */
	describe("Collections", function () {

	    it("can create a Collection from an event list", function (done) {
	        var collection = new _collection2.default(eventList1);
	        (0, _chai.expect)(collection).to.be.ok;
	        done();
	    });

	    it("can compare a collection and a reference to a collection as being equal", function (done) {
	        var collection = new _collection2.default(eventList1);
	        var refCollection = collection;
	        (0, _chai.expect)(collection).to.equal(refCollection);
	        done();
	    });

	    it("can use the equals() comparator to compare a series and a copy of the series as true", function (done) {
	        var collection = new _collection2.default(eventList1);
	        var copy = new _collection2.default(collection);
	        (0, _chai.expect)(_collection2.default.equal(collection, copy)).to.be.true;
	        done();
	    });

	    it("can use the equals() comparator to compare a collection and a value equivalent collection as false", function (done) {
	        var collection = new _collection2.default(eventList1);
	        var otherSeries = new _collection2.default(eventList1);
	        (0, _chai.expect)(_collection2.default.equal(collection, otherSeries)).to.be.false;
	        done();
	    });

	    it("can use the is() comparator to compare a collection and a value equivalent collection as true", function (done) {
	        var collection = new _collection2.default(eventList1);
	        var otherSeries = new _collection2.default(eventList1);
	        (0, _chai.expect)(_collection2.default.is(collection, otherSeries)).to.be.true;
	        done();
	    });

	    it("can use size() and at() to get to Collection items", function (done) {
	        var collection = new _collection2.default(eventList1);
	        (0, _chai.expect)(collection.size()).to.equal(3);
	        (0, _chai.expect)(_event2.default.is(collection.at(0), eventList1[0])).to.be.true;
	        (0, _chai.expect)(_event2.default.is(collection.at(1), eventList1[1])).to.be.true;
	        (0, _chai.expect)(_event2.default.is(collection.at(2), eventList1[2])).to.be.true;
	        done();
	    });

	    it("can loop (for .. of) over a Collection's events", function (done) {
	        var collection = new _collection2.default(eventList1);
	        var events = [];
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;

	        try {
	            for (var _iterator = collection.events()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                var e = _step.value;

	                events.push(e);
	            }
	        } catch (err) {
	            _didIteratorError = true;
	            _iteratorError = err;
	        } finally {
	            try {
	                if (!_iteratorNormalCompletion && _iterator.return) {
	                    _iterator.return();
	                }
	            } finally {
	                if (_didIteratorError) {
	                    throw _iteratorError;
	                }
	            }
	        }

	        (0, _chai.expect)(events.length).to.equal(3);
	        (0, _chai.expect)(_event2.default.is(events[0], eventList1[0])).to.be.true;
	        (0, _chai.expect)(_event2.default.is(events[1], eventList1[1])).to.be.true;
	        (0, _chai.expect)(_event2.default.is(events[2], eventList1[2])).to.be.true;
	        done();
	    });

	    it("can add an event and get a new Collection back", function (done) {
	        var collection = new _collection2.default(eventList1);
	        var event = new _event2.default(new Date("2015-04-22T03:32:00Z"), { in: 1, out: 2 });
	        var newCollection = collection.addEvent(event);
	        (0, _chai.expect)(newCollection.size()).to.equal(4);
	        done();
	    });

	    it("can sort the collection by time", function (done) {
	        var collection = new _collection2.default(unorderedEventList);
	        var sortedCollection = collection.sortByTime();
	        (0, _chai.expect)(sortedCollection.at(1).timestamp().getTime() > sortedCollection.at(0).timestamp().getTime()).to.be.true;
	        done();
	    });

	    it("can determine if a collection is chronological", function (done) {
	        var collection = new _collection2.default(unorderedEventList);
	        (0, _chai.expect)(collection.isChronological()).to.be.false;
	        var sortedCollection = collection.sortByTime();
	        (0, _chai.expect)(sortedCollection.isChronological()).to.be.true;
	        done();
	    });
	});

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _immutable = __webpack_require__(301);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _range = __webpack_require__(450);

	var _range2 = _interopRequireDefault(_range);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _pipelineInBounded = __webpack_require__(459);

	var _pipelineInBounded2 = _interopRequireDefault(_pipelineInBounded);

	var _functions = __webpack_require__(456);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * A collection is an abstraction for a bag of Events.
	 *
	 * You typically construct a Collection from a list of Events, which
	 * may be either within an Immutable.List or an Array. You can also
	 * copy another Collection or create an empty one.
	 *
	 * You can mutate a collection in a number of ways. In each instance
	 * a new Collection will be returned.
	 *
	 * Basic operations on the list of events are also possible. You
	 * can iterate over the collection with a for..of loop, get the size()
	 * of the collection and access a specific element with at().
	 *
	 * You can also perform aggregations of the events, map them, filter them
	 * clean them, etc.
	 *
	 * Collections form the backing structure for a TimeSeries, as well as
	 * in Pipeline event processing. They are an instance of a BoundedIn, so
	 * they can be used as a pipeline source.
	 */

	var Collection = function (_BoundedIn) {
	    _inherits(Collection, _BoundedIn);

	    /**
	     * Construct a new Collection.
	     *
	     * @param  {Collection|array|Immutable.List}  arg1 Initial data for
	     * the collection. If arg1 is another Collection, this will act as
	     * a copy constructor.
	     * @param  {Boolean} [arg2] When using a the copy constructor
	     * this specified whether or not to also copy all the events in this
	     * collection. Generally you'll want to let it copy the events.
	     * If arg1 is an Immutable.List, then arg2 will specify the type of
	     * the Events accepted into the Collection. This form is generally
	     * used internally.
	     *
	     * @return {Collection} The constructed Collection.
	     */

	    function Collection(arg1, arg2) {
	        _classCallCheck(this, Collection);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Collection).call(this));

	        _this._id = _underscore2.default.uniqueId("collection-");
	        _this._eventList = null; // The events in this collection
	        _this._type = null; // The type (class) of the events in this collection

	        if (!arg1) {
	            _this._eventList = new _immutable2.default.List();
	        } else if (arg1 instanceof Collection) {
	            var other = arg1;
	            var copyEvents = arg2 || true;
	            // copyEvents is whether to copy events from other, default is true
	            if (_underscore2.default.isUndefined(copyEvents) || copyEvents === true) {
	                _this._eventList = other._eventList;
	                _this._type = other._type;
	            } else {
	                _this._eventList = new _immutable2.default.List();
	            }
	        } else if (_underscore2.default.isArray(arg1)) {
	            (function () {
	                var events = [];
	                arg1.forEach(function (e) {
	                    _this._check(e);
	                    events.push(e._d);
	                });
	                _this._eventList = new _immutable2.default.List(events);
	            })();
	        } else if (_immutable2.default.List.isList(arg1)) {
	            var type = arg2;
	            if (!type) {
	                throw new Error("No type supplied to Collection constructor");
	            }
	            _this._type = type;
	            _this._eventList = arg1;
	        }
	        return _this;
	    }

	    /**
	     * Returns the Collection as a regular JSON object.
	     *
	     * @return {Object} The JSON representation of this Collection
	     */


	    _createClass(Collection, [{
	        key: "toJSON",
	        value: function toJSON() {
	            return this._eventList.toJS();
	        }

	        /**
	         * Serialize out the Collection as a string. This will be the
	         * string representation of `toJSON()`.
	         *
	         * @return {string} The Collection serialized as a string.
	         */

	    }, {
	        key: "toString",
	        value: function toString() {
	            return JSON.stringify(this.toJSON());
	        }

	        /**
	         * Returns the Event object type in this Collection.
	         *
	         * Since Collections may only have one type of event (`Event`, `IndexedEvent`
	         * or `TimeRangeEvent`) this will return that type. If no events
	         * have been added to the Collection it will return `undefined`.
	         *
	         * @return {Event|IndexedEvent|TimeRangeEvent} - The class of the type
	         *                                               of events contained in
	         *                                               this Collection.
	         */

	    }, {
	        key: "type",
	        value: function type() {
	            return this._type;
	        }

	        /**
	         * Returns the number of events in this collection
	         *
	         * @return {number} Count of events
	         */

	    }, {
	        key: "size",
	        value: function size() {
	            return this._eventList.size;
	        }

	        /**
	         * Returns the number of valid items in this collection.
	         *
	         * Uses the fieldSpec to look up values in all events.
	         * It then counts the number that are considered valid, which
	         * specifically are not NaN, undefined or null.
	         *
	         * @return {number} Count of valid events
	         */

	    }, {
	        key: "sizeValid",
	        value: function sizeValid() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            var count = 0;
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;

	            try {
	                for (var _iterator = this.events()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var e = _step.value;

	                    if (_event2.default.isValidValue(e, fieldSpec)) count++;
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }

	            return count;
	        }

	        /**
	         * Returns an event in the Collection by its position.
	         * @example
	         * ```
	         * for (let row=0; row < series.size(); row++) {
	         *   const event = series.at(row);
	         *   console.log(event.toString());
	         * }
	         * ```
	         * @param  {number} pos The position of the event
	         * @return {Event|TimeRangeEvent|IndexedEvent}     Returns the
	         * event at the pos specified.
	         */

	    }, {
	        key: "at",
	        value: function at(pos) {
	            var event = new this._type(this._eventList.get(pos));
	            return event;
	        }

	        /**
	         * Returns an event in the Collection by its time. This is the same
	         * as calling `bisect` first and then using `at` with the index.
	         *
	         * @param  {Date} time The time of the event.
	         * @return {Event|TimeRangeEvent|IndexedEvent}
	         */

	    }, {
	        key: "atTime",
	        value: function atTime(time) {
	            var pos = this.bisect(time);
	            if (pos && pos < this.size()) {
	                return this.at(pos);
	            }
	        }

	        /**
	         * Returns the first event in the Collection.
	         *
	         * @return {Event|TimeRangeEvent|IndexedEvent}
	         */

	    }, {
	        key: "atFirst",
	        value: function atFirst() {
	            if (this.size()) {
	                return this.at(0);
	            }
	        }

	        /**
	         * Returns the last event in the Collection.
	         *
	         * @return {Event|TimeRangeEvent|IndexedEvent}
	         */

	    }, {
	        key: "atLast",
	        value: function atLast() {
	            if (this.size()) {
	                return this.at(this.size() - 1);
	            }
	        }

	        /**
	         * Returns the index that bisects the Collection at the time specified.
	         *
	         * @param  {Date}    t   The time to bisect the Collection with
	         * @param  {number}  b   The position to begin searching at
	         *
	         * @return {number}      The row number that is the greatest, but still below t.
	         */

	    }, {
	        key: "bisect",
	        value: function bisect(t, b) {
	            var tms = t.getTime();
	            var size = this.size();
	            var i = b || 0;

	            if (!size) {
	                return undefined;
	            }

	            for (; i < size; i++) {
	                var ts = this.at(i).timestamp().getTime();
	                if (ts > tms) {
	                    return i - 1 >= 0 ? i - 1 : 0;
	                } else if (ts === tms) {
	                    return i;
	                }
	            }
	            return i - 1;
	        }

	        /**
	         * Generator to return all the events in the Collection.
	         *
	         * @example
	         * ```
	         * for (let event of collection.events()) {
	         *     console.log(event.toString());
	         * }
	         * ```
	         */

	    }, {
	        key: "events",
	        value: regeneratorRuntime.mark(function events() {
	            var i;
	            return regeneratorRuntime.wrap(function events$(_context) {
	                while (1) {
	                    switch (_context.prev = _context.next) {
	                        case 0:
	                            i = 0;

	                        case 1:
	                            if (!(i < this.size())) {
	                                _context.next = 7;
	                                break;
	                            }

	                            _context.next = 4;
	                            return this.at(i);

	                        case 4:
	                            i++;
	                            _context.next = 1;
	                            break;

	                        case 7:
	                        case "end":
	                            return _context.stop();
	                    }
	                }
	            }, events, this);
	        })
	    }, {
	        key: "setEvents",
	        value: function setEvents(events) {
	            var result = new Collection(this);
	            result._eventList = events;
	            return result;
	        }

	        /**
	         * Returns the raw Immutable event list
	         *
	         * @return {Immutable.List} All events as an Immutable List.
	         */

	    }, {
	        key: "eventList",
	        value: function eventList() {
	            return this._eventList;
	        }

	        /**
	         * Returns a Javascript array representation of the event list
	         *
	         * @return {Array} All events as a Javascript Array.
	         */

	    }, {
	        key: "eventListAsArray",
	        value: function eventListAsArray() {
	            var events = [];
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;

	            try {
	                for (var _iterator2 = this.events()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                    var e = _step2.value;

	                    events.push(e);
	                }
	            } catch (err) {
	                _didIteratorError2 = true;
	                _iteratorError2 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                        _iterator2.return();
	                    }
	                } finally {
	                    if (_didIteratorError2) {
	                        throw _iteratorError2;
	                    }
	                }
	            }

	            return events;
	        }

	        //
	        // Sorting
	        //

	    }, {
	        key: "sortByTime",
	        value: function sortByTime() {
	            var _this2 = this;

	            return this.setEvents(this._eventList.sortBy(function (event) {
	                var e = new _this2._type(event);
	                return e.timestamp().getTime();
	            }));
	        }

	        //
	        // Series range
	        //

	        /**
	         * From the range of times, or Indexes within the TimeSeries, return
	         * the extents of the TimeSeries as a TimeRange. This is currently implemented
	         * by walking the events.
	         *
	         * @return {TimeRange} The extents of the TimeSeries
	         */

	    }, {
	        key: "range",
	        value: function range() {
	            var min = void 0;
	            var max = void 0;
	            var _iteratorNormalCompletion3 = true;
	            var _didIteratorError3 = false;
	            var _iteratorError3 = undefined;

	            try {
	                for (var _iterator3 = this.events()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                    var e = _step3.value;

	                    if (!min || e.begin() < min) min = e.begin();
	                    if (!max || e.end() > max) max = e.end();
	                }
	            } catch (err) {
	                _didIteratorError3 = true;
	                _iteratorError3 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                        _iterator3.return();
	                    }
	                } finally {
	                    if (_didIteratorError3) {
	                        throw _iteratorError3;
	                    }
	                }
	            }

	            if (min && max) return new _range2.default(min, max);
	        }

	        //
	        // Collection mutation
	        //

	        /**
	         * Adds an event to the collection, returns a new Collection. The event added
	         * can be an Event, TimeRangeEvent or IndexedEvent, but it must be of the
	         * same type as other events within the Collection.
	         *
	         * @param {Event|TimeRangeEvent|IndexedEvent} event The event being added.
	         *
	         * @return {Collection} A new, modified, Collection containing the new event.
	         */

	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            this._check(event);
	            var result = new Collection(this);
	            result._eventList = this._eventList.push(event._d);
	            return result;
	        }

	        /**
	         * Perform a slice of events within the Collection, returns a new
	         * Collection representing a portion of this TimeSeries from begin up to
	         * but not including end.
	         *
	         * @param {Number} begin   The position to begin slicing
	         * @param {Number} end     The position to end slicing
	         *
	         * @return {Collection}    The new, sliced, Collection.
	         */

	    }, {
	        key: "slice",
	        value: function slice(begin, end) {
	            return new Collection(this._eventList.slice(begin, end), this._type);
	        }

	        /**
	         * Filter the collection's event list with the supplied function
	         *
	         * @param {function} func The filter function, that should return
	         *                        true or false when passed in an event.
	         *
	         * @return {Collection}   A new, filtered, Collection.
	         */

	    }, {
	        key: "filter",
	        value: function filter(filterFunc) {
	            var filteredEventList = [];
	            var _iteratorNormalCompletion4 = true;
	            var _didIteratorError4 = false;
	            var _iteratorError4 = undefined;

	            try {
	                for (var _iterator4 = this.events()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	                    var e = _step4.value;

	                    if (filterFunc(e)) {
	                        filteredEventList.push(e);
	                    }
	                }
	            } catch (err) {
	                _didIteratorError4 = true;
	                _iteratorError4 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion4 && _iterator4.return) {
	                        _iterator4.return();
	                    }
	                } finally {
	                    if (_didIteratorError4) {
	                        throw _iteratorError4;
	                    }
	                }
	            }

	            return new Collection(filteredEventList);
	        }

	        /**
	         * Map the collection's event list to a new event list with
	         * the supplied function.
	         * @param {function} func The mapping function, that should return
	         * a new event when passed in the old event.
	         * @return {Collection} A new, modified, Collection.
	         */

	    }, {
	        key: "map",
	        value: function map(mapFunc) {
	            var result = [];
	            var _iteratorNormalCompletion5 = true;
	            var _didIteratorError5 = false;
	            var _iteratorError5 = undefined;

	            try {
	                for (var _iterator5 = this.events()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
	                    var e = _step5.value;

	                    result.push(mapFunc(e));
	                }
	            } catch (err) {
	                _didIteratorError5 = true;
	                _iteratorError5 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion5 && _iterator5.return) {
	                        _iterator5.return();
	                    }
	                } finally {
	                    if (_didIteratorError5) {
	                        throw _iteratorError5;
	                    }
	                }
	            }

	            return new Collection(result);
	        }

	        /**
	         * Returns a new Collection by testing the fieldSpec
	         * values for being valid (not NaN, null or undefined).
	         *
	         * The resulting Collection will be clean (for that fieldSpec).
	         *
	         * @param {string}      fieldSpec The field to test
	         * @return {Collection}           A new, modified, Collection.
	         */

	    }, {
	        key: "clean",
	        value: function clean() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            var fs = this._fieldSpecToArray(fieldSpec);
	            var filteredEvents = [];
	            var _iteratorNormalCompletion6 = true;
	            var _didIteratorError6 = false;
	            var _iteratorError6 = undefined;

	            try {
	                for (var _iterator6 = this.events()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
	                    var e = _step6.value;

	                    if (_event2.default.isValidValue(e, fs)) {
	                        filteredEvents.push(e);
	                    }
	                }
	            } catch (err) {
	                _didIteratorError6 = true;
	                _iteratorError6 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion6 && _iterator6.return) {
	                        _iterator6.return();
	                    }
	                } finally {
	                    if (_didIteratorError6) {
	                        throw _iteratorError6;
	                    }
	                }
	            }

	            return new Collection(filteredEvents);
	        }

	        //
	        // Aggregate the event list to a single value
	        //

	        /**
	         * Returns the number of events in this collection
	         *
	         * @return {number} The number of events
	         */

	    }, {
	        key: "count",
	        value: function count() {
	            return this.size();
	        }

	        /**
	         * Returns the first value in the Collection for the fieldspec
	         *
	         * @param {string} fieldSpec The field to fetch
	         *
	         * @return {number} The first value
	         */

	    }, {
	        key: "first",
	        value: function first() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            return this.aggregate(_functions.first, fieldSpec);
	        }

	        /**
	         * Returns the last value in the Collection for the fieldspec
	         *
	         * @param {string} fieldSpec The field to fetch
	         *
	         * @return {number} The last value
	         */

	    }, {
	        key: "last",
	        value: function last() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            return this.aggregate(_functions.last, fieldSpec);
	        }

	        /**
	         * Returns the sum Collection for the fieldspec
	         *
	         * @param {string} fieldSpec The field to sum over the collection
	         *
	         * @return {number} The sum
	         */

	    }, {
	        key: "sum",
	        value: function sum() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            return this.aggregate(_functions.sum, fieldSpec);
	        }

	        /**
	         * Aggregates the events down to their average
	         *
	         * @param  {String} fieldSpec The field to average over the collection
	         *
	         * @return {number}           The average
	         */

	    }, {
	        key: "avg",
	        value: function avg() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            return this.aggregate(_functions.avg, fieldSpec);
	        }

	        /**
	         * Aggregates the events down to their maximum value
	         *
	         * @param  {String} fieldSpec The field to find the max within the collection
	         *
	         * @return {number}           The max value for the field
	         */

	    }, {
	        key: "max",
	        value: function max() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            return this.aggregate(_functions.max, fieldSpec);
	        }

	        /**
	         * Aggregates the events down to their minimum value
	         *
	         * @param  {String} fieldSpec The field to find the min within the collection
	         *
	         * @return {number}           The min value for the field
	         */

	    }, {
	        key: "min",
	        value: function min() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            return this.aggregate(_functions.min, fieldSpec);
	        }

	        /**
	         * Aggregates the events down to their mean (same as avg)
	         *
	         * @param  {String} fieldSpec The field to find the mean of within the collection
	         *
	         * @return {number}           The mean
	         */

	    }, {
	        key: "mean",
	        value: function mean() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            return this.avg(fieldSpec);
	        }

	        /**
	         * Aggregates the events down to their medium value
	         *
	         * @param  {String} fieldSpec The field to aggregate over
	         *
	         * @return {number}           The resulting median value
	         */

	    }, {
	        key: "median",
	        value: function median() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            return this.aggregate(_functions.median, fieldSpec);
	        }

	        /**
	         * Aggregates the events down to their stdev
	         *
	         * @param  {String} fieldSpec The field to aggregate over
	         *
	         * @return {number}           The resulting stdev value
	         */

	    }, {
	        key: "stdev",
	        value: function stdev() {
	            var fieldSpec = arguments.length <= 0 || arguments[0] === undefined ? "value" : arguments[0];

	            return this.aggregate(_functions.stdev, fieldSpec);
	        }

	        /**
	         * Aggregates the events down using a user defined function to
	         * do the reduction.
	         *
	         * @param  {function} func    User defined reduction function. Will be
	         *                            passed a list of values. Should return a
	         *                            singe value.
	         * @param  {String} fieldSpec The field to aggregate over
	         *
	         * @return {number}           The resulting value
	         */

	    }, {
	        key: "aggregate",
	        value: function aggregate(func) {
	            var fieldSpec = arguments.length <= 1 || arguments[1] === undefined ? "value" : arguments[1];

	            var fs = this._fieldSpecToArray(fieldSpec);
	            var result = _event2.default.mapReduce(this.eventListAsArray(), [fs], func);
	            return result[fs];
	        }
	    }, {
	        key: "isChronological",
	        value: function isChronological() {
	            var result = true;
	            var t = void 0;
	            var _iteratorNormalCompletion7 = true;
	            var _didIteratorError7 = false;
	            var _iteratorError7 = undefined;

	            try {
	                for (var _iterator7 = this.events()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
	                    var e = _step7.value;

	                    if (!t) {
	                        t = e.timestamp().getTime();
	                    } else {
	                        if (e.timestamp() < t) {
	                            result = false;
	                        }
	                        t = e.timestamp();
	                    }
	                }
	            } catch (err) {
	                _didIteratorError7 = true;
	                _iteratorError7 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion7 && _iterator7.return) {
	                        _iterator7.return();
	                    }
	                } finally {
	                    if (_didIteratorError7) {
	                        throw _iteratorError7;
	                    }
	                }
	            }

	            return result;
	        }

	        /**
	         * Internal function to take a fieldSpec and
	         * return it as an array if it isn't already one. Using
	         * arrays in inner loops is faster than splitting
	         * a string repeatedly.
	         *
	         * @private
	         */

	    }, {
	        key: "_fieldSpecToArray",
	        value: function _fieldSpecToArray(fieldSpec) {
	            if (_underscore2.default.isArray(fieldSpec)) {
	                return fieldSpec;
	            } else if (_underscore2.default.isString(fieldSpec)) {
	                return fieldSpec.split(".");
	            }
	        }

	        /**
	         * STATIC
	         */

	        /**
	         * Static function to compare two collections to each other. If the collections
	         * are of the same instance as each other then equals will return true.
	         *
	         * @param  {Collection} collection1
	         * @param  {Collection} collection2
	         *
	         * @return {bool} result
	         */

	    }], [{
	        key: "equal",
	        value: function equal(collection1, collection2) {
	            return collection1._type === collection2._type && collection1._eventList === collection2._eventList;
	        }

	        /**
	         * Static function to compare two collections to each other. If the collections
	         * are of the same value as each other then equals will return true.
	         *
	         * @param  {Collection} collection1
	         * @param  {Collection} collection2
	         *
	         * @return {bool} result
	         */

	    }, {
	        key: "is",
	        value: function is(collection1, collection2) {
	            return collection1._type === collection2._type && _immutable2.default.is(collection1._eventList, collection2._eventList);
	        }
	    }]);

	    return Collection;
	}(_pipelineInBounded2.default);

	exports.default = Collection;

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _pipelineIn = __webpack_require__(460);

	var _pipelineIn2 = _interopRequireDefault(_pipelineIn);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var BoundedIn = function (_PipelineIn) {
	    _inherits(BoundedIn, _PipelineIn);

	    function BoundedIn() {
	        _classCallCheck(this, BoundedIn);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(BoundedIn).call(this));
	    }

	    _createClass(BoundedIn, [{
	        key: "start",
	        value: function start() {
	            throw new Error("start() not supported on bounded source.");
	        }
	    }, {
	        key: "stop",
	        value: function stop() {
	            throw new Error("stop() not supported on bounded source.");
	        }
	    }, {
	        key: "onEmit",
	        value: function onEmit() {
	            throw new Error("You can not setup a listener to a bounded source.");
	        }
	    }]);

	    return BoundedIn;
	}(_pipelineIn2.default);

	exports.default = BoundedIn;

/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _timerangeevent = __webpack_require__(455);

	var _timerangeevent2 = _interopRequireDefault(_timerangeevent);

	var _indexedevent = __webpack_require__(454);

	var _indexedevent2 = _interopRequireDefault(_indexedevent);

	var _observable = __webpack_require__(461);

	var _observable2 = _interopRequireDefault(_observable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  LICENSE file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var PipelineIn = function (_Observable) {
	    _inherits(PipelineIn, _Observable);

	    function PipelineIn() {
	        _classCallCheck(this, PipelineIn);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PipelineIn).call(this));

	        _this._id = _underscore2.default.uniqueId("in-");
	        _this._type = null; // The type (class) of the events in this In
	        return _this;
	    }

	    _createClass(PipelineIn, [{
	        key: "_check",
	        value: function _check(e) {
	            if (!this._type) {
	                if (e instanceof _event2.default) {
	                    this._type = _event2.default;
	                } else if (e instanceof _timerangeevent2.default) {
	                    this._type = _timerangeevent2.default;
	                } else if (e instanceof _indexedevent2.default) {
	                    this._type = _indexedevent2.default;
	                }
	            } else {
	                if (!(e instanceof this._type)) {
	                    throw new Error("Homogeneous events expected.");
	                }
	            }
	        }
	    }]);

	    return PipelineIn;
	}(_observable2.default);

	exports.default = PipelineIn;

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	opyright (c) 2016, The Regents of the University of California,
	through Lawrence Berkeley National Laboratory (subject to receipt
	of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * Base class for objects in the processing chain which
	 * need other object to listen to them. It provides a basic
	 * interface to define the relationships and to emit events
	 * to the interested observers.
	 */

	var Observable = function () {
	    function Observable() {
	        _classCallCheck(this, Observable);

	        this._id = _underscore2.default.uniqueId("id-");
	        this._observers = [];
	    }

	    _createClass(Observable, [{
	        key: "emit",
	        value: function emit(event) {
	            this._observers.forEach(function (observer) {
	                observer.addEvent(event);
	            });
	        }
	    }, {
	        key: "flush",
	        value: function flush() {
	            this._observers.forEach(function (observer) {
	                observer.flush();
	            });
	        }
	    }, {
	        key: "addObserver",
	        value: function addObserver(observer) {
	            var shouldAdd = true;
	            this._observers.forEach(function (o) {
	                if (o === observer) {
	                    shouldAdd = false;
	                }
	            });

	            if (shouldAdd) this._observers.push(observer);
	        }
	    }, {
	        key: "hasObservers",
	        value: function hasObservers() {
	            return this._observers.length > 0;
	        }
	    }]);

	    return Observable;
	}();

	exports.default = Observable;

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _chai = __webpack_require__(304);

	var _pipeline = __webpack_require__(463);

	var _pipelineInUnbounded = __webpack_require__(464);

	var _pipelineInUnbounded2 = _interopRequireDefault(_pipelineInUnbounded);

	var _pipelineOutEvent = __webpack_require__(476);

	var _pipelineOutEvent2 = _interopRequireDefault(_pipelineOutEvent);

	var _pipelineOutCollection = __webpack_require__(478);

	var _pipelineOutCollection2 = _interopRequireDefault(_pipelineOutCollection);

	var _collection = __webpack_require__(458);

	var _collection2 = _interopRequireDefault(_collection);

	var _series = __webpack_require__(472);

	var _series2 = _interopRequireDefault(_series);

	var _range = __webpack_require__(450);

	var _range2 = _interopRequireDefault(_range);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _timerangeevent = __webpack_require__(455);

	var _timerangeevent2 = _interopRequireDefault(_timerangeevent);

	var _indexedevent = __webpack_require__(454);

	var _indexedevent2 = _interopRequireDefault(_indexedevent);

	var _functions = __webpack_require__(456);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 *  Copyright (c) 2015, The Regents of the University of California,
	 *  through Lawrence Berkeley National Laboratory (subject to receipt
	 *  of any required approvals from the U.S. Dept. of Energy).
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree.
	 */

	/* global it, describe */
	/* eslint no-unused-expressions: 0 */
	/* eslint-disable max-len */
	/* eslint no-unused-vars: 0 */

	var eventList1 = [new _event2.default(new Date("2015-04-22T03:30:00Z"), { in: 1, out: 2 }), new _event2.default(new Date("2015-04-22T03:31:00Z"), { in: 3, out: 4 }), new _event2.default(new Date("2015-04-22T03:32:00Z"), { in: 5, out: 6 })];

	/*
	const eventList2 = [
	    new Event(new Date("2015-04-22T03:30:00Z"), {in: 1, out: 2}),
	    new Event(new Date("2015-04-22T03:31:00Z"), {in: 3, out: 4}),
	    new IndexedEvent("2015-04-22", {in: 5, out: 6})
	];
	*/

	var sept2014Data = {
	    name: "traffic",
	    columns: ["time", "value"],
	    points: [[1409529600000, 80], [1409533200000, 88], [1409536800000, 52], [1409540400000, 80], [1409544000000, 26], [1409547600000, 37], [1409551200000, 6], [1409554800000, 32], [1409558400000, 69], [1409562000000, 21], [1409565600000, 6], [1409569200000, 54], [1409572800000, 88], [1409576400000, 41], [1409580000000, 35], [1409583600000, 43], [1409587200000, 84], [1409590800000, 32], [1409594400000, 41], [1409598000000, 57], [1409601600000, 27], [1409605200000, 50], [1409608800000, 13], [1409612400000, 63], [1409616000000, 58], [1409619600000, 80], [1409623200000, 59], [1409626800000, 96], [1409630400000, 2], [1409634000000, 20], [1409637600000, 64], [1409641200000, 7], [1409644800000, 50], [1409648400000, 88], [1409652000000, 34], [1409655600000, 31], [1409659200000, 16], [1409662800000, 38], [1409666400000, 94], [1409670000000, 78], [1409673600000, 86], [1409677200000, 13], [1409680800000, 34], [1409684400000, 29], [1409688000000, 48], [1409691600000, 80], [1409695200000, 30], [1409698800000, 15], [1409702400000, 62], [1409706000000, 66], [1409709600000, 44], [1409713200000, 94], [1409716800000, 78], [1409720400000, 29], [1409724000000, 21], [1409727600000, 4], [1409731200000, 83], [1409734800000, 15], [1409738400000, 89], [1409742000000, 53], [1409745600000, 70], [1409749200000, 41], [1409752800000, 47], [1409756400000, 30], [1409760000000, 68], [1409763600000, 89], [1409767200000, 29], [1409770800000, 17], [1409774400000, 38], [1409778000000, 67], [1409781600000, 75], [1409785200000, 89], [1409788800000, 47], [1409792400000, 82], [1409796000000, 33], [1409799600000, 67], [1409803200000, 93], [1409806800000, 86], [1409810400000, 97], [1409814000000, 19], [1409817600000, 19], [1409821200000, 31], [1409824800000, 56], [1409828400000, 19], [1409832000000, 43], [1409835600000, 29], [1409839200000, 72], [1409842800000, 27], [1409846400000, 21], [1409850000000, 88], [1409853600000, 18], [1409857200000, 30], [1409860800000, 46], [1409864400000, 34], [1409868000000, 31], [1409871600000, 20], [1409875200000, 45], [1409878800000, 17], [1409882400000, 24], [1409886000000, 84], [1409889600000, 6], [1409893200000, 91], [1409896800000, 82], [1409900400000, 71], [1409904000000, 97], [1409907600000, 43], [1409911200000, 38], [1409914800000, 1], [1409918400000, 71], [1409922000000, 50], [1409925600000, 19], [1409929200000, 19], [1409932800000, 86], [1409936400000, 65], [1409940000000, 93], [1409943600000, 35]]
	};

	var inOutData = {
	    name: "traffic",
	    columns: ["time", "in", "out", "perpendicular"],
	    points: [[1409529600000, 80, 37, 1000], [1409533200000, 88, 22, 1001], [1409536800000, 52, 56, 1002]]
	};

	describe("Pipeline", function () {

	    describe("test processor using offsetBy", function () {

	        it("can transform process events with an offsetBy chain", function (done) {

	            var events = eventList1;
	            var collection = new _collection2.default(events);

	            var c1 = void 0;
	            var c2 = void 0;

	            var p1 = (0, _pipeline.Pipeline)().from(collection) // <-- This links to the src collection
	            .offsetBy(1, "in") //     - Transforms to a new collection
	            .offsetBy(2) //     - And then to another collection
	            .to(_pipelineOutCollection2.default, function (c) {
	                return c1 = c;
	            }); // --> Specified output, evokes batch op
	            var p2 = p1 //            ||
	            .offsetBy(3, "in") //     - Transforms to a new collection
	            .to(_pipelineOutCollection2.default, function (c) {
	                c2 = c;
	            }); // --> Specified output, evokes batch op

	            (0, _chai.expect)(c1.size()).to.equal(3);
	            (0, _chai.expect)(c1.at(0).get("in")).to.equal(4);
	            (0, _chai.expect)(c1.at(1).get("in")).to.equal(6);
	            (0, _chai.expect)(c1.at(2).get("in")).to.equal(8);

	            (0, _chai.expect)(c2.size()).to.equal(3);
	            (0, _chai.expect)(c2.at(0).get("in")).to.equal(7);
	            (0, _chai.expect)(c2.at(1).get("in")).to.equal(9);
	            (0, _chai.expect)(c2.at(2).get("in")).to.equal(11);

	            done();
	        });

	        it("can stream from an unbounded source directly to output", function (done) {
	            var out = void 0;
	            var events = eventList1;
	            var source = new _pipelineInUnbounded2.default();

	            var p = (0, _pipeline.Pipeline)().from(source).to(_pipelineOutCollection2.default, function (c) {
	                return out = c;
	            });

	            source.addEvent(events[0]);
	            source.addEvent(events[1]);

	            (0, _chai.expect)(out.size()).to.equal(2);

	            done();
	        });

	        it("can stream events with an offsetBy pipeline", function (done) {
	            var out = void 0;
	            var events = eventList1;
	            var source = new _pipelineInUnbounded2.default();

	            var p = (0, _pipeline.Pipeline)().from(source).offsetBy(3, "in").to(_pipelineOutCollection2.default, function (c) {
	                return out = c;
	            });

	            source.addEvent(events[0]);
	            source.addEvent(events[1]);

	            (0, _chai.expect)(out.size()).to.equal(2);
	            (0, _chai.expect)(out.at(0).get("in")).to.equal(4);
	            (0, _chai.expect)(out.at(1).get("in")).to.equal(6);
	            done();
	        });

	        it("can stream events with two offsetBy pipelines...", function (done) {
	            var out1 = void 0,
	                out2 = void 0;
	            var events = eventList1;
	            var source = new _pipelineInUnbounded2.default();

	            var p1 = (0, _pipeline.Pipeline)().from(source).offsetBy(1, "in").offsetBy(2).to(_pipelineOutCollection2.default, function (c) {
	                return out1 = c;
	            });

	            var p2 = p1.offsetBy(3, "in").to(_pipelineOutCollection2.default, function (c) {
	                return out2 = c;
	            });

	            source.addEvent(events[0]);

	            (0, _chai.expect)(out1.size()).to.equal(1);
	            (0, _chai.expect)(out2.size()).to.equal(1);

	            (0, _chai.expect)(out1.at(0).get("in")).to.equal(4);
	            (0, _chai.expect)(out2.at(0).get("in")).to.equal(7);

	            done();
	        });
	    });

	    describe("TimeSeries pipeline", function () {
	        var data = {
	            name: "traffic",
	            columns: ["time", "value", "status"],
	            points: [[1400425947000, 52, "ok"], [1400425948000, 18, "ok"], [1400425949000, 26, "fail"], [1400425950000, 93, "offline"]]
	        };

	        it("can transform process events with an offsetBy chain", function (done) {
	            var out = void 0;
	            var timeseries = new _series2.default(data);

	            var p1 = (0, _pipeline.Pipeline)().from(timeseries.collection()).offsetBy(1, "value").offsetBy(2).to(_pipelineOutCollection2.default, function (c) {
	                return out = c;
	            });

	            (0, _chai.expect)(out.at(0).get()).to.equal(55);
	            (0, _chai.expect)(out.at(1).get()).to.equal(21);
	            (0, _chai.expect)(out.at(2).get()).to.equal(29);
	            (0, _chai.expect)(out.at(3).get()).to.equal(96);
	            done();
	        });

	        it("can transform process events with an offsetBy chain straight from a TimeSeries", function (done) {
	            var out = void 0;
	            var timeseries = new _series2.default(data);

	            timeseries.pipeline().offsetBy(1, "value").offsetBy(2).to(_pipelineOutCollection2.default, function (c) {
	                return out = c;
	            });

	            (0, _chai.expect)(out.at(0).get()).to.equal(55);
	            (0, _chai.expect)(out.at(1).get()).to.equal(21);
	            (0, _chai.expect)(out.at(2).get()).to.equal(29);
	            (0, _chai.expect)(out.at(3).get()).to.equal(96);
	            done();
	        });

	        it("should be able to batch a TimeSeries with an offset", function (done) {
	            var timeseries = new _series2.default(sept2014Data);
	            var outputEvents = [];

	            (0, _pipeline.Pipeline)().from(timeseries).offsetBy(1, "value").offsetBy(2).to(_pipelineOutEvent2.default, function (c) {
	                return outputEvents.push(c);
	            });

	            (0, _chai.expect)(outputEvents.length).to.equal(timeseries.size());
	            done();
	        });

	        it("should be able to batch a TimeSeries with no processing nodes", function (done) {
	            var source = new _series2.default(sept2014Data);
	            var outputEvents = [];

	            (0, _pipeline.Pipeline)().from(source).to(_pipelineOutEvent2.default, function (c) {
	                return outputEvents.push(c);
	            });

	            (0, _chai.expect)(outputEvents.length).to.equal(source.size());
	            done();
	        });
	    });

	    describe("aggregation", function () {

	        it("can aggregate events into by windowed avg", function (done) {

	            var eventsIn = [];
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 7, 57, 0), { in: 3, out: 1 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 7, 58, 0), { in: 9, out: 2 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 7, 59, 0), { in: 6, out: 6 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 8, 0, 0), { in: 4, out: 7 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 8, 1, 0), { in: 5, out: 9 }));

	            var input = new _pipelineInUnbounded2.default();
	            var result = {};

	            var p = (0, _pipeline.Pipeline)().from(input).windowBy("1h") // 1 day fixed windows
	            .emitOn("eachEvent") // emit result on each event
	            .aggregate({ in: _functions.avg, out: _functions.avg }).to(_pipelineOutEvent2.default, function (event) {
	                result["" + event.index()] = event;
	            });

	            eventsIn.forEach(function (event) {
	                return input.addEvent(event);
	            });

	            (0, _chai.expect)(result["1h-396199"].get("in")).to.equal(6);
	            (0, _chai.expect)(result["1h-396199"].get("out")).to.equal(3);
	            (0, _chai.expect)(result["1h-396200"].get("in")).to.equal(4.5);
	            (0, _chai.expect)(result["1h-396200"].get("out")).to.equal(8);

	            done();
	        });

	        it("an collect together events and aggregate", function (done) {

	            var eventsIn = [];
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 7, 57, 0), { type: "a", in: 3, out: 1 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 7, 58, 0), { type: "a", in: 9, out: 2 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 7, 59, 0), { type: "b", in: 6, out: 6 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 8, 0, 0), { type: "a", in: 4, out: 7 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 8, 1, 0), { type: "b", in: 5, out: 9 }));

	            var input = new _pipelineInUnbounded2.default();
	            var result = {};

	            var p = (0, _pipeline.Pipeline)().from(input).groupBy("type").windowBy("1h") // 1 day fixed windows
	            .emitOn("eachEvent") // emit result on each event
	            .aggregate({ type: _functions.keep, in: _functions.avg, out: _functions.avg }).to(_pipelineOutEvent2.default, function (event) {
	                result[event.index() + ":" + event.get("type")] = event;
	            });

	            eventsIn.forEach(function (event) {
	                return input.addEvent(event);
	            });

	            (0, _chai.expect)(result["1h-396199:a"].get("in")).to.equal(6);
	            (0, _chai.expect)(result["1h-396199:a"].get("out")).to.equal(1.5);
	            (0, _chai.expect)(result["1h-396199:b"].get("in")).to.equal(6);
	            (0, _chai.expect)(result["1h-396199:b"].get("out")).to.equal(6);
	            (0, _chai.expect)(result["1h-396200:a"].get("in")).to.equal(4);
	            (0, _chai.expect)(result["1h-396200:a"].get("out")).to.equal(7);
	            (0, _chai.expect)(result["1h-396200:b"].get("in")).to.equal(5);
	            (0, _chai.expect)(result["1h-396200:b"].get("out")).to.equal(9);

	            done();
	        });

	        it("can aggregate events by windowed avg and convert them to Events", function (done) {

	            var eventsIn = [];
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 1, 57, 0), { in: 3, out: 1 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 1, 58, 0), { in: 9, out: 2 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 1, 59, 0), { in: 6, out: 6 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 2, 0, 0), { in: 4, out: 7 }));
	            eventsIn.push(new _event2.default(Date.UTC(2015, 2, 14, 2, 1, 0), { in: 5, out: 9 }));

	            var input = new _pipelineInUnbounded2.default();
	            var result = {};

	            (0, _pipeline.Pipeline)().from(input).windowBy("1h") // 1 day fixed windows
	            .emitOn("eachEvent") // emit result on each event
	            .aggregate({ in: _functions.avg, out: _functions.avg }).asTimeRangeEvents({ alignment: "lag" }).to(_pipelineOutEvent2.default, function (event) {
	                result["" + +event.timestamp()] = event;
	            });

	            eventsIn.forEach(function (event) {
	                return input.addEvent(event);
	            });

	            (0, _chai.expect)(result["1426294800000"].get("in")).to.equal(6);
	            (0, _chai.expect)(result["1426294800000"].get("out")).to.equal(3);
	            (0, _chai.expect)(result["1426298400000"].get("in")).to.equal(4.5);
	            (0, _chai.expect)(result["1426298400000"].get("out")).to.equal(8);

	            done();
	        });
	    });

	    describe("Pipeline event conversion", function () {

	        var timestamp = new Date(1426316400000);
	        var e = new _event2.default(timestamp, 3);

	        it("should be able to convert from an Event to an TimeRangeEvent, using a duration, in front of the event", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asTimeRangeEvents({ alignment: "front", duration: "1h" }).to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"timerange\":[1426316400000,1426320000000],\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(e);
	        });

	        it("should be able to convert from an Event to an TimeRangeEvent, using a duration, surrounding the event", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asTimeRangeEvents({ alignment: "center", duration: "1h" }).to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"timerange\":[1426314600000,1426318200000],\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(e);
	        });

	        it("should be able to convert from an Event to an TimeRangeEvent, using a duration, in behind of the event", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asTimeRangeEvents({ alignment: "behind", duration: "1h" }).to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"timerange\":[1426312800000,1426316400000],\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(e);
	        });

	        it("should be able to convert from an Event to an IndexedEvent", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asIndexedEvents({ duration: "1h" }).to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"index\":\"1h-396199\",\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(e);
	        });

	        it("should be able to convert from an Event to an Event as a noop", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asEvents().to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)(event).to.equal(e);
	                done();
	            });
	            stream.addEvent(e);
	        });
	    });

	    describe("TimeRangeEvent conversion", function () {

	        var timeRange = new _range2.default([1426316400000, 1426320000000]);
	        var timeRangeEvent = new _timerangeevent2.default(timeRange, 3);

	        it("should be able to convert from an TimeRangeEvent to an Event, using the center of the range", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asEvents({ alignment: "center" }).to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"time\":1426318200000,\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(timeRangeEvent);
	        });

	        it("should be able to convert from an TimeRangeEvent to an Event, using beginning of the range", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asEvents({ alignment: "lag" }).to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"time\":1426316400000,\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(timeRangeEvent);
	        });

	        it("should be able to convert from an TimeRangeEvent to an Event, using the end of the range", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asEvents({ alignment: "lead" }).to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"time\":1426320000000,\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(timeRangeEvent);
	        });

	        it("should be able to convert from an TimeRangeEvent to an TimeRangeEvent as a noop", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asTimeRangeEvents().to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)(event).to.equal(timeRangeEvent);
	                done();
	            });
	            stream.addEvent(timeRangeEvent);
	        });
	    });

	    describe("IndexedEvent conversion", function () {

	        var indexedEvent = new _indexedevent2.default("1h-396199", 3);

	        it("should be able to convert from an IndexedEvent to an Event, using the center of the range", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asEvents({ alignment: "center" }).to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"time\":1426318200000,\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(indexedEvent);
	        });

	        it("should be able to convert from an IndexedEvent to an Event, using beginning of the range", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asEvents({ alignment: "lag" }).to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"time\":1426316400000,\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(indexedEvent);
	        });

	        it("should be able to convert from an IndexedEvent to an Event, using the end of the range", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asEvents({ alignment: "lead" }).to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"time\":1426320000000,\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(indexedEvent);
	        });

	        it("should be able to convert from an IndexedEvent to an TimeRangeEvent", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asTimeRangeEvents().to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)("" + event).to.equal("{\"timerange\":[1426316400000,1426320000000],\"data\":{\"value\":3}}");
	                done();
	            });
	            stream.addEvent(indexedEvent);
	        });

	        it("should be able to convert from an IndexedEvent to an IndexedEvent as a noop", function (done) {
	            var stream = new _pipelineInUnbounded2.default();
	            (0, _pipeline.Pipeline)().from(stream).asIndexedEvents().to(_pipelineOutEvent2.default, function (event) {
	                (0, _chai.expect)(event).to.equal(indexedEvent);
	                done();
	            });
	            stream.addEvent(indexedEvent);
	        });
	    });

	    describe("Filtering events in batch", function () {

	        it("should be able to filter a TimeSeries", function (done) {
	            var outputEvents = [];
	            var timeseries = new _series2.default(sept2014Data);
	            (0, _pipeline.Pipeline)().from(timeseries).filter(function (e) {
	                return e.value() > 65;
	            }).to(_pipelineOutEvent2.default, function (c) {
	                return outputEvents.push(c);
	            });
	            (0, _chai.expect)(outputEvents.length).to.equal(39);
	            done();
	        });
	    });

	    describe("Selecting subset of columns from a TimeSeries in batch", function () {

	        it("should be able select a single column", function (done) {
	            var result = void 0;
	            var timeseries = new _series2.default(inOutData);
	            (0, _pipeline.Pipeline)().from(timeseries).select("in").to(_pipelineOutCollection2.default, function (c) {
	                return result = new _series2.default({ name: "newTimeseries", collection: c });
	            });
	            (0, _chai.expect)(result.columns()).to.eql(["in"]);
	            done();
	        });

	        it("should be able select a subset of columns", function (done) {
	            var result = void 0;
	            var timeseries = new _series2.default(inOutData);
	            (0, _pipeline.Pipeline)().from(timeseries).select(["out", "perpendicular"]).to(_pipelineOutCollection2.default, function (c) {
	                return result = new _series2.default({ name: "subset", collection: c });
	            });
	            (0, _chai.expect)(result.columns()).to.eql(["out", "perpendicular"]);
	            done();
	        });
	    });

	    describe("Collapsing in batch", function () {

	        it("should be able collapse a subset of columns", function (done) {

	            var timeseries = new _series2.default(inOutData);
	            (0, _pipeline.Pipeline)().from(timeseries).collapse(["in", "out"], "in_out_sum", _functions.sum).emitOn("flush").to(_pipelineOutCollection2.default, function (c) {
	                var ts = new _series2.default({ name: "subset", collection: c });
	                (0, _chai.expect)(ts.at(0).get("in_out_sum")).to.equal(117);
	                (0, _chai.expect)(ts.at(1).get("in_out_sum")).to.equal(110);
	                (0, _chai.expect)(ts.at(2).get("in_out_sum")).to.equal(108);
	                done();
	            }, /*flush=*/true);
	        });

	        it("should be able chain collapse operations together", function (done) {

	            var timeseries = new _series2.default(inOutData);
	            (0, _pipeline.Pipeline)().from(timeseries).collapse(["in", "out"], "in_out_sum", _functions.sum, true).collapse(["in", "out"], "in_out_max", _functions.max, true).emitOn("flush").to(_pipelineOutCollection2.default, function (c) {

	                var ts = new _series2.default({ name: "subset", collection: c });

	                (0, _chai.expect)(ts.at(0).get("in_out_sum")).to.equal(117);
	                (0, _chai.expect)(ts.at(1).get("in_out_sum")).to.equal(110);
	                (0, _chai.expect)(ts.at(2).get("in_out_sum")).to.equal(108);

	                (0, _chai.expect)(ts.at(0).get("in_out_max")).to.equal(80);
	                (0, _chai.expect)(ts.at(1).get("in_out_max")).to.equal(88);
	                (0, _chai.expect)(ts.at(2).get("in_out_max")).to.equal(56);

	                done();
	            }, /*flush=*/true);
	        });

	        it("should be able sum element-wise and then find the max", function (done) {
	            var timeseries = new _series2.default(inOutData);
	            (0, _pipeline.Pipeline)().from(timeseries).collapse(["in", "out"], "total", _functions.sum).emitOn("flush").aggregate({ total: _functions.max }).to(_pipelineOutEvent2.default, function (e) {
	                (0, _chai.expect)(e.get("total")).to.equal(117);
	                done();
	            }, /*flush=*/true);
	        });
	    });

	    describe("Batch pipeline with return value", function () {

	        it("should be able sum element-wise and then find the max and get the result out", function (done) {
	            var timeseries = new _series2.default(inOutData);
	            var result = (0, _pipeline.Pipeline)().from(timeseries).emitOn("flush").collapse(["in", "out"], "total", _functions.sum).aggregate({ total: _functions.max }).toEventList();

	            //const maxTotal = pipeline.latestValue();
	            //expect(maxTotal).to.equal(117);
	            done();
	        });

	        it("should be able to collect first 10 events over 65 and under 65", function (done) {
	            var result = {};
	            var timeseries = new _series2.default(sept2014Data);

	            var collections = (0, _pipeline.Pipeline)().from(timeseries).emitOn("flush").groupBy(function (e) {
	                return e.value() > 65 ? "high" : "low";
	            }).take(10).toKeyedCollections();

	            //expect(result["low"].size()).to.equal(10);
	            //expect(result["high"].size()).to.equal(10);
	            done();
	        });
	    });

	    describe("Mapping in batch", function () {

	        it("should be able map one event to a modified event", function (done) {

	            var timeseries = new _series2.default(inOutData);
	            (0, _pipeline.Pipeline)().from(timeseries).map(function (e) {
	                return e.setData({ in: e.get("out"), out: e.get("in") });
	            }).emitOn("flush").to(_pipelineOutCollection2.default, function (c) {
	                var ts = new _series2.default({ name: "subset", collection: c });
	                (0, _chai.expect)(ts.at(0).get("in")).to.equal(37);
	                (0, _chai.expect)(ts.at(0).get("out")).to.equal(80);
	                (0, _chai.expect)(ts.size()).to.equal(3);
	                done();
	            }, /*flush=*/true);
	        });
	    });

	    describe("Take n events in batch", function () {

	        it("should be able to take 10 events from a TimeSeries", function (done) {
	            var result = void 0;
	            var timeseries = new _series2.default(sept2014Data);
	            (0, _pipeline.Pipeline)().from(timeseries).take(10).to(_pipelineOutCollection2.default, function (c) {
	                return result = new _series2.default({
	                    name: "result",
	                    collection: c
	                });
	            });
	            (0, _chai.expect)(result.size()).to.equal(10);
	            done();
	        });

	        it("should be able to aggregate in batch global window", function (done) {
	            var result = void 0;
	            var timeseries = new _series2.default(sept2014Data);

	            var p = (0, _pipeline.Pipeline)().from(timeseries).filter(function (e) {
	                return e.value() < 50;
	            }).take(10).aggregate({ value: _functions.avg }).to(_pipelineOutEvent2.default, function (event) {
	                result = event;
	            }, true);

	            (0, _chai.expect)(result.timerange().toString()).to.equal("[1409547600000,1409594400000]");
	            (0, _chai.expect)(result.value()).to.equal(29.4);
	            done();
	        });

	        it("should be able to collect first 10 events over 65", function (done) {
	            var result = void 0;
	            var timeseries = new _series2.default(sept2014Data);

	            var p = (0, _pipeline.Pipeline)().from(timeseries).filter(function (e) {
	                return e.value() > 65;
	            }).take(10).to(_pipelineOutCollection2.default, function (collection) {
	                result = collection;
	            }, true);

	            (0, _chai.expect)(result.size()).to.equal(10);
	            (0, _chai.expect)(result.at(0).value()).to.equal(88);
	            (0, _chai.expect)(result.at(4).value()).to.equal(84);
	            (0, _chai.expect)(result.at(9).value()).to.equal(78);
	            done();
	        });

	        it("should be able to collect first 10 events over 65 and under 65", function (done) {
	            var result = {};
	            var timeseries = new _series2.default(sept2014Data);

	            var p = (0, _pipeline.Pipeline)().from(timeseries).groupBy(function (e) {
	                return e.value() > 65 ? "high" : "low";
	            }).take(10).to(_pipelineOutCollection2.default, function (collection, windowKey, groupByKey) {
	                result[groupByKey] = collection;
	            }, true);

	            (0, _chai.expect)(result["low"].size()).to.equal(10);
	            (0, _chai.expect)(result["high"].size()).to.equal(10);
	            done();
	        });

	        it("should be able to collect first 10 events, then split over 65 and under 65", function (done) {
	            var result = {};
	            var timeseries = new _series2.default(sept2014Data);

	            var p = (0, _pipeline.Pipeline)().from(timeseries).take(10).groupBy(function (e) {
	                return e.value() > 65 ? "high" : "low";
	            }).to(_pipelineOutCollection2.default, function (collection, windowKey, groupByKey) {
	                result[groupByKey] = collection;
	            }, true);

	            (0, _chai.expect)(result["high"].size()).to.equal(3);
	            (0, _chai.expect)(result["low"].size()).to.equal(7);
	            done();
	        });

	        it("should be able to count the split over 65 and under 65", function (done) {
	            var result = {};
	            var timeseries = new _series2.default(sept2014Data);

	            var p = (0, _pipeline.Pipeline)().from(timeseries).take(10).groupBy(function (e) {
	                return e.value() > 65 ? "high" : "low";
	            }).emitOn("flush") // emit result on each event
	            .count(function (count, windowKey, groupByKey) {
	                return result[groupByKey] = count;
	            });

	            (0, _chai.expect)(result["high"]).to.equal(3);
	            (0, _chai.expect)(result["low"]).to.equal(7);
	            done();
	        });
	    });
	});

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.isPipeline = exports.Pipeline = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	opyright (c) 2016, The Regents of the University of California,
	through Lawrence Berkeley National Laboratory (subject to receipt
	of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	
	his source code is licensed under the BSD-style license found in the
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *  LICENSE file in the root directory of this source tree.
	

	var _immutable = __webpack_require__(301);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _pipelineInUnbounded = __webpack_require__(464);

	var _pipelineInUnbounded2 = _interopRequireDefault(_pipelineInUnbounded);

	var _pipelineInBounded = __webpack_require__(459);

	var _pipelineInBounded2 = _interopRequireDefault(_pipelineInBounded);

	var _processor = __webpack_require__(465);

	var _processor2 = _interopRequireDefault(_processor);

	var _offset = __webpack_require__(466);

	var _offset2 = _interopRequireDefault(_offset);

	var _filter = __webpack_require__(467);

	var _filter2 = _interopRequireDefault(_filter);

	var _taker = __webpack_require__(468);

	var _taker2 = _interopRequireDefault(_taker);

	var _aggregator = __webpack_require__(469);

	var _aggregator2 = _interopRequireDefault(_aggregator);

	var _converter = __webpack_require__(471);

	var _converter2 = _interopRequireDefault(_converter);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _series = __webpack_require__(472);

	var _series2 = _interopRequireDefault(_series);

	var _timerangeevent = __webpack_require__(455);

	var _timerangeevent2 = _interopRequireDefault(_timerangeevent);

	var _indexedevent = __webpack_require__(454);

	var _indexedevent2 = _interopRequireDefault(_indexedevent);

	var _selector = __webpack_require__(473);

	var _selector2 = _interopRequireDefault(_selector);

	var _collapser = __webpack_require__(474);

	var _collapser2 = _interopRequireDefault(_collapser);

	var _mapper = __webpack_require__(475);

	var _mapper2 = _interopRequireDefault(_mapper);

	var _pipelineOutEvent = __webpack_require__(476);

	var _pipelineOutEvent2 = _interopRequireDefault(_pipelineOutEvent);

	var _pipelineOutCollection = __webpack_require__(478);

	var _pipelineOutCollection2 = _interopRequireDefault(_pipelineOutCollection);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * A runner is used to extract the chain of processing operations
	 * from a Pipeline given an Output. The idea here is to traverse
	 * back up the Pipeline(s) and build an execution chain.
	 *
	 * When the runner is started, events from the "in" are streamed
	 * into the execution chain and outputed into the "out".
	 *
	 * Rebuilding in this way enables us to handle connected pipelines:
	 *
	 *                     |--
	 *  in --> pipeline ---.
	 *                     |----pipeline ---| -> out
	 *
	 * The runner breaks this into the following for execution:
	 *
	 *   _input        - the "in" or from() bounded input of
	 *                   the upstream pipeline
	 *   _processChain - the process nodes in the pipelines
	 *                   leading to the out
	 *   _output       - the supplied output destination for
	 *                   the batch process
	 *
	 * NOTE: There's no current way to merge multiple sources, though
	 *       a time series has a TimeSeries.merge() static method for
	 *       this purpose.
	 */

	var Runner = function () {

	    /**
	     * Create a new batch runner.
	     * @param  {Pipeline} pipeline The pipeline to run
	     * @param  {PipelineOut} output   The output driving this runner
	     */

	    function Runner(pipeline, output) {
	        var _this = this;

	        _classCallCheck(this, Runner);

	        this._output = output;
	        this._pipeline = pipeline;

	        //
	        // We use the pipeline's chain() function to walk the
	        // DAG back up the tree to the "in" to:
	        // 1) assemble a list of process nodes that feed into
	        //    this pipeline, the processChain
	        // 2) determine the _input
	        //
	        // TODO: we do not currently support merging, so this is
	        // a linear chain.
	        //

	        var processChain = [];
	        if (pipeline.last()) {
	            processChain = pipeline.last().chain();
	            this._input = processChain[0].pipeline().in();
	        } else {
	            this._input = pipeline.in();
	        }

	        //
	        // Using the list of nodes in the tree that will be involved in
	        // our processing we can build an execution chain. This is the
	        // chain of processor clones, linked together, for our specific
	        // processing pipeline. We run this execution chain later by
	        // evoking start().
	        //

	        this._executionChain = [this._output];
	        var prev = this._output;
	        processChain.forEach(function (p) {
	            if (p instanceof _processor2.default) {
	                var processor = p.clone();
	                if (prev) processor.addObserver(prev);
	                _this._executionChain.push(processor);
	                prev = processor;
	            }
	        });
	    }

	    /**
	     * Start the runner
	     * @param  {Boolean} force Force a flush at the end of the batch source
	     *                         to cause any buffers to emit.
	     */


	    _createClass(Runner, [{
	        key: "start",
	        value: function start() {
	            var force = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];


	            // Clear any results ready for the run
	            this._pipeline.clearResults();

	            //
	            // The head is the first process node in the execution chain.
	            // To process the source through the execution chain we add
	            // each event from the input to the head.
	            //

	            var head = this._executionChain.pop();
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;

	            try {
	                for (var _iterator = this._input.events()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var e = _step.value;

	                    head.addEvent(e);
	                }

	                //
	                // The runner indicates that it is finished with the bounded
	                // data by sending a flush() call down the chain. If force is
	                // set to false (the default) this is never called.
	                //
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }

	            if (force) {
	                head.flush();
	            }
	        }
	    }]);

	    return Runner;
	}();

	/**
	 * A pipeline manages a processing chain, for either batch or stream processing
	 * of collection data.
	 */


	var Pipeline = function () {

	    /**
	     * Build a new Pipeline.
	     *
	     * @param  {Pipeline|Immutable.Map|null} [arg] May be either:
	     *  * a Pipeline (copy contructor)
	     *  * an Immutable.Map, in which case the internal state of the
	     *    Pipeline will be contructed from the Map
	     *  * not specified
	     *
	     * Usually you would initialize a Pipeline using the factory
	     * function, rather than this object directly with `new`.
	     *
	     * @example
	     * ```
	     * import { Pipeline } from "pondjs";
	     * const p = Pipeline()...`
	     * ```
	     *
	     * @return {Pipeline} The Pipeline
	     */

	    function Pipeline(arg) {
	        _classCallCheck(this, Pipeline);

	        if (arg instanceof Pipeline) {
	            var other = arg;
	            this._d = other._d;
	        } else if (arg instanceof _immutable2.default.Map) {
	            this._d = arg;
	        } else {
	            this._d = new _immutable2.default.Map({
	                type: null,
	                in: null,
	                first: null,
	                last: null,
	                groupBy: function groupBy() {
	                    return "";
	                },
	                windowType: "global",
	                windowDuration: null,
	                emitOn: "eachEvent"
	            });
	        }
	        this._results = [];
	    }

	    //
	    // Accessors to the current Pipeline state
	    //

	    _createClass(Pipeline, [{
	        key: "in",
	        value: function _in() {
	            return this._d.get("in");
	        }
	    }, {
	        key: "mode",
	        value: function mode() {
	            return this._d.get("mode");
	        }
	    }, {
	        key: "first",
	        value: function first() {
	            return this._d.get("first");
	        }
	    }, {
	        key: "last",
	        value: function last() {
	            return this._d.get("last");
	        }
	    }, {
	        key: "getWindowType",
	        value: function getWindowType() {
	            return this._d.get("windowType");
	        }
	    }, {
	        key: "getWindowDuration",
	        value: function getWindowDuration() {
	            return this._d.get("windowDuration");
	        }
	    }, {
	        key: "getGroupBy",
	        value: function getGroupBy() {
	            return this._d.get("groupBy");
	        }
	    }, {
	        key: "getEmitOn",
	        value: function getEmitOn() {
	            return this._d.get("emitOn");
	        }

	        //
	        // Results
	        //

	    }, {
	        key: "clearResults",
	        value: function clearResults() {
	            this._resultsDone = false;
	            this._results = null;
	        }
	    }, {
	        key: "addResult",
	        value: function addResult(arg1, arg2) {
	            if (!this._results) {
	                if (_underscore2.default.isString(arg1) && arg2) {
	                    this._results = {};
	                } else {
	                    this._results = [];
	                }
	            }

	            if (_underscore2.default.isString(arg1) && arg2) {
	                this._results[arg1] = arg2;
	            } else {
	                this._results.push(arg1);
	            }
	            this._resultsDone = false;
	        }
	    }, {
	        key: "resultsDone",
	        value: function resultsDone() {
	            this._resultsDone = true;
	        }

	        //
	        // Pipeline mutations
	        //

	        /**
	         * Setting the In for the Pipeline returns a new Pipeline
	         *
	         * @private
	         */

	    }, {
	        key: "_setIn",
	        value: function _setIn(input) {
	            var mode = void 0;
	            var source = input;
	            if (input instanceof _series2.default) {
	                mode = "batch";
	                source = input.collection();
	            } else if (input instanceof _pipelineInBounded2.default) {
	                mode = "batch";
	            } else if (input instanceof _pipelineInUnbounded2.default) {
	                mode = "stream";
	            } else {
	                throw new Error("Unknown input type", input);
	            }

	            var d = this._d.withMutations(function (map) {
	                map.set("in", source).set("mode", mode);
	            });

	            return new Pipeline(d);
	        }

	        /**
	         * Set the first processing node pointed to, returning
	         * a new Pipeline. The original pipeline will still point
	         * to its orginal processing node.
	         *
	         * @private
	         */

	    }, {
	        key: "_setFirst",
	        value: function _setFirst(n) {
	            var d = this._d.set("first", n);
	            return new Pipeline(d);
	        }

	        /**
	         * Set the last processing node pointed to, returning
	         * a new Pipeline. The original pipeline will still point
	         * to its orginal processing node.
	         *
	         * @private
	         */

	    }, {
	        key: "_setLast",
	        value: function _setLast(n) {
	            var d = this._d.set("last", n);
	            return new Pipeline(d);
	        }

	        /**
	         * @private
	         */

	    }, {
	        key: "_append",
	        value: function _append(processor) {
	            var first = this.first();
	            var last = this.last();

	            if (!first) first = processor;
	            if (last) last.addObserver(processor);
	            last = processor;

	            var d = this._d.withMutations(function (map) {
	                map.set("first", first).set("last", last);
	            });
	            return new Pipeline(d);
	        }

	        //
	        // Pipeline state chained methods
	        //

	        /**
	         * Set the window, returning a new Pipeline. The argument here
	         * is an object with {type, duration}.
	         *
	         * Window `w` may be:
	         *  * A fixed interval: "fixed"
	         *  * A calendar interval: "day", "month" or "year"
	         *  * ...
	         *
	         * duration is of the form:
	         *  * "30s" or "1d" etc (supports seconds (s), minutes (m), hours (h))
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "windowBy",
	        value: function windowBy(w) {
	            var type = void 0,
	                duration = void 0;
	            if (_underscore2.default.isString(w)) {
	                if (w === "daily" || w === "monthly" || w === "yearly") {
	                    type = w;
	                } else {
	                    // assume fixed window with size w
	                    type = "fixed";
	                    duration = w;
	                }
	            } else if (_underscore2.default.isObject(w)) {
	                type = w.type;
	                duration = w.duration;
	            } else {
	                type = "global";
	                duration = null;
	            }

	            var d = this._d.withMutations(function (map) {
	                map.set("windowType", type).set("windowDuration", duration);
	            });

	            return new Pipeline(d);
	        }

	        /**
	         * Remove windowing from the Pipeline. This will
	         * return the pipeline to no window grouping. This is
	         * useful if you have first done some aggregated by
	         * some window size and then wish to collect together
	         * the all resulting events.
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "clearWindow",
	        value: function clearWindow() {
	            return this.windowBy();
	        }

	        /**
	         * Sets a new groupBy expression. Returns a new Pipeline.
	         *
	         * Grouping is a state set on the Pipeline. Operations downstream
	         * of the group specification will use that state. For example, an
	         * aggregation would occur over any grouping specified.
	         *
	         * @param {function|array|string} k The key to group by.
	         * You can groupBy using a function `(event) => return key`,
	         * a fieldSpec (a field name, or dot delimitted path to a field),
	         * or a array of fieldSpecs
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "groupBy",
	        value: function groupBy(k) {
	            var grp = void 0;
	            var groupBy = k || "value";
	            if (_underscore2.default.isFunction(groupBy)) {
	                // group using a user defined function
	                // (event) => key
	                grp = groupBy;
	            } else if (_underscore2.default.isArray(groupBy)) {
	                // group by several column values
	                grp = function grp(e) {
	                    return _underscore2.default.map(groupBy, function (c) {
	                        return "" + e.get(c);
	                    }).join("::");
	                };
	            } else if (_underscore2.default.isString(groupBy)) {
	                // group by a column value
	                grp = function grp(e) {
	                    return "" + e.get(groupBy);
	                };
	            } else {
	                // Reset to no grouping
	                grp = function grp() {
	                    return "";
	                };
	            }

	            var d = this._d.withMutations(function (map) {
	                map.set("groupBy", grp);
	            });

	            return new Pipeline(d);
	        }

	        /**
	         * Remove the grouping from the pipeline. In other words
	         * recombine the events.
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "clearGroupBy",
	        value: function clearGroupBy() {
	            return this.groupBy();
	        }

	        /**
	         * Sets the condition under which an accumulated collection will
	         * be emitted. If specified before an aggregation this will control
	         * when the resulting event will be emitted relative to the
	         * window accumulation. Current options are:
	         *  * to emit on every event, or
	         *  * just when the collection is complete, or
	         *  * when a flush signal is received, either manually calling done(),
	         *    or at the end of a bounded source
	         *
	         * The difference will depend on the output you want, how often
	         * you want to get updated, and if you need to get a partial state.
	         * There's currently no support for late data or watermarks. If an
	         * event passes comes in after a collection window, that collection
	         * is considered finished.
	         *
	         * @param {string} trigger A string indicating how to trigger a
	         * Collection should be emitted. May be:
	         *     * "eachEvent" - when a new event comes in, all currently
	         *                     maintained collections will emit their result
	         *     * "discard"   - when a collection is to be discarded,
	         *                     first it will emit. But only then.
	         *     * "flush"     - when a flush signal is received
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "emitOn",
	        value: function emitOn(trigger) {
	            var d = this._d.set("emitOn", trigger);
	            return new Pipeline(d);
	        }

	        //
	        // I/O
	        //

	        /**
	         * The source to get events from. The source needs to be able to
	         * iterate its events using `for..of` loop for bounded Ins, or
	         * be able to emit() for unbounded Ins. The actual batch, or stream
	         * connection occurs when an output is defined with `to()`.
	         *
	         * Pipelines can be chained together since a source may be another
	         * Pipeline.
	         *
	         * @param {BoundedIn|UnboundedIn|Pipeline} src The source for the
	         *                                             Pipeline, or another
	         *                                             Pipeline.
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "from",
	        value: function from(src) {
	            if (src instanceof Pipeline) {
	                var pipelineIn = src.in();
	                return this._setIn(pipelineIn);
	            } else {
	                return this._setIn(src);
	            }
	        }
	    }, {
	        key: "toEventList",
	        value: function toEventList() {
	            return this.to(_pipelineOutEvent2.default);
	        }
	    }, {
	        key: "toKeyedCollections",
	        value: function toKeyedCollections() {
	            return this.to(_pipelineOutCollection2.default);
	        }

	        /**
	         * Sets up the destination sink for the pipeline.
	         *
	         * For a batch mode connection, i.e. one with a Bounded source,
	         * the output is connected to a clone of the parts of the Pipeline dependencies
	         * that lead to this output. This is done by a Runner. The source input is
	         * then iterated over to process all events into the pipeline and though to the Out.
	         *
	         * For stream mode connections, the output is connected and from then on
	         * any events added to the input will be processed down the pipeline to
	         * the out.
	         *
	         * @example
	         * ```
	         * const p = Pipeline()
	         *  ...
	         *  .to(EventOut, {}, event => {
	         *      result[`${event.index()}`] = event;
	         *  });
	         * ```
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "to",
	        value: function to(arg1, arg2, arg3) {
	            var Out = arg1;
	            var observer = void 0;
	            var options = {};

	            if (_underscore2.default.isFunction(arg2)) {
	                observer = arg2;
	            } else if (_underscore2.default.isObject(arg2)) {
	                options = arg2;
	                observer = arg3;
	            }

	            if (!this.in()) {
	                throw new Error("Tried to eval pipeline without a In. Missing from() in chain?");
	            }

	            var out = new Out(this, options, observer);

	            if (this.mode() === "batch") {
	                var runner = new Runner(this, out);
	                runner.start(true);
	                if (this._resultsDone && !observer) {
	                    return this._results;
	                }
	            } else if (this.mode() === "stream") {
	                var _out = new Out(this, options, observer);
	                if (this.first()) {
	                    this.in().addObserver(this.first());
	                }
	                if (this.last()) {
	                    this.last().addObserver(_out);
	                } else {
	                    this.in().addObserver(_out);
	                }
	            }

	            return this;
	        }

	        /**
	         * Outputs the count of events
	         *
	         * @param  {function}  observer The callback function. This will be
	         *                              passed the count, the windowKey and
	         *                              the groupByKey
	         * @param  {Boolean} force    Flush at the end of processing batch
	         *                            events, output again with possibly partial
	         *                            result.
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "count",
	        value: function count(observer) {
	            var force = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

	            return this.to(_pipelineOutCollection2.default, function (collection, windowKey, groupByKey) {
	                observer(collection.size(), windowKey, groupByKey);
	            }, force);
	        }

	        //
	        // Processors
	        //

	        /**
	         * Processor to offset a set of fields by a value. Mostly used for
	         * testing processor and pipeline operations with a simple operation.
	         *
	         * @param  {number} by              The amount to offset by
	         * @param  {string|array} fieldSpec The field(s)
	         *
	         * @return {Pipeline}               The modified Pipeline
	         */

	    }, {
	        key: "offsetBy",
	        value: function offsetBy(by, fieldSpec) {
	            var p = new _offset2.default(this, {
	                by: by,
	                fieldSpec: fieldSpec,
	                prev: this.last() ? this.last() : this
	            });

	            return this._append(p);
	        }

	        /**
	         * Uses the current Pipeline windowing and grouping
	         * state to build collections of events and aggregate them.
	         *
	         * `IndexedEvent`s will be emitted out of the aggregator based
	         * on the `emitOn` state of the Pipeline.
	         *
	         * To specify what part of the incoming events should
	         * be aggregated together you specify a `fields`
	         * object. This is a map from fieldName to operator.
	         *
	         * @example
	         *
	         * ```
	         * import { Pipeline, EventOut, functions } from "pondjs";
	         * const { avg } = functions;
	         *
	         * const p = Pipeline()
	         *   .from(input)
	         *   .windowBy("1h")           // 1 day fixed windows
	         *   .emitOn("eachEvent")      // emit result on each event
	         *   .aggregate({in: avg, out: avg})
	         *   .asEvents()
	         *   .to(EventOut, {}, event => {
	         *      result[`${event.index()}`] = event; // Result
	         *   });
	         * ```
	         *
	         * @param  {object} fields Fields and operators to be aggregated
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "aggregate",
	        value: function aggregate(fields) {
	            var p = new _aggregator2.default(this, {
	                fields: fields,
	                prev: this.last() ? this.last() : this
	            });
	            return this._append(p);
	        }

	        /**
	         * Converts incoming TimeRangeEvents or IndexedEvents to
	         * Events. This is helpful since some processors will
	         * emit TimeRangeEvents or IndexedEvents, which may be
	         * unsuitable for some applications.
	         *
	         * @param  {object} options To convert to an Event you need
	         * to convert a time range to a single time. There are three options:
	         *  1. use the beginning time (options = {alignment: "lag"})
	         *  2. use the center time (options = {alignment: "center"})
	         *  3. use the end time (options = {alignment: "lead"})
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "asEvents",
	        value: function asEvents(options) {
	            var type = _event2.default;
	            var p = new _converter2.default(this, _extends({
	                type: type
	            }, options, {
	                prev: this.last() ? this.last() : this
	            }));

	            return this._append(p);
	        }

	        /**
	         * Map the event stream using an operator
	         *
	         * @param  {function} op A function that returns a new Event
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "map",
	        value: function map(op) {
	            var p = new _mapper2.default(this, {
	                op: op,
	                prev: this.last() ? this.last() : this
	            });

	            return this._append(p);
	        }

	        /**
	         * Filter the event stream using an operator
	         *
	         * @param  {function} op A function that returns true or false
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "filter",
	        value: function filter(op) {
	            var p = new _filter2.default(this, {
	                op: op,
	                prev: this.last() ? this.last() : this
	            });

	            return this._append(p);
	        }

	        /**
	         * Select a subset of columns
	         *
	         * @param {array|String} fieldSpec The columns to include in the output
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "select",
	        value: function select(fieldSpec) {
	            var p = new _selector2.default(this, {
	                fieldSpec: fieldSpec,
	                prev: this.last() ? this.last() : this
	            });

	            return this._append(p);
	        }

	        /**
	         * Collapse a subset of columns using a reducer function
	         *
	         * @example
	         *
	         * ```
	         *  const timeseries = new TimeSeries(inOutData);
	         *  Pipeline()
	         *      .from(timeseries)
	         *      .collapse(["in", "out"], "in_out_sum", sum)
	         *      .emitOn("flush")
	         *      .to(CollectionOut, c => {
	         *           const ts = new TimeSeries({name: "subset", collection: c});
	         *           ...
	         *      }, true);
	         * ```
	         * @param {array|String} fieldSpec The columns to collapse into the output
	         * @param {string}       name      The resulting output column's name
	         * @param {function}     reducer   Function to use to do the reduction
	         * @param {boolean}      append    Add the new column to the existing ones, or replace them.
	         *
	         * @return {Pipeline}              The Pipeline
	         */

	    }, {
	        key: "collapse",
	        value: function collapse(fieldSpec, name, reducer, append) {
	            var p = new _collapser2.default(this, {
	                fieldSpec: fieldSpec,
	                name: name,
	                reducer: reducer,
	                append: append,
	                prev: this.last() ? this.last() : this
	            });

	            return this._append(p);
	        }

	        /**
	         * Take events up to the supplied limit, per key.
	         *
	         * @param  {number} limit Integer number of events to take
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "take",
	        value: function take(limit) {
	            var p = new _taker2.default(this, {
	                limit: limit,
	                prev: this.last() ? this.last() : this
	            });

	            return this._append(p);
	        }

	        /**
	         * Converts incoming Events or IndexedEvents to TimeRangeEvents.
	         *
	         * @param {object} options To convert from an Event you need
	         * to convert a single time to a time range. To control this you
	         * need to specify the duration of that time range, along with
	         * the positioning (alignment) of the time range with respect to
	         * the time stamp of the Event.
	         *
	         * There are three option for alignment:
	         *  1. time range will be in front of the timestamp (options = {alignment: "front"})
	         *  2. time range will be centered on the timestamp (options = {alignment: "center"})
	         *  3. time range will be positoned behind the timestamp (options = {alignment: "behind"})
	         *
	         * The duration is of the form "1h" for one hour, "30s" for 30 seconds and so on.
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "asTimeRangeEvents",
	        value: function asTimeRangeEvents(options) {
	            var type = _timerangeevent2.default;
	            var p = new _converter2.default(this, _extends({
	                type: type
	            }, options, {
	                prev: this.last() ? this.last() : this
	            }));

	            return this._append(p);
	        }

	        /**
	         * Converts incoming Events to IndexedEvents.
	         *
	         * Note: It isn't possible to convert TimeRangeEvents to IndexedEvents.
	         *
	         * @param {Object} options            An object containing the conversion
	         * options. In this case the duration string of the Index is expected.
	         * @param {string} options.duration   The duration string is of the form "1h" for one hour, "30s"
	         * for 30 seconds and so on.
	         *
	         * @return {Pipeline} The Pipeline
	         */

	    }, {
	        key: "asIndexedEvents",
	        value: function asIndexedEvents(options) {
	            var type = _indexedevent2.default;
	            var p = new _converter2.default(this, _extends({
	                type: type
	            }, options, {
	                prev: this.last() ? this.last() : this
	            }));
	            return this._append(p);
	        }
	    }]);

	    return Pipeline;
	}();

	function pipeline(args) {
	    return new Pipeline(args);
	}

	function is(p) {
	    return p instanceof Pipeline;
	}

	exports.Pipeline = pipeline;
	exports.isPipeline = is;

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _pipelineIn = __webpack_require__(460);

	var _pipelineIn2 = _interopRequireDefault(_pipelineIn);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var UnboundedIn = function (_PipelineIn) {
	    _inherits(UnboundedIn, _PipelineIn);

	    function UnboundedIn() {
	        _classCallCheck(this, UnboundedIn);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(UnboundedIn).call(this));

	        _this._running = true;
	        return _this;
	    }

	    /**
	     * Start listening to events
	     */


	    _createClass(UnboundedIn, [{
	        key: "start",
	        value: function start() {
	            this._running = true;
	        }

	        /**
	         * Stop listening to events
	         */

	    }, {
	        key: "stop",
	        value: function stop() {
	            this._running = false;
	        }

	        /**
	         * Add an incoming event to the source
	         */

	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            this._check(event);
	            if (this.hasObservers() && this._running) {
	                this.emit(event);
	            }
	        }
	    }, {
	        key: "events",
	        value: regeneratorRuntime.mark(function events() {
	            return regeneratorRuntime.wrap(function events$(_context) {
	                while (1) {
	                    switch (_context.prev = _context.next) {
	                        case 0:
	                            throw new Error("Iteration across unbounded sources is not supported.");

	                        case 1:
	                        case "end":
	                            return _context.stop();
	                    }
	                }
	            }, events, this);
	        })
	    }]);

	    return UnboundedIn;
	}(_pipelineIn2.default);

	exports.default = UnboundedIn;

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _observable = __webpack_require__(461);

	var _observable2 = _interopRequireDefault(_observable);

	var _pipeline = __webpack_require__(463);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  This source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	function addPrevToChain(n, chain) {
	    chain.push(n);
	    if ((0, _pipeline.isPipeline)(n.prev())) {
	        chain.push(n.prev().in());
	        return chain;
	    } else {
	        return addPrevToChain(n.prev(), chain);
	    }
	}

	/**
	 * Base class for all Pipeline processors
	 */

	var Processor = function (_Observable) {
	    _inherits(Processor, _Observable);

	    function Processor(arg1, options) {
	        _classCallCheck(this, Processor);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Processor).call(this));

	        if ((0, _pipeline.isPipeline)(arg1)) {
	            _this._pipeline = arg1;
	            _this._prev = options.prev;
	        }
	        return _this;
	    }

	    _createClass(Processor, [{
	        key: "prev",
	        value: function prev() {
	            return this._prev;
	        }
	    }, {
	        key: "pipeline",
	        value: function pipeline() {
	            return this._pipeline;
	        }
	    }, {
	        key: "chain",
	        value: function chain() {
	            var chain = [this];
	            if ((0, _pipeline.isPipeline)(this.prev())) {
	                chain.push(this.prev().in());
	                return chain;
	            } else {
	                return addPrevToChain(this.prev(), chain);
	            }
	        }
	    }, {
	        key: "flush",
	        value: function flush() {
	            _get(Object.getPrototypeOf(Processor.prototype), "flush", this).call(this);
	        }
	    }]);

	    return Processor;
	}(_observable2.default);

	exports.default = Processor;

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _processor = __webpack_require__(465);

	var _processor2 = _interopRequireDefault(_processor);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _pipeline = __webpack_require__(463);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  Copyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * A simple processor used by the testing code to verify Pipeline behavior
	 */

	var Offset = function (_Processor) {
	    _inherits(Offset, _Processor);

	    function Offset(arg1, options, observer) {
	        _classCallCheck(this, Offset);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Offset).call(this, arg1, options, observer));

	        if (arg1 instanceof Offset) {
	            var other = arg1;
	            _this._by = other._by;
	            _this._fieldSpec = other._fieldSpec;
	        } else if ((0, _pipeline.isPipeline)(arg1)) {
	            _this._by = options.by || 1;
	            _this._fieldSpec = options.fieldSpec;
	        } else {
	            throw new Error("Unknown arg to Offset constructor", arg1);
	        }
	        return _this;
	    }

	    _createClass(Offset, [{
	        key: "clone",
	        value: function clone() {
	            return new Offset(this);
	        }

	        /**
	         * Output an event that is offset
	         */

	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            var _this2 = this;

	            if (this.hasObservers()) {
	                (function () {
	                    var selected = _event2.default.selector(event, _this2._fieldSpec);
	                    var data = {};
	                    _underscore2.default.each(selected.data().toJSON(), function (value, key) {
	                        var offsetValue = value + _this2._by;
	                        data[key] = offsetValue;
	                    });
	                    var outputEvent = event.setData(data);

	                    _this2.emit(outputEvent);
	                })();
	            }
	        }
	    }]);

	    return Offset;
	}(_processor2.default);

	exports.default = Offset;

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _processor = __webpack_require__(465);

	var _processor2 = _interopRequireDefault(_processor);

	var _pipeline = __webpack_require__(463);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * A processor which takes an operator as its only option
	 * and uses that to either output the event or skip the
	 * event
	 */

	var Filter = function (_Processor) {
	    _inherits(Filter, _Processor);

	    function Filter(arg1, options, observer) {
	        _classCallCheck(this, Filter);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Filter).call(this, arg1, options, observer));

	        if (arg1 instanceof Filter) {
	            var other = arg1;
	            _this._op = other._op;
	        } else if ((0, _pipeline.isPipeline)(arg1)) {
	            _this._op = options.op;
	        } else {
	            throw new Error("Unknown arg to Filter constructor", arg1);
	        }
	        return _this;
	    }

	    _createClass(Filter, [{
	        key: "clone",
	        value: function clone() {
	            return new Filter(this);
	        }

	        /**
	         * Output an event that is offset
	         */

	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            if (this.hasObservers()) {
	                if (this._op(event)) {
	                    this.emit(event);
	                }
	            }
	        }
	    }]);

	    return Filter;
	}(_processor2.default);

	exports.default = Filter;

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _processor = __webpack_require__(465);

	var _processor2 = _interopRequireDefault(_processor);

	var _index = __webpack_require__(344);

	var _index2 = _interopRequireDefault(_index);

	var _pipeline = __webpack_require__(463);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * A processor which takes an operator as its only option
	 * and uses that to either output the event or skip the
	 * event
	 */

	var Taker = function (_Processor) {
	    _inherits(Taker, _Processor);

	    function Taker(arg1, options, observer) {
	        _classCallCheck(this, Taker);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Taker).call(this, arg1, options, observer));

	        if (arg1 instanceof Taker) {
	            var other = arg1;
	            _this._limit = other._limit;
	            _this._windowType = other._windowType;
	            _this._windowDuration = other._windowDuration;
	            _this._groupBy = other._groupBy;
	        } else if ((0, _pipeline.isPipeline)(arg1)) {
	            var pipeline = arg1;
	            _this._limit = options.limit;
	            _this._windowType = pipeline.getWindowType();
	            _this._windowDuration = pipeline.getWindowDuration();
	            _this._groupBy = pipeline.getGroupBy();
	        } else {
	            throw new Error("Unknown arg to Taker constructor", arg1);
	        }

	        _this._count = {};
	        return _this;
	    }

	    _createClass(Taker, [{
	        key: "clone",
	        value: function clone() {
	            return new Taker(this);
	        }
	    }, {
	        key: "flush",
	        value: function flush() {
	            _get(Object.getPrototypeOf(Taker.prototype), "flush", this).call(this);
	        }

	        /**
	         * Output an event that is offset
	         */

	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            if (this.hasObservers()) {
	                var timestamp = event.timestamp();

	                var windowType = this._windowType;
	                var windowKey = void 0;
	                if (windowType === "fixed") {
	                    windowKey = _index2.default.getIndexString(this._windowDuration, timestamp);
	                } else {
	                    windowKey = windowType;
	                }
	                var groupByKey = this._groupBy(event);
	                var collectionKey = groupByKey ? windowKey + "::" + groupByKey : windowKey;

	                if (this._count[collectionKey] <= this._limit) {
	                    this.emit(event);
	                }

	                if (!_underscore2.default.has(this._count, collectionKey)) {
	                    this._count[collectionKey] = 0;
	                }

	                this._count[collectionKey]++;
	            }
	        }
	    }]);

	    return Taker;
	}(_processor2.default);

	exports.default = Taker;

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _processor = __webpack_require__(465);

	var _processor2 = _interopRequireDefault(_processor);

	var _collector = __webpack_require__(470);

	var _collector2 = _interopRequireDefault(_collector);

	var _indexedevent = __webpack_require__(454);

	var _indexedevent2 = _interopRequireDefault(_indexedevent);

	var _timerangeevent = __webpack_require__(455);

	var _timerangeevent2 = _interopRequireDefault(_timerangeevent);

	var _pipeline = __webpack_require__(463);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * An Aggregator takes incoming events and adds them to a Collector
	 * with given windowing and grouping parameters. As each Collection is
	 * emitted from the Collector it is aggregated into a new event
	 * and emitted from this Processor.
	 */

	var Aggregator = function (_Processor) {
	    _inherits(Aggregator, _Processor);

	    function Aggregator(arg1, options, observer) {
	        _classCallCheck(this, Aggregator);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Aggregator).call(this, arg1, options, observer));

	        if (arg1 instanceof Aggregator) {

	            var other = arg1;

	            _this._fields = other._fields;
	            _this._windowType = other._windowType;
	            _this._windowDuration = other._windowDuration;
	            _this._groupBy = other._groupBy;
	            _this._emitOn = other._emitOn;
	        } else if ((0, _pipeline.isPipeline)(arg1)) {

	            var pipeline = arg1;

	            _this._windowType = pipeline.getWindowType();
	            _this._windowDuration = pipeline.getWindowDuration();
	            _this._groupBy = pipeline.getGroupBy();
	            _this._emitOn = pipeline.getEmitOn();

	            if (!_underscore2.default.has(options, "fields")) {
	                throw new Error("Aggregator: constructor needs an aggregator field mapping");
	            }

	            // Check each of the aggregator -> field mappings
	            _underscore2.default.forEach(options.fields, function (operator, field) {
	                // Field should either be an array or a string
	                if (!_underscore2.default.isString(field) && !_underscore2.default.isArray(field)) {
	                    throw new Error("Aggregator: field of unknown type: " + field);
	                }
	            });

	            if (pipeline.mode() === "stream") {
	                if (!pipeline.getWindowType() || !pipeline.getWindowDuration()) {
	                    throw new Error("Unable to aggregate because no windowing strategy was specified in pipeline");
	                }
	            }
	            _this._fields = options.fields;
	        } else {
	            throw new Error("Unknown arg to Filter constructor", arg1);
	        }

	        _this._collector = new _collector2.default({
	            windowType: _this._windowType,
	            windowDuration: _this._windowDuration,
	            groupBy: _this._groupBy,
	            emitOn: _this._emitOn
	        }, function (collection, windowKey, groupByKey) {
	            return _this.handleTrigger(collection, windowKey, groupByKey);
	        });
	        return _this;
	    }

	    _createClass(Aggregator, [{
	        key: "clone",
	        value: function clone() {
	            return new Aggregator(this);
	        }
	    }, {
	        key: "handleTrigger",
	        value: function handleTrigger(collection, windowKey) {
	            var d = {};
	            _underscore2.default.each(this._fields, function (operator, fields) {
	                var fieldList = _underscore2.default.isString(fields) ? [fields] : fields;
	                _underscore2.default.each(fieldList, function (fieldSpec) {
	                    var fieldValue = collection.aggregate(operator, fieldSpec);
	                    var fieldName = fieldSpec.split(".").pop();
	                    d[fieldName] = fieldValue;
	                });
	            });

	            var event = void 0;
	            if (windowKey === "global") {
	                event = new _timerangeevent2.default(collection.range(), d);
	            } else {
	                //TODO: Specify UTC (or local) pipeline
	                var utc = this._windowType === "fixed";
	                event = new _indexedevent2.default(windowKey, d, utc);
	            }

	            this.emit(event);
	        }
	    }, {
	        key: "flush",
	        value: function flush() {
	            this._collector.flushCollections();
	            _get(Object.getPrototypeOf(Aggregator.prototype), "flush", this).call(this);
	        }
	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            if (this.hasObservers()) {
	                this._collector.addEvent(event);
	            }
	        }
	    }]);

	    return Aggregator;
	}(_processor2.default);

	exports.default = Aggregator;

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	opyright (c) 2016, The Regents of the University of California,
	through Lawrence Berkeley National Laboratory (subject to receipt
	of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _collection = __webpack_require__(458);

	var _collection2 = _interopRequireDefault(_collection);

	var _index = __webpack_require__(344);

	var _index2 = _interopRequireDefault(_index);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * A Collector is used to accumulate events into multiple collections,
	 * based on potentially many strategies. In this current implementation
	 * a collection is partitioned based on the window that it falls in
	 * and the group it is part of.
	 *
	 * Collections are emitted from this class to the supplied onTrigger
	 * callback.
	 */

	var Collector = function () {
	    function Collector(options, onTrigger) {
	        _classCallCheck(this, Collector);

	        var windowType = options.windowType;
	        var windowDuration = options.windowDuration;
	        var groupBy = options.groupBy;
	        var emitOn = options.emitOn;


	        this._groupBy = groupBy;
	        this._emitOn = emitOn;
	        this._windowType = windowType;
	        this._windowDuration = windowDuration;

	        // Callback for trigger
	        this._onTrigger = onTrigger;

	        // Maintained collections
	        this._collections = {};
	    }

	    _createClass(Collector, [{
	        key: "flushCollections",
	        value: function flushCollections() {
	            this.emitCollections(this._collections);
	        }
	    }, {
	        key: "emitCollections",
	        value: function emitCollections(collections) {
	            var _this = this;

	            if (this._onTrigger) {
	                _underscore2.default.each(collections, function (c) {
	                    var collection = c.collection;
	                    var windowKey = c.windowKey;
	                    var groupByKey = c.groupByKey;

	                    _this._onTrigger && _this._onTrigger(collection, windowKey, groupByKey);
	                });
	            }
	        }
	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            var _this2 = this;

	            var timestamp = event.timestamp();

	            //
	            // Window key
	            //

	            var windowType = this._windowType;
	            var windowKey = void 0;
	            if (windowType === "fixed") {
	                windowKey = _index2.default.getIndexString(this._windowDuration, timestamp);
	            } else if (windowType === "daily") {
	                windowKey = _index2.default.getDailyIndexString(timestamp);
	            } else if (windowType === "monthly") {
	                windowKey = _index2.default.getMonthlyIndexString(timestamp);
	            } else if (windowType === "yearly") {
	                windowKey = _index2.default.getYearlyIndexString(timestamp);
	            } else {
	                windowKey = windowType;
	            }

	            //
	            // Groupby key
	            //

	            var groupByKey = this._groupBy(event);

	            //
	            // Collection key
	            //

	            var collectionKey = groupByKey ? windowKey + "::" + groupByKey : windowKey;

	            var discard = false;
	            if (!_underscore2.default.has(this._collections, collectionKey)) {
	                this._collections[collectionKey] = {
	                    windowKey: windowKey,
	                    groupByKey: groupByKey,
	                    collection: new _collection2.default()
	                };
	                discard = true;
	            }
	            this._collections[collectionKey].collection = this._collections[collectionKey].collection.addEvent(event);

	            //
	            // If fixed windows, collect together old collections that
	            // will be discarded
	            //

	            var discards = {};
	            if (discard && windowType === "fixed") {
	                _underscore2.default.each(this._collections, function (c, k) {
	                    if (windowKey !== c.windowKey) {
	                        discards[k] = c;
	                    }
	                });
	            }

	            //
	            // Emit
	            //

	            var emitOn = this._emitOn;
	            if (emitOn === "eachEvent") {
	                this.emitCollections(this._collections);
	            } else if (emitOn === "discard") {
	                this.emitCollections(discards);
	                _underscore2.default.each(Object.keys(discards), function (k) {
	                    delete _this2._collections[k];
	                });
	            } else if (emitOn === "flush") {
	                // pass
	            } else {
	                    throw new Error("Unknown emit type supplied to Collector");
	                }
	        }
	    }]);

	    return Collector;
	}();

	exports.default = Collector;

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _timerangeevent = __webpack_require__(455);

	var _timerangeevent2 = _interopRequireDefault(_timerangeevent);

	var _indexedevent = __webpack_require__(454);

	var _indexedevent2 = _interopRequireDefault(_indexedevent);

	var _range = __webpack_require__(450);

	var _range2 = _interopRequireDefault(_range);

	var _util = __webpack_require__(345);

	var _util2 = _interopRequireDefault(_util);

	var _index = __webpack_require__(344);

	var _index2 = _interopRequireDefault(_index);

	var _pipeline = __webpack_require__(463);

	var _processor = __webpack_require__(465);

	var _processor2 = _interopRequireDefault(_processor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var Converter = function (_Processor) {
	    _inherits(Converter, _Processor);

	    function Converter(arg1, options, observer) {
	        _classCallCheck(this, Converter);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Converter).call(this, arg1, options, observer));

	        if (arg1 instanceof Converter) {
	            var other = arg1;
	            _this._convertTo = other._convertTo;
	            _this._duration = other._duration;
	            _this._durationString = other._durationString;
	            _this._alignment = other._alignment;
	        } else if ((0, _pipeline.isPipeline)(arg1)) {
	            if (!_underscore2.default.has(options, "type")) {
	                throw new Error("Converter: constructor needs 'type' in options");
	            }
	            if (options.type === _event2.default || options.type === _timerangeevent2.default || options.type === _indexedevent2.default) {
	                _this._convertTo = options.type;
	            } else {
	                throw Error("Unable to interpret type argument passed to Converter constructor");
	            }
	            if (options.type === _timerangeevent2.default || options.type === _indexedevent2.default) {
	                if (options.duration && _underscore2.default.isString(options.duration)) {
	                    _this._duration = _util2.default.windowDuration(options.duration);
	                    _this._durationString = options.duration;
	                }
	            }

	            _this._alignment = options.alignment || "center";
	        } else {
	            throw new Error("Unknown arg to Converter constructor", arg1);
	        }
	        return _this;
	    }

	    _createClass(Converter, [{
	        key: "clone",
	        value: function clone() {
	            return new Converter(this);
	        }
	    }, {
	        key: "convertEvent",
	        value: function convertEvent(event) {
	            if (this._convertTo === _event2.default) {
	                return event;
	            } else if (this._convertTo === _timerangeevent2.default) {
	                var alignment = this._alignment;
	                var begin = void 0,
	                    end = void 0;
	                if (!this._duration) {
	                    throw new Error("Duration expected in converter");
	                }
	                switch (alignment) {
	                    case "front":
	                        begin = event.timestamp();
	                        end = new Date(+event.timestamp() + this._duration);
	                        break;
	                    case "center":
	                        begin = new Date(+event.timestamp() - parseInt(this._duration / 2, 10));
	                        end = new Date(+event.timestamp() + parseInt(this._duration / 2, 10));
	                        break;
	                    case "behind":
	                        end = event.timestamp();
	                        begin = new Date(+event.timestamp() - this._duration);
	                        break;
	                    default:
	                        throw new Error("Unknown alignment of converter");
	                }
	                var timeRange = new _range2.default([begin, end]);
	                return new _timerangeevent2.default(timeRange, event.data());
	            } else if (this._convertTo === _indexedevent2.default) {
	                var timestamp = event.timestamp();
	                var indexString = _index2.default.getIndexString(this._durationString, timestamp);
	                return new _indexedevent2.default(indexString, event.data(), null);
	            }
	        }
	    }, {
	        key: "convertTimeRangeEvent",
	        value: function convertTimeRangeEvent(event) {
	            if (this._convertTo === _timerangeevent2.default) {
	                return event;
	            }
	            if (this._convertTo === _event2.default) {
	                var alignment = this._alignment;
	                var beginTime = event.begin();
	                var endTime = event.end();
	                var timestamp = void 0;
	                switch (alignment) {
	                    case "lag":
	                        timestamp = beginTime;
	                        break;
	                    case "center":
	                        timestamp = new Date(parseInt((beginTime.getTime() + endTime.getTime()) / 2, 10));
	                        break;
	                    case "lead":
	                        timestamp = endTime;
	                        break;
	                }
	                return new _event2.default(timestamp, event.data());
	            }
	            if (this._convertTo === _indexedevent2.default) {
	                throw new Error("Cannot convert TimeRangeEvent to an IndexedEvent");
	            }
	        }
	    }, {
	        key: "convertIndexedEvent",
	        value: function convertIndexedEvent(event) {
	            if (this._convertTo === _indexedevent2.default) {
	                return event;
	            }
	            if (this._convertTo === _event2.default) {
	                var alignment = this._alignment;
	                var beginTime = event.begin();
	                var endTime = event.end();
	                var timestamp = void 0;
	                switch (alignment) {
	                    case "lag":
	                        timestamp = beginTime;
	                        break;
	                    case "center":
	                        timestamp = new Date(parseInt((beginTime.getTime() + endTime.getTime()) / 2, 10));
	                        break;
	                    case "lead":
	                        timestamp = endTime;
	                        break;
	                }
	                return new _event2.default(timestamp, event.data());
	            }
	            if (this._convertTo === _timerangeevent2.default) {
	                return new _timerangeevent2.default(event.timerange(), event.data());
	            }
	        }

	        /**
	         * Output a converted event
	         */

	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            if (this.hasObservers()) {
	                var outputEvent = void 0;
	                if (event instanceof _timerangeevent2.default) {
	                    outputEvent = this.convertTimeRangeEvent(event);
	                } else if (event instanceof _indexedevent2.default) {
	                    outputEvent = this.convertIndexedEvent(event);
	                } else if (event instanceof _event2.default) {
	                    outputEvent = this.convertEvent(event);
	                } else {
	                    throw new Error("Unknown event type received");
	                }
	                this.emit(outputEvent);
	            }
	        }
	    }]);

	    return Converter;
	}(_processor2.default);

	exports.default = Converter;

/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	opyright (c) 2015, The Regents of the University of California,
	through Lawrence Berkeley National Laboratory (subject to receipt
	of any required approvals from the U.S. Dept. of Energy).
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *  All rights reserved.
	
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	var _immutable = __webpack_require__(301);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _collection = __webpack_require__(458);

	var _collection2 = _interopRequireDefault(_collection);

	var _index = __webpack_require__(344);

	var _index2 = _interopRequireDefault(_index);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _timerangeevent = __webpack_require__(455);

	var _timerangeevent2 = _interopRequireDefault(_timerangeevent);

	var _indexedevent = __webpack_require__(454);

	var _indexedevent2 = _interopRequireDefault(_indexedevent);

	var _pipeline = __webpack_require__(463);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	// import EventOut from "./pipeline-out-event.js";
	// import CollectionOut from "./pipeline-out-collection.js";

	function buildMetaData(meta) {
	    var d = meta ? meta : {};

	    // Name
	    d.name = meta.name ? meta.name : "";

	    // Index
	    if (meta.index) {
	        if (_underscore2.default.isString(meta.index)) {
	            d.index = new _index2.default(meta.index);
	        } else if (meta.index instanceof _index2.default) {
	            d.index = meta.index;
	        }
	    }

	    // UTC or Local time
	    d.utc = true;
	    if (_underscore2.default.isBoolean(meta.utc)) {
	        d.utc = meta.utc;
	    }

	    return new _immutable2.default.Map(d);
	}

	/**
	A `TimeSeries` represents a series of events, with each event being a combination of:

	 - time (or `TimeRange`, or `Index`)
	 - data - corresponding set of key/values.

	### Construction

	Currently you can initialize a `TimeSeries` with either a list of events, or with a data format that looks like this:

	```javascript
	const data = {
	    name: "trafficc",
	    columns: ["time", "value"],
	    points: [
	        [1400425947000, 52],
	        [1400425948000, 18],
	        [1400425949000, 26],
	        [1400425950000, 93],
	        ...
	    ]
	};
	```

	To create a new TimeSeries object from the above format, simply use the constructor:

	```javascript
	var series = new TimeSeries(data);
	```

	The format of the data is as follows:

	 - **name** - optional, but a good practice
	 - **columns** - are necessary and give labels to the data in the points.
	 - **points** - are an array of tuples. Each row is at a different time (or timerange), and each value corresponds to the column labels.
	   
	As just hinted at, the first column may actually be:

	 - "time"
	 - "timeRange" represented by a `TimeRange`
	 - "index" - a time range represented by an `Index`. By using an index it is possible, for example, to refer to a specific month:

	```javascript
	var availabilityData = {
	    name: "Last 3 months availability",
	    columns: ["index", "uptime"],
	    points: [
	        ["2015-06", "100%"], // <-- 2015-06 specified here represents June 2015
	        ["2015-05", "92%"],
	        ["2015-04", "87%"],
	    ]
	};
	```

	Alternatively, you can construct a `TimeSeries` with a list of events. These may be `Events`, `TimeRangeEvents` or `IndexedEvents`. Here's an example of that:

	```javascript
	const events = [];
	events.push(new Event(new Date(2015, 7, 1), {value: 27}));
	events.push(new Event(new Date(2015, 8, 1), {value: 29}));
	const series = new TimeSeries({
	    name: "avg temps",
	    events: events
	});
	```

	### Nested data

	The values do not have to be simple types like the above examples. Here's an example where each value is itself an object with "in" and "out" keys:

	```javascript
	const series = new TimeSeries({
	    name: "Map Traffic",
	    columns: ["time", "NASA_north", "NASA_south"],
	    points: [
	        [1400425951000, {in: 100, out: 200}, {in: 145, out: 135}],
	        [1400425952000, {in: 200, out: 400}, {in: 146, out: 142}],
	        [1400425953000, {in: 300, out: 600}, {in: 147, out: 158}],
	        [1400425954000, {in: 400, out: 800}, {in: 155, out: 175}],
	    ]
	});
	```

	Complex data is stored in an Immutable structure. To get a value out of nested data like this you will get the Event you want (by row), as usual, and then use `get()` to fetch the value by column name. The result of this call will be a JSON copy of the Immutable data so you can query deeper in the usual way:

	```javascript
	series.at(0).get("NASA_north")["in"]  // 200`
	```

	It is then possible to use a value mapper function when calculating different properties. For example, to get the average "in" value of the NASA_north column:

	```javascript
	series.avg("NASA_north", d => d.in);  // 250
	```
	 */

	var TimeSeries = function () {
	    function TimeSeries(arg) {
	        var _this = this;

	        _classCallCheck(this, TimeSeries);

	        this._collection = null; // Collection
	        this._data = null; // Meta data

	        if (arg instanceof TimeSeries) {

	            //
	            // Copy another TimeSeries
	            //

	            var other = arg;
	            this._data = other._data;
	            this._collection = other._collection;
	        } else if (_underscore2.default.isObject(arg)) {

	            //
	            // TimeSeries(object data) where data may be:
	            //    { "events": [event-1, event-2, ..., event-n]}
	            // or
	            //    { "columns": [time|timerange|index, column-1, ..., column-n]
	            //      "points": [
	            //         [t1, v1, v2, ..., v2],
	            //         [t2, v1, v2, ..., vn],
	            //         ...
	            //      ]
	            //    }

	            var obj = arg;

	            if (_underscore2.default.has(obj, "events")) {

	                //
	                // Initialized from an event list
	                //

	                var events = obj.events;

	                var meta1 = _objectWithoutProperties(obj, ["events"]); //eslint-disable-line


	                this._collection = new _collection2.default(events);
	                this._data = buildMetaData(meta1);
	            } else if (_underscore2.default.has(obj, "collection")) {

	                //
	                // Initialized from a Collection
	                //

	                var collection = obj.collection;

	                var meta3 = _objectWithoutProperties(obj, ["collection"]); //eslint-disable-line


	                this._collection = collection;
	                this._data = buildMetaData(meta3);
	            } else if (_underscore2.default.has(obj, "columns") && _underscore2.default.has(obj, "points")) {
	                (function () {

	                    //
	                    // Initialized from the wire format
	                    //

	                    var columns = obj.columns;
	                    var points = obj.points;

	                    var meta2 = _objectWithoutProperties(obj, ["columns", "points"]); //eslint-disable-line


	                    var _columns = _toArray(columns);

	                    var eventType = _columns[0];

	                    var eventFields = _columns.slice(1);

	                    var events = points.map(function (point) {
	                        var _point = _toArray(point);

	                        var t = _point[0];

	                        var eventValues = _point.slice(1);

	                        var d = _underscore2.default.object(eventFields, eventValues);
	                        switch (eventType) {
	                            case "time":
	                                return new _event2.default(t, d);
	                            case "timerange":
	                                return new _timerangeevent2.default(t, d);
	                            case "index":
	                                return new _indexedevent2.default(t, d);
	                            default:
	                                throw new Error("Unknown event type: " + eventType);
	                        }
	                    });

	                    _this._collection = new _collection2.default(events);
	                    _this._data = buildMetaData(meta2);
	                })();
	            }

	            if (!this._collection.isChronological()) {
	                throw new Error("Events supplied to TimeSeries constructor must be chronological");
	            }
	        }
	    }

	    //
	    // Serialize
	    //

	    /**
	     * Turn the TimeSeries into regular javascript objects
	     */


	    _createClass(TimeSeries, [{
	        key: "toJSON",
	        value: function toJSON() {
	            var columns = void 0;
	            var type = this._collection.type();
	            if (type === _event2.default) {
	                columns = ["time"].concat(_toConsumableArray(this.columns()));
	            } else if (type === _timerangeevent2.default) {
	                columns = ["timerange"].concat(_toConsumableArray(this.columns()));
	            } else if (type === _indexedevent2.default) {
	                columns = ["index"].concat(_toConsumableArray(this.columns()));
	            }

	            var points = [];
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;

	            try {
	                for (var _iterator = this._collection.events()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var e = _step.value;

	                    points.push(e.toPoint());
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }

	            return _underscore2.default.extend(this._data.toJSON(), {
	                columns: columns,
	                points: points
	            });
	        }

	        /**
	         * Represent the TimeSeries as a string
	         */

	    }, {
	        key: "toString",
	        value: function toString() {
	            return JSON.stringify(this.toJSON());
	        }

	        /**
	         * Returns the extents of the TimeSeries as a TimeRange.
	         */

	    }, {
	        key: "timerange",
	        value: function timerange() {
	            return this._collection.range();
	        }
	    }, {
	        key: "range",
	        value: function range() {
	            return this.timerange();
	        }

	        /**
	         * Gets the earliest time represented in the TimeSeries.
	         *
	         * @return {Date} Begin time
	         */

	    }, {
	        key: "begin",
	        value: function begin() {
	            return this.range().begin();
	        }

	        /**
	         * Gets the latest time represented in the TimeSeries.
	         *
	         * @return {Date} End time
	         */

	    }, {
	        key: "end",
	        value: function end() {
	            return this.range().end();
	        }

	        /**
	         * Access a specific TimeSeries event via its position
	         *
	         * @param {number} pos The event position
	         */

	    }, {
	        key: "at",
	        value: function at(pos) {
	            return this._collection.at(pos);
	        }

	        /**
	         * Returns an event in the series by its time. This is the same
	         * as calling `bisect` first and then using `at` with the index.
	         *
	         * @param  {Date} time The time of the event.
	         * @return {Event|TimeRangeEvent|IndexedEvent}
	         */

	    }, {
	        key: "atTime",
	        value: function atTime(time) {
	            return this._collection.atTime(time);
	        }

	        /**
	         * Returns the first event in the series.
	         *
	         * @return {Event|TimeRangeEvent|IndexedEvent}
	         */

	    }, {
	        key: "atFirst",
	        value: function atFirst() {
	            return this._collection.atFirst();
	        }

	        /**
	         * Returns the last event in the series.
	         *
	         * @return {Event|TimeRangeEvent|IndexedEvent}
	         */

	    }, {
	        key: "atLast",
	        value: function atLast() {
	            return this._collection.atLast();
	        }

	        /**
	         * Generator to return all the events in the series
	         *
	         * @example
	         * ```
	         * for (let event of series.events()) {
	         *     console.log(event.toString());
	         * }
	         * ```
	         */

	    }, {
	        key: "events",
	        value: regeneratorRuntime.mark(function events() {
	            var i;
	            return regeneratorRuntime.wrap(function events$(_context) {
	                while (1) {
	                    switch (_context.prev = _context.next) {
	                        case 0:
	                            i = 0;

	                        case 1:
	                            if (!(i < this.size())) {
	                                _context.next = 7;
	                                break;
	                            }

	                            _context.next = 4;
	                            return this.at(i);

	                        case 4:
	                            i++;
	                            _context.next = 1;
	                            break;

	                        case 7:
	                        case "end":
	                            return _context.stop();
	                    }
	                }
	            }, events, this);
	        })

	        /**
	         * Sets a new underlying collection for this TimeSeries.
	         *
	         * @param {Collection}  collection The new collection
	         *
	         * @return {TimeSeries}            A new TimeSeries
	         */

	    }, {
	        key: "setCollection",
	        value: function setCollection(collection) {
	            if (!collection.isChronological()) {
	                throw new Error("Collection supplied is not chronological");
	            }
	            var result = new TimeSeries(this);
	            result._collection = collection;
	            return result;
	        }

	        /**
	         * Returns the index that bisects the TimeSeries at the time specified.
	         *
	         * @param  {Date}    t   The time to bisect the TimeSeries with
	         * @param  {number}  b   The position to begin searching at
	         *
	         * @return {number}      The row number that is the greatest, but still below t.
	         */

	    }, {
	        key: "bisect",
	        value: function bisect(t, b) {
	            return this._collection.bisect(t, b);
	        }

	        /**
	         * Perform a slice of events within the TimeSeries, returns a new
	         * TimeSeries representing a portion of this TimeSeries from
	         * begin up to but not including end.
	         *
	         * @param {Number} begin   The position to begin slicing
	         * @param {Number} end     The position to end slicing
	         *
	         * @return {TimeSeries}    The new, sliced, TimeSeries.
	         */

	    }, {
	        key: "slice",
	        value: function slice(begin, end) {
	            var sliced = this._collection.slice(begin, end);
	            return this.setCollection(sliced);
	        }

	        /**
	         * Crop the TimeSeries to the specified TimeRange and
	         * return a new TimeSeries.
	         *
	         * @param {TimeRange} timerange   The bounds of the new TimeSeries
	         *
	         * @return {TimeSeries}    The new, cropped, TimeSeries.
	         */

	    }, {
	        key: "crop",
	        value: function crop(timerange) {
	            var beginPos = this.bisect(timerange.begin());
	            var endPos = this.bisect(timerange.end(), beginPos);
	            return this.slice(beginPos, endPos);
	        }

	        /**
	         * Returns a new Collection by testing the fieldSpec
	         * values for being valid (not NaN, null or undefined).
	         *
	         * The resulting TimeSeries will be clean (for that fieldSpec).
	         *
	         * @param {string}      fieldSpec The field to test
	         * @return {TimeSeries}           A new, modified, TimeSeries.
	         */

	    }, {
	        key: "clean",
	        value: function clean(fieldSpec) {
	            var cleaned = this._collection.clean(fieldSpec);
	            return this.setCollection(cleaned);
	        }

	        /**
	         * Generator to return all the events in the collection.
	         *
	         * @example
	         * ```
	         * for (let event of timeseries.events()) {
	         *     console.log(event.toString());
	         * }
	         * ```
	         */

	    }, {
	        key: "events",
	        value: regeneratorRuntime.mark(function events() {
	            var i;
	            return regeneratorRuntime.wrap(function events$(_context2) {
	                while (1) {
	                    switch (_context2.prev = _context2.next) {
	                        case 0:
	                            i = 0;

	                        case 1:
	                            if (!(i < this.size())) {
	                                _context2.next = 7;
	                                break;
	                            }

	                            _context2.next = 4;
	                            return this.at(i);

	                        case 4:
	                            i++;
	                            _context2.next = 1;
	                            break;

	                        case 7:
	                        case "end":
	                            return _context2.stop();
	                    }
	                }
	            }, events, this);
	        })

	        //
	        // Access meta data about the series
	        //

	        /**
	         * Fetch the timeseries name
	         *
	         * @return {string} The name given to this TimeSeries
	         */

	    }, {
	        key: "name",
	        value: function name() {
	            return this._data.get("name");
	        }

	        /**
	         * Fetch the timeseries Index, if it has one.
	         *
	         * @return {Index} The Index given to this TimeSeries
	         */

	    }, {
	        key: "index",
	        value: function index() {
	            return this._data.get("index");
	        }

	        /**
	         * Fetch the timeseries Index, as a string, if it has one.
	         *
	         * @return {string} The Index, as a string, given to this TimeSeries
	         */

	    }, {
	        key: "indexAsString",
	        value: function indexAsString() {
	            return this.index() ? this.index().asString() : undefined;
	        }

	        /**
	         * Fetch the timeseries Index, as a TimeRange, if it has one.
	         *
	         * @return {TimeRange} The Index, as a TimeRange, given to this TimeSeries
	         */

	    }, {
	        key: "indexAsRange",
	        value: function indexAsRange() {
	            return this.index() ? this.index().asTimerange() : undefined;
	        }

	        /**
	         * Fetch the UTC flag, i.e. are the events in this TimeSeries in
	         * UTC or local time (if they are IndexedEvents an event might be
	         * "2014-08-31". The actual time range of that representation
	         * depends on where you are. Pond supports thinking about that in
	         * either as a UTC day, or a local day).
	         *
	         * @return {TimeRange} The Index, as a TimeRange, given to this TimeSeries
	         */

	    }, {
	        key: "isUTC",
	        value: function isUTC() {
	            return this._data.get("utc");
	        }

	        /**
	         * Fetch the list of column names. This is determined by
	         * traversing though the events and collecting the set.
	         *
	         * Note: the order is not defined
	         *
	         * @return {array} List of columns
	         */

	    }, {
	        key: "columns",
	        value: function columns() {
	            var c = {};
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;

	            try {
	                for (var _iterator2 = this._collection.events()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                    var e = _step2.value;

	                    var _d = e.toJSON().data;
	                    _underscore2.default.each(_d, function (val, key) {
	                        c[key] = true;
	                    });
	                }
	            } catch (err) {
	                _didIteratorError2 = true;
	                _iteratorError2 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                        _iterator2.return();
	                    }
	                } finally {
	                    if (_didIteratorError2) {
	                        throw _iteratorError2;
	                    }
	                }
	            }

	            return _underscore2.default.keys(c);
	        }

	        /**
	         * Returns the internal collection of events for this TimeSeries
	         *
	         * @return {Collection} The collection backing this TimeSeries
	         */

	    }, {
	        key: "collection",
	        value: function collection() {
	            return this._collection;
	        }

	        /**
	         * Returns the meta data about this TimeSeries as a JSON object.
	         * Any extra data supplied to the TimeSeries constructor will be
	         * placed in the meta data object. This returns either all of that
	         * data as a JSON object, or a specific key if `key` is supplied.
	         *
	         * @param {string}   key   Optional specific part of the meta data
	         * @return {object}        The meta data
	         */

	    }, {
	        key: "meta",
	        value: function meta(key) {
	            if (!key) {
	                return this._data.toJSON();
	            } else {
	                return this._data.get(key);
	            }
	        }

	        //
	        // Access the series itself
	        //

	        /**
	         * Returns the number of events in this TimeSeries
	         *
	         * @return {number} Count of events
	         */

	    }, {
	        key: "size",
	        value: function size() {
	            return this._collection.size();
	        }

	        /**
	         * Returns the number of valid items in this TimeSeries.
	         *
	         * Uses the fieldSpec to look up values in all events.
	         * It then counts the number that are considered valid, which
	         * specifically are not NaN, undefined or null.
	         *
	         * @return {number} Count of valid events
	         */

	    }, {
	        key: "sizeValid",
	        value: function sizeValid(fieldSpec) {
	            return this._collection.sizeValid(fieldSpec);
	        }

	        /**
	         * Returns the number of events in this TimeSeries. Alias
	         * for size().
	         *
	         * @return {number} Count of events
	         */

	    }, {
	        key: "count",
	        value: function count() {
	            return this.size();
	        }

	        /**
	         * Returns the sum for the fieldspec
	         *
	         * @param {string} fieldSpec The field to sum over the TimeSeries
	         *
	         * @return {number} The sum
	         */

	    }, {
	        key: "sum",
	        value: function sum(fieldSpec) {
	            return this._collection.sum(fieldSpec);
	        }
	    }, {
	        key: "max",
	        value: function max(fieldSpec) {
	            return this._collection.max(fieldSpec);
	        }
	    }, {
	        key: "min",
	        value: function min(fieldSpec) {
	            return this._collection.min(fieldSpec);
	        }

	        /**
	         * Aggregates the events in the TimeSeries down to their average
	         *
	         * @param  {String} fieldSpec The field to average over in the TimeSeries
	         *
	         * @return {number}           The average
	         */

	    }, {
	        key: "avg",
	        value: function avg(fieldSpec) {
	            return this._collection.avg(fieldSpec);
	        }

	        /**
	         * Aggregates the events in the TimeSeries down to their mean (same as avg)
	         *
	         * @param  {String} fieldSpec The field to find the mean of within the collection
	         *
	         * @return {number}           The mean
	         */

	    }, {
	        key: "mean",
	        value: function mean(fieldSpec) {
	            return this._collection.mean(fieldSpec);
	        }

	        /**
	         * Aggregates the events down to their medium value
	         *
	         * @param  {String} fieldSpec The field to aggregate over
	         *
	         * @return {number}           The resulting median value
	         */

	    }, {
	        key: "median",
	        value: function median(fieldSpec) {
	            return this._collection.median(fieldSpec);
	        }

	        /**
	         * Aggregates the events down to their stdev
	         *
	         * @param  {String} fieldSpec The field to aggregate over
	         *
	         * @return {number}           The resulting stdev value
	         */

	    }, {
	        key: "stdev",
	        value: function stdev(fieldSpec) {
	            return this._collection.stdev(fieldSpec);
	        }

	        /**
	         * Aggregates the events down using a user defined function to
	         * do the reduction.
	         *
	         * @param  {function} func    User defined reduction function. Will be
	         *                            passed a list of values. Should return a
	         *                            singe value.
	         * @param  {String} fieldSpec The field to aggregate over
	         *
	         * @return {number}           The resulting value
	         */

	    }, {
	        key: "aggregate",
	        value: function aggregate(func, fieldSpec) {
	            return this._collection.aggregate(func, fieldSpec);
	        }

	        /**
	         * Returns a new Pipeline with input source being initialized to
	         * this TimeSeries collection. This allows pipeline operations
	         * to be chained directly onto the TimeSeries to produce a new
	         * TimeSeries or Event result.
	         *
	         * @example
	         *
	         * ```
	         * timeseries.pipeline()
	         *     .offsetBy(1)
	         *     .offsetBy(2)
	         *     .to(CollectionOut, c => out = c);
	         * ```
	         *
	         * @return {Pipeline} The Pipeline.
	         */

	    }, {
	        key: "pipeline",
	        value: function pipeline() {
	            return new _pipeline.Pipeline().from(this._collection);
	        }

	        /**
	         * Takes an operator that is used to remap events from this TimeSeries to
	         * a new set of Events. The result is returned via the callback.
	         *
	         * @param  {function}   operator      An operator which will be passed each event and
	         *                                    which should return a new event.
	         * @param  {function}   cb            Callback containing a collapsed TimeSeries
	         */

	    }, {
	        key: "map",
	        value: function map(op) {
	            var collections = this.pipeline().map(op).toKeyedCollections();
	            return this.setCollection(collections["all"]);
	        }

	        /**
	         * Takes a fieldSpec (list of column names) and outputs to the callback just those
	         * columns in a new TimeSeries.
	         *
	         * @return {Collection} A collection containing only the selected fields
	         */

	    }, {
	        key: "select",
	        value: function select(fieldSpec) {
	            var collections = this.pipeline().select(fieldSpec).toKeyedCollections();
	            return this.setCollection(collections["all"]);
	        }

	        /**
	         * Takes a fieldSpec (list of column names) and collapses
	         * them to a new column named `name` which is the reduction (using
	         * the `reducer` function) of the matched columns in the fieldSpecList.
	         *
	         * The column may be appended to the existing columns, or replace them,
	         * using the `append` boolean.
	         *
	         * The result, a new TimeSeries, will be passed to the supplied callback.
	         *
	         * @param  {array}      fieldSpec      The list of columns
	         * @param  {string}     name           The resulting summed column name
	         * @param  {function}   reducer        Reducer function e.g. sum
	         * @param  {boolean}    append         Append the summed column, rather than replace
	         *
	         * @return {Collection} A collapsed collection
	         */

	    }, {
	        key: "collapse",
	        value: function collapse(fieldSpec, name, reducer, append) {
	            var collections = this.pipeline().collapse(fieldSpec, name, reducer, append).toKeyedCollections();
	            return this.setCollection(collections["all"]);
	        }

	        /**
	         * Builds a new TimeSeries by dividing events within the TimeSeries
	         * across multiple fixed windows of size `windowSize`.
	         *
	         * Note that these are windows defined relative to Jan 1st, 1970,
	         * and are UTC, so this is best suited to smaller window sizes
	         * (hourly, 5m, 30s, 1s etc), or in situations where you don't care
	         * about the specific window, just that the data is smaller.
	         *
	         * Each window then has an aggregation specification applied as
	         * `aggregation`. This specification describes a mapping of fieldNames
	         * to aggregation functions. For example:
	         * ```
	         * {in: avg, out: avg}
	         * ```
	         * will aggregate both "in" and "out" using the average aggregation
	         * function.
	         *
	         * @example
	         * ```
	         * const timeseries = new TimeSeries(data);
	         * const dailyAvg = timeseries.fixedWindowRollup("1d", {value: avg});
	         * ```
	         *
	         * @param  {string} windowSize  The size of the window. e.g. "6h" or "5m"
	         * @param  {object} aggregation The aggregation specification
	         * @return {TimeSeries}         The resulting rolled up TimeSeries
	         */

	    }, {
	        key: "fixedWindowRollup",
	        value: function fixedWindowRollup(windowSize, aggregation) {
	            var toEvents = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];

	            var aggregatorPipeline = this.pipeline().windowBy(windowSize).emitOn("discard").aggregate(aggregation);

	            var eventTypePipeline = toEvents ? aggregatorPipeline.asEvents() : aggregatorPipeline;

	            var collections = eventTypePipeline.clearWindow().toKeyedCollections();

	            return this.setCollection(collections["all"]);
	        }

	        /**
	         * Builds a new TimeSeries by dividing events into days. The days are
	         * in either local or UTC time, depending on if utc(true) is set on the
	         * Pipeline.
	         *
	         * Each window then has an aggregation specification applied as
	         * `aggregation`. This specification describes a mapping of fieldNames
	         * to aggregation functions. For example:
	         * ```
	         * {in: avg, out: avg}
	         * ```
	         * will aggregate both "in" and "out" using the average aggregation
	         * function across all events within each day.
	         *
	         * @example
	         * ```
	         * const timeseries = new TimeSeries(weatherData);
	         * const dailyMaxTemperature = timeseries.dailyRollup({temperature: max});
	         * ```
	         *
	         * @param  {string} windowSize  The size of the window. e.g. "6h" or "5m"
	         * @param  {object} aggregation The aggregation specification
	         * @return {TimeSeries}         The resulting rolled up TimeSeries
	         */

	    }, {
	        key: "hourlyRollup",
	        value: function hourlyRollup(aggregation) {
	            var toEvent = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	            return this.fixedWindowRollup("1h", aggregation, toEvent);
	        }
	    }, {
	        key: "dailyRollup",
	        value: function dailyRollup(aggregation) {
	            var toEvents = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	            return this._rollup("daily", aggregation, toEvents);
	        }
	    }, {
	        key: "monthlyRollup",
	        value: function monthlyRollup(aggregation) {
	            var toEvents = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	            return this._rollup("monthly", aggregation, toEvents);
	        }
	    }, {
	        key: "yearlyRollup",
	        value: function yearlyRollup(aggregation) {
	            var toEvents = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	            return this._rollup("yearly", aggregation, toEvents);
	        }
	    }, {
	        key: "_rollup",
	        value: function _rollup(type, aggregation) {
	            var toEvents = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];

	            var aggregatorPipeline = this.pipeline().windowBy(type).emitOn("discard").aggregate(aggregation);

	            var eventTypePipeline = toEvents ? aggregatorPipeline.asEvents() : aggregatorPipeline;

	            var collections = eventTypePipeline.clearWindow().toKeyedCollections();

	            return this.setCollection(collections["all"]);
	        }

	        /**
	         * Builds multiple Collections, each collects together
	         * events within a window of size `windowSize`. Note that these
	         * are windows defined relative to Jan 1st, 1970, and are UTC.
	         *
	         * @example
	         * ```
	         * const timeseries = new TimeSeries(data);
	         * const collections = timeseries.collectByFixedWindow("1d");
	         * console.log(collections); // {1d-16314: Collection, 1d-16315: Collection, ...}
	         * ```
	         *
	         * @param  {string} windowSize The size of the window. e.g. "6h" or "5m"
	         * @return {map}    The result is a mapping from window index to a
	         *                  Collection. e.g. "1d-16317" -> Collection
	         */

	    }, {
	        key: "collectByFixedWindow",
	        value: function collectByFixedWindow(windowSize) {
	            return this.pipeline().windowBy(windowSize).emitOn("discard").toKeyedCollections();
	        }

	        /**
	         * STATIC
	         */

	        /**
	         * Static function to compare two TimeSeries to each other. If the TimeSeries
	         * are of the same instance as each other then equals will return true.
	         * @param  {TimeSeries} series1
	         * @param  {TimeSeries} series2
	         * @return {bool} result
	         */

	    }], [{
	        key: "equal",
	        value: function equal(series1, series2) {
	            return series1._data === series2._data && series1._collection === series2._collection;
	        }

	        /**
	         * Static function to compare two TimeSeries to each other. If the TimeSeries
	         * are of the same value as each other then equals will return true.
	         * @param  {TimeSeries} series1
	         * @param  {TimeSeries} series2
	         * @return {bool} result
	         */

	    }, {
	        key: "is",
	        value: function is(series1, series2) {
	            return _immutable2.default.is(series1._data, series2._data) && _collection2.default.is(series1._collection, series2._collection);
	        }

	        /**
	         * Reduces a list of TimeSeries objects using a reducer function. This works
	         * by taking each event in each TimeSeries and collecting them together
	         * based on timestamp. All events for a given time are then merged together
	         * using the reducer function to produce a new Event. Those Events are then
	         * collected together to form a new TimeSeries.
	         *
	         * @param  {object}   data        Meta data for the resulting TimeSeries
	         * @param  {array}    seriesList  A list of TimeSeries objects
	         * @param  {func}     reducer     The reducer function
	         * @param  {string}   fieldSpec   The fields to map
	         *
	         * @return {TimeSeries}        The new TimeSeries
	         */

	    }, {
	        key: "timeseriesListReduce",
	        value: function timeseriesListReduce(data, seriesList, reducer, fieldSpec) {
	            // for each series, map events to the same timestamp/index
	            var eventMap = {};
	            _underscore2.default.each(seriesList, function (series) {
	                var _iteratorNormalCompletion3 = true;
	                var _didIteratorError3 = false;
	                var _iteratorError3 = undefined;

	                try {
	                    for (var _iterator3 = series.events()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                        var event = _step3.value;

	                        var key = void 0;
	                        if (event instanceof _event2.default) {
	                            key = event.timestamp();
	                        } else if (event instanceof _indexedevent2.default) {
	                            key = event.index();
	                        } else if (event instanceof _timerangeevent2.default) {
	                            key = event.timerange().toUTCString();
	                        }

	                        if (!_underscore2.default.has(eventMap, key)) {
	                            eventMap[key] = [];
	                        }

	                        eventMap[key].push(event);
	                    }
	                } catch (err) {
	                    _didIteratorError3 = true;
	                    _iteratorError3 = err;
	                } finally {
	                    try {
	                        if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                            _iterator3.return();
	                        }
	                    } finally {
	                        if (_didIteratorError3) {
	                            throw _iteratorError3;
	                        }
	                    }
	                }
	            });

	            // For each key, reduce the events associated with that key
	            // to a single new event
	            var events = [];
	            _underscore2.default.each(eventMap, function (eventsList) {
	                var event = reducer(eventsList, fieldSpec);
	                events.push(event);
	            });

	            // Make a collection. If the events are out of order, sort them.
	            // It's always possible that events are out of order here, depending
	            // on the start times of the series, along with it the series
	            // have missing data, so I think we don't have a choice here.
	            var collection = new _collection2.default(events);
	            if (!collection.isChronological()) {
	                collection = collection.sortByTime();
	            }

	            return new TimeSeries(_extends({}, data, { collection: collection }));
	        }

	        /**
	         * Takes a list of TimeSeries and merges them together to form a new
	         * Timeseries.
	         *
	         * Merging will produce a new Event only when events are conflict free, so
	         * it is useful to combine multiple TimeSeries which have different time ranges
	         * as well as combine TimeSeries which have different columns.
	         *
	         * @param  {object}              data       Meta data for the new TimeSeries
	         * @param  {array}               seriesList A list of TimeSeries
	         *
	         * @return {TimeSeries}                     The resulting TimeSeries
	         */

	    }, {
	        key: "timeSeriesListMerge",
	        value: function timeSeriesListMerge(data, seriesList) {
	            return TimeSeries.timeseriesListReduce(data, seriesList, _event2.default.merge);
	        }

	        /**
	         * Takes a list of TimeSeries and sums them together to form a new
	         * Timeseries.
	         *
	         * @example
	         *
	         * ```
	         * const ts1 = new TimeSeries(weather1);
	         * const ts2 = new TimeSeries(weather2);
	         * const sum = TimeSeries.sum({name: "sum"}, [ts1, ts2], ["temp"]);
	         * ```
	         *
	         * @param  {object}              data       Meta data for the new TimeSeries
	         * @param  {array}               seriesList A list of TimeSeries
	         * @param  {object|array|string} fieldSpec  Which fields to use in the sum
	         * @return {TimeSeries}                     The resulting TimeSeries
	         */

	    }, {
	        key: "timeSeriesListSum",
	        value: function timeSeriesListSum(data, seriesList, fieldSpec) {
	            return TimeSeries.timeseriesListReduce(data, seriesList, _event2.default.sum, fieldSpec);
	        }
	    }]);

	    return TimeSeries;
	}();

	exports.default = TimeSeries;

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _processor = __webpack_require__(465);

	var _processor2 = _interopRequireDefault(_processor);

	var _pipeline = __webpack_require__(463);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  Copyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * A processor which takes a fieldSpec as its only argument
	 * and returns a new event with only the selected columns
	 */

	var Selector = function (_Processor) {
	    _inherits(Selector, _Processor);

	    function Selector(arg1, options, observer) {
	        _classCallCheck(this, Selector);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Selector).call(this, arg1, options, observer));

	        if (arg1 instanceof Selector) {
	            var other = arg1;
	            _this._fieldSpec = other._fieldSpec;
	        } else if ((0, _pipeline.isPipeline)(arg1)) {
	            _this._fieldSpec = options.fieldSpec;
	        } else {
	            throw new Error("Unknown arg to filter constructor", arg1);
	        }
	        return _this;
	    }

	    _createClass(Selector, [{
	        key: "clone",
	        value: function clone() {
	            return new Selector(this);
	        }
	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            if (this.hasObservers()) {
	                this.emit(_event2.default.selector(event, this._fieldSpec));
	            }
	        }
	    }]);

	    return Selector;
	}(_processor2.default);

	exports.default = Selector;

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _processor = __webpack_require__(465);

	var _processor2 = _interopRequireDefault(_processor);

	var _pipeline = __webpack_require__(463);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * A processor which takes a fieldSpec and returns a new event
	 * with a new column that is a collapsed result of the selected
	 * columns. To collapse the columns it uses the supplied reducer
	 * function. Optionally the new column can completely replace
	 * the existing columns in the event.
	 */

	var Collapser = function (_Processor) {
	    _inherits(Collapser, _Processor);

	    function Collapser(arg1, options, observer) {
	        _classCallCheck(this, Collapser);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Collapser).call(this, arg1, options, observer));

	        if (arg1 instanceof Collapser) {
	            var other = arg1;
	            _this._fieldSpec = other._fieldSpec;
	            _this._name = other._name;
	            _this._reducer = other._reducer;
	            _this._append = other._append;
	        } else if ((0, _pipeline.isPipeline)(arg1)) {
	            _this._fieldSpec = options.fieldSpec;
	            _this._name = options.name;
	            _this._reducer = options.reducer;
	            _this._append = options.append;
	        } else {
	            throw new Error("Unknown arg to Collapser constructor", arg1);
	        }
	        return _this;
	    }

	    _createClass(Collapser, [{
	        key: "clone",
	        value: function clone() {
	            return new Collapser(this);
	        }
	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            if (this.hasObservers()) {
	                this.emit(event.collapse(this._fieldSpec, this._name, this._reducer, this._append));
	            }
	        }
	    }]);

	    return Collapser;
	}(_processor2.default);

	exports.default = Collapser;

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _processor = __webpack_require__(465);

	var _processor2 = _interopRequireDefault(_processor);

	var _pipeline = __webpack_require__(463);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	/**
	 * A processor which takes an operator as its only option
	 * and uses that to either output a new event
	 */

	var Mapper = function (_Processor) {
	    _inherits(Mapper, _Processor);

	    function Mapper(arg1, options, observer) {
	        _classCallCheck(this, Mapper);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Mapper).call(this, arg1, options, observer));

	        if (arg1 instanceof Mapper) {
	            var other = arg1;
	            _this._op = other._op;
	        } else if ((0, _pipeline.isPipeline)(arg1)) {
	            _this._op = options.op;
	        } else {
	            throw new Error("Unknown arg to Mapper constructor", arg1);
	        }
	        return _this;
	    }

	    _createClass(Mapper, [{
	        key: "clone",
	        value: function clone() {
	            return new Mapper(this);
	        }

	        /**
	         * Output an event that is remapped
	         */

	    }, {
	        key: "addEvent",
	        value: function addEvent(event) {
	            if (this.hasObservers()) {
	                this.emit(this._op(event));
	            }
	        }
	    }]);

	    return Mapper;
	}(_processor2.default);

	exports.default = Mapper;

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _pipelineOut = __webpack_require__(477);

	var _pipelineOut2 = _interopRequireDefault(_pipelineOut);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	his source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var EventOut = function (_PipelineOut) {
	    _inherits(EventOut, _PipelineOut);

	    function EventOut(pipeline, options, callback) {
	        _classCallCheck(this, EventOut);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(EventOut).call(this, pipeline));

	        _this._callback = callback;
	        return _this;
	    }

	    _createClass(EventOut, [{
	        key: "addEvent",
	        value: function addEvent(event) {
	            if (this._callback) {
	                this._callback(event);
	            } else {
	                this._pipeline.addResult(event);
	            }
	        }
	    }, {
	        key: "onEmit",
	        value: function onEmit(cb) {
	            this._callback = cb;
	        }
	    }, {
	        key: "flush",
	        value: function flush() {
	            if (!this._callback) {
	                this._pipeline.resultsDone();
	            }
	        }
	    }]);

	    return EventOut;
	}(_pipelineOut2.default);

	exports.default = EventOut;

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _underscore = __webpack_require__(449);

	var _underscore2 = _interopRequireDefault(_underscore);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } /**
	                                                                                                                                                           *  Copyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                           *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                           *  of any required approvals from the U.S. Dept. of Energy).
	                                                                                                                                                           *  All rights reserved.
	                                                                                                                                                           *
	                                                                                                                                                           *  This source code is licensed under the BSD-style license found in the
	                                                                                                                                                           *  LICENSE file in the root directory of this source tree.
	                                                                                                                                                           */

	var PipelineOut = function PipelineOut(pipeline) {
	    _classCallCheck(this, PipelineOut);

	    this._id = _underscore2.default.uniqueId("id-");
	    this._pipeline = pipeline;
	};

	exports.default = PipelineOut;

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _collector = __webpack_require__(470);

	var _collector2 = _interopRequireDefault(_collector);

	var _pipelineOut = __webpack_require__(477);

	var _pipelineOut2 = _interopRequireDefault(_pipelineOut);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	opyright (c) 2016, The Regents of the University of California,
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).
	ll rights reserved.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  This source code is licensed under the BSD-style license found in the
	file in the root directory of this source tree.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var CollectionOut = function (_PipelineOut) {
	    _inherits(CollectionOut, _PipelineOut);

	    function CollectionOut(pipeline, options, callback) {
	        _classCallCheck(this, CollectionOut);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CollectionOut).call(this, pipeline));

	        _this._callback = callback;
	        _this._collector = new _collector2.default({
	            windowType: pipeline.getWindowType(),
	            windowDuration: pipeline.getWindowDuration(),
	            groupBy: pipeline.getGroupBy(),
	            emitOn: pipeline.getEmitOn()
	        }, function (collection, windowKey, groupByKey) {
	            var groupBy = groupByKey ? groupByKey : "all";
	            if (_this._callback) {
	                _this._callback(collection, windowKey, groupBy);
	            } else {
	                var keys = [];
	                if (windowKey !== "global") {
	                    keys.push(windowKey);
	                }
	                if (groupBy !== "all") {
	                    keys.push(groupBy);
	                }
	                var k = keys.length > 0 ? keys.join("--") : "all";
	                _this._pipeline.addResult(k, collection);
	            }
	        });
	        return _this;
	    }

	    _createClass(CollectionOut, [{
	        key: "addEvent",
	        value: function addEvent(event) {
	            this._collector.addEvent(event);
	        }
	    }, {
	        key: "onEmit",
	        value: function onEmit(cb) {
	            this._callback = cb;
	        }
	    }, {
	        key: "flush",
	        value: function flush() {
	            this._collector.flushCollections();
	            if (!this._callback) {
	                this._pipeline.resultsDone();
	            }
	        }
	    }]);

	    return CollectionOut;
	}(_pipelineOut2.default);

	exports.default = CollectionOut;

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _moment = __webpack_require__(346);

	var _moment2 = _interopRequireDefault(_moment);

	var _chai = __webpack_require__(304);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _timerangeevent = __webpack_require__(455);

	var _timerangeevent2 = _interopRequireDefault(_timerangeevent);

	var _series = __webpack_require__(472);

	var _series2 = _interopRequireDefault(_series);

	var _range = __webpack_require__(450);

	var _range2 = _interopRequireDefault(_range);

	var _functions = __webpack_require__(456);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
	                                                                                                                                                                                                                              *  Copyright (c) 2015, The Regents of the University of California,
	                                                                                                                                                                                                                              *  through Lawrence Berkeley National Laboratory (subject to receipt
	                                                                                                                                                                                                                              *  of any required approvals from the U.S. Dept. of Energy).
	                                                                                                                                                                                                                              *  All rights reserved.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *  This source code is licensed under the BSD-style license found in the
	                                                                                                                                                                                                                              *  LICENSE file in the root directory of this source tree.
	                                                                                                                                                                                                                              */

	/* global it, describe */
	/* eslint no-unused-expressions: 0 */
	/* eslint-disable max-len */

	var data = {
	    name: "traffic",
	    columns: ["time", "value", "status"],
	    points: [[1400425947000, 52, "ok"], [1400425948000, 18, "ok"], [1400425949000, 26, "fail"], [1400425950000, 93, "offline"]]
	};

	var indexedData = {
	    index: "1d-625",
	    name: "traffic",
	    columns: ["time", "value", "status"],
	    points: [[1400425947000, 52, "ok"], [1400425948000, 18, "ok"], [1400425949000, 26, "fail"], [1400425950000, 93, "offline"]]
	};

	var statsData = {
	    name: "stats",
	    columns: ["time", "value"],
	    points: [[1400425941000, 13], [1400425942000, 18], [1400425943000, 13], [1400425944000, 14], [1400425945000, 13], [1400425946000, 16], [1400425947000, 14], [1400425948000, 21], [1400425948000, 13]]
	};

	var statsData2 = {
	    name: "stats",
	    columns: ["time", "value"],
	    points: [[1400425941000, 26], [1400425942000, 33], [1400425943000, 65], [1400425944000, 28], [1400425945000, 34], [1400425946000, 55], [1400425947000, 25], [1400425948000, 44], [1400425949000, 50], [1400425950000, 36], [1400425951000, 26], [1400425952000, 37], [1400425953000, 43], [1400425954000, 62], [1400425955000, 35], [1400425956000, 38], [1400425957000, 45], [1400425958000, 32], [1400425959000, 28], [1400425960000, 34]]
	};

	var availabilityData = {
	    name: "availability",
	    columns: ["index", "uptime"],
	    points: [["2014-07", "100%"], ["2014-08", "88%"], ["2014-09", "95%"], ["2014-10", "99%"], ["2014-11", "91%"], ["2014-12", "99%"], ["2015-01", "100%"], ["2015-02", "92%"], ["2015-03", "99%"], ["2015-04", "87%"], ["2015-05", "92%"], ["2015-06", "100%"]]
	};

	var availabilitySeries = {
	    name: "availability",
	    columns: ["index", "uptime", "notes", "outages"],
	    points: [["2014-07", 100, "", 2], ["2014-08", 88, "", 17], ["2014-09", 95, "", 6], ["2014-10", 99, "", 3], ["2014-11", 91, "", 14], ["2014-12", 99, "", 3], ["2015-01", 100, "", 0], ["2015-02", 92, "", 12], ["2015-03", 99, "Minor outage March 2", 4], ["2015-04", 87, "Planned downtime in April", 82], ["2015-05", 92, "Router failure June 12", 26], ["2015-06", 100, "", 0]]
	};

	var interfaceData = {
	    name: "star-cr5:to_anl_ip-a_v4",
	    description: "star-cr5->anl(as683):100ge:site-ex:show:intercloud",
	    device: "star-cr5",
	    id: 169,
	    interface: "to_anl_ip-a_v4",
	    is_ipv6: false,
	    is_oscars: false,
	    oscars_id: null,
	    resource_uri: "",
	    site: "anl",
	    site_device: "noni",
	    site_interface: "et-1/0/0",
	    stats_type: "Standard",
	    title: null,
	    columns: ["time", "in", "out"],
	    points: [[1400425947000, 52, 34], [1400425948000, 18, 13], [1400425949000, 26, 67], [1400425950000, 93, 91]]
	};

	var trafficBNLtoNEWY = {
	    name: "BNL to NEWY",
	    columns: ["time", "in"],
	    points: [[1441051950000, 2998846524.2666664], [1441051980000, 2682032885.3333335], [1441052010000, 2753537586.9333334]]
	};

	var trafficNEWYtoBNL = {
	    name: "NEWY to BNL",
	    columns: ["time", "out"],
	    points: [[1441051950000, 22034579982.4], [1441051980000, 24783871443.2], [1441052010000, 26907368572.800003]]
	};

	var fmt = "YYYY-MM-DD HH:mm";
	var bisectTestData = {
	    name: "test",
	    columns: ["time", "value"],
	    points: [[(0, _moment2.default)("2012-01-11 01:00", fmt).valueOf(), 22], [(0, _moment2.default)("2012-01-11 02:00", fmt).valueOf(), 33], [(0, _moment2.default)("2012-01-11 03:00", fmt).valueOf(), 44], [(0, _moment2.default)("2012-01-11 04:00", fmt).valueOf(), 55], [(0, _moment2.default)("2012-01-11 05:00", fmt).valueOf(), 66], [(0, _moment2.default)("2012-01-11 06:00", fmt).valueOf(), 77], [(0, _moment2.default)("2012-01-11 07:00", fmt).valueOf(), 88]]
	};

	var trafficDataIn = {
	    name: "star-cr5:to_anl_ip-a_v4",
	    columns: ["time", "in"],
	    points: [[1400425947000, 52], [1400425948000, 18], [1400425949000, 26], [1400425950000, 93]]
	};

	var trafficDataOut = {
	    name: "star-cr5:to_anl_ip-a_v4",
	    columns: ["time", "out"],
	    points: [[1400425947000, 34], [1400425948000, 13], [1400425949000, 67], [1400425950000, 91]]
	};

	var partialTraffic1 = {
	    name: "star-cr5:to_anl_ip-a_v4",
	    columns: ["time", "value"],
	    points: [[1400425947000, 34], [1400425948000, 13], [1400425949000, 67], [1400425950000, 91]]
	};

	var partialTraffic2 = {
	    name: "star-cr5:to_anl_ip-a_v4",
	    columns: ["time", "value"],
	    points: [[1400425951000, 65], [1400425952000, 86], [1400425953000, 27], [1400425954000, 72]]
	};

	var missingDataSeries = new _series2.default({
	    name: "series",
	    columns: ["time", "in", "out"],
	    points: [[1400425951000, 100, null], [1400425952000, 300, undefined], [1400425953000, null, 500], [1400425954000, 200, 400]]
	});

	var nullDataSeries = new _series2.default({
	    name: "series",
	    columns: ["time", "in", "out"],
	    points: [[1400425951000, null, null], [1400425952000, null, null], [1400425953000, null, null], [1400425954000, null, null]]
	});

	var noDataSeries = new _series2.default({
	    name: "series",
	    columns: ["time", "in", "out"],
	    points: []
	});

	var outageEvents = [{
	    startTime: "2015-03-04T09:00:00Z",
	    endTime: "2015-03-04T14:00:00Z",
	    title: "ANL Scheduled Maintenance",
	    description: "ANL will be switching border routers...",
	    completed: true,
	    external_ticket: "",
	    esnet_ticket: "ESNET-20150302-002",
	    organization: "ANL",
	    type: "Planned"
	}, {
	    startTime: "2015-04-22T03:30:00Z",
	    endTime: "2015-04-22T13:00:00Z",
	    description: "At 13:33 pacific circuit 06519 went down.",
	    title: "STAR-CR5 < 100 ge 06519 > ANL  - Outage",
	    completed: true,
	    external_ticket: "",
	    esnet_ticket: "ESNET-20150421-013",
	    organization: "Internet2 / Level 3",
	    type: "Unplanned"
	}, {
	    startTime: "2015-04-22T03:35:00Z",
	    endTime: "2015-04-22T16:50:00Z",
	    title: "STAR-CR5 < 100 ge 06519 > ANL  - Outage",
	    description: "The listed circuit was unavailable due to bent pins.",
	    completed: true,
	    external_ticket: "3576:144",
	    esnet_ticket: "ESNET-20150421-013",
	    organization: "Internet2 / Level 3",
	    type: "Unplanned"
	}];

	var sumPart1 = {
	    name: "part1",
	    columns: ["time", "in", "out"],
	    points: [[1400425951000, 1, 6], [1400425952000, 2, 7], [1400425953000, 3, 8], [1400425954000, 4, 9]]
	};
	var sumPart2 = {
	    name: "part2",
	    columns: ["time", "in", "out"],
	    points: [[1400425951000, 9, 1], [1400425952000, 7, 2], [1400425953000, 5, 3], [1400425954000, 3, 4]]
	};

	var sept2014Data = {
	    utc: false,
	    name: "traffic",
	    columns: ["time", "value"],
	    points: [[1409529600000, 80], [1409533200000, 88], [1409536800000, 52], [1409540400000, 80], [1409544000000, 26], [1409547600000, 37], [1409551200000, 6], [1409554800000, 32], [1409558400000, 69], [1409562000000, 21], [1409565600000, 6], [1409569200000, 54], [1409572800000, 88], [1409576400000, 41], [1409580000000, 35], [1409583600000, 43], [1409587200000, 84], [1409590800000, 32], [1409594400000, 41], [1409598000000, 57], [1409601600000, 27], [1409605200000, 50], [1409608800000, 13], [1409612400000, 63], [1409616000000, 58], [1409619600000, 80], [1409623200000, 59], [1409626800000, 96], [1409630400000, 2], [1409634000000, 20], [1409637600000, 64], [1409641200000, 7], [1409644800000, 50], [1409648400000, 88], [1409652000000, 34], [1409655600000, 31], [1409659200000, 16], [1409662800000, 38], [1409666400000, 94], [1409670000000, 78], [1409673600000, 86], [1409677200000, 13], [1409680800000, 34], [1409684400000, 29], [1409688000000, 48], [1409691600000, 80], [1409695200000, 30], [1409698800000, 15], [1409702400000, 62], [1409706000000, 66], [1409709600000, 44], [1409713200000, 94], [1409716800000, 78], [1409720400000, 29], [1409724000000, 21], [1409727600000, 4], [1409731200000, 83], [1409734800000, 15], [1409738400000, 89], [1409742000000, 53], [1409745600000, 70], [1409749200000, 41], [1409752800000, 47], [1409756400000, 30], [1409760000000, 68], [1409763600000, 89], [1409767200000, 29], [1409770800000, 17], [1409774400000, 38], [1409778000000, 67], [1409781600000, 75], [1409785200000, 89], [1409788800000, 47], [1409792400000, 82], [1409796000000, 33], [1409799600000, 67], [1409803200000, 93], [1409806800000, 86], [1409810400000, 97], [1409814000000, 19], [1409817600000, 19], [1409821200000, 31], [1409824800000, 56], [1409828400000, 19], [1409832000000, 43], [1409835600000, 29], [1409839200000, 72], [1409842800000, 27], [1409846400000, 21], [1409850000000, 88], [1409853600000, 18], [1409857200000, 30], [1409860800000, 46], [1409864400000, 34], [1409868000000, 31], [1409871600000, 20], [1409875200000, 45], [1409878800000, 17], [1409882400000, 24], [1409886000000, 84], [1409889600000, 6], [1409893200000, 91], [1409896800000, 82], [1409900400000, 71], [1409904000000, 97], [1409907600000, 43], [1409911200000, 38], [1409914800000, 1], [1409918400000, 71], [1409922000000, 50], [1409925600000, 19], [1409929200000, 19], [1409932800000, 86], [1409936400000, 65], [1409940000000, 93], [1409943600000, 35]]
	};

	describe("TimeSeries", function () {

	    describe("TimeSeries created with our wire format", function () {

	        it("can create an series", function (done) {
	            var series = new _series2.default(data);
	            (0, _chai.expect)(series).to.be.ok;
	            done();
	        });
	    });

	    describe("TimeSeries can be created with a list of events", function () {

	        it("can create an series", function (done) {
	            var events = [];
	            events.push(new _event2.default(new Date(2015, 7, 1), { value: 27 }));
	            events.push(new _event2.default(new Date(2015, 8, 1), { value: 14 }));
	            var series = new _series2.default({
	                name: "events",
	                events: events
	            });
	            (0, _chai.expect)(series.size()).to.equal(2);
	            done();
	        });

	        it("can create an series with no events", function (done) {
	            var events = [];
	            var series = new _series2.default({
	                name: "events",
	                events: events
	            });
	            (0, _chai.expect)(series.size()).to.equal(0);
	            done();
	        });
	    });

	    describe("Timeseries basic query API", function () {

	        it("can return the size of the series", function (done) {
	            var series = new _series2.default(data);
	            (0, _chai.expect)(series.size()).to.equal(4);
	            done();
	        });

	        it("can return an item in the series as an event", function (done) {
	            var series = new _series2.default(data);
	            var event = series.at(1);
	            (0, _chai.expect)(event).to.be.an.instanceof(_event2.default);
	            done();
	        });

	        it("can return an item in the series with the correct data", function (done) {
	            var series = new _series2.default(data);
	            var event = series.at(1);
	            (0, _chai.expect)(JSON.stringify(event.data())).to.equal("{\"value\":18,\"status\":\"ok\"}");
	            (0, _chai.expect)(event.timestamp().getTime()).to.equal(1400425948000);
	            done();
	        });

	        it("can serialize to a string", function (done) {
	            var series = new _series2.default(data);
	            var expectedString = "{\"name\":\"traffic\",\"utc\":true,\"columns\":[\"time\",\"value\",\"status\"],\"points\":[[1400425947000,52,\"ok\"],[1400425948000,18,\"ok\"],[1400425949000,26,\"fail\"],[1400425950000,93,\"offline\"]]}";
	            (0, _chai.expect)(series.toString()).to.equal(expectedString);
	            done();
	        });

	        it("can return the time range of the series", function (done) {
	            var series = new _series2.default(data);
	            var expectedString = "[Sun, 18 May 2014 15:12:27 GMT, Sun, 18 May 2014 15:12:30 GMT]";
	            (0, _chai.expect)(series.timerange().toUTCString()).to.equal(expectedString);
	            done();
	        });
	    });

	    describe("Timeseries support for meta data", function () {

	        it("can create a series with meta data and get that data back", function (done) {
	            var series = new _series2.default(interfaceData);
	            var expected = "{\"site_interface\":\"et-1/0/0\",\"utc\":true,\"site\":\"anl\",\"name\":\"star-cr5:to_anl_ip-a_v4\",\"site_device\":\"noni\",\"device\":\"star-cr5\",\"oscars_id\":null,\"title\":null,\"is_oscars\":false,\"interface\":\"to_anl_ip-a_v4\",\"stats_type\":\"Standard\",\"id\":169,\"resource_uri\":\"\",\"is_ipv6\":false,\"description\":\"star-cr5->anl(as683):100ge:site-ex:show:intercloud\",\"columns\":[\"time\",\"in\",\"out\"],\"points\":[[1400425947000,52,34],[1400425948000,18,13],[1400425949000,26,67],[1400425950000,93,91]]}";
	            (0, _chai.expect)(series.toString()).to.equal(expected);
	            (0, _chai.expect)(series.meta("interface")).to.equal("to_anl_ip-a_v4");
	            done();
	        });
	    });

	    describe("Timeseries support for deeply nested structures", function () {

	        it("can create a series with a nested object", function (done) {
	            var series = new _series2.default({
	                name: "Map Traffic",
	                columns: ["time", "NASA_north", "NASA_south"],
	                points: [[1400425951000, { in: 100, out: 200 }, { in: 145, out: 135 }], [1400425952000, { in: 200, out: 400 }, { in: 146, out: 142 }], [1400425953000, { in: 300, out: 600 }, { in: 147, out: 158 }], [1400425954000, { in: 400, out: 800 }, { in: 155, out: 175 }]]
	            });
	            (0, _chai.expect)(series.at(0).get("NASA_north").in).to.equal(100);
	            (0, _chai.expect)(series.at(0).get("NASA_north").out).to.equal(200);
	            done();
	        });

	        it("can create a series with nested events", function (done) {
	            var events = [];
	            events.push(new _event2.default(new Date(2015, 6, 1), { NASA_north: { in: 100, out: 200 }, NASA_south: { in: 145, out: 135 } }));
	            events.push(new _event2.default(new Date(2015, 7, 1), { NASA_north: { in: 200, out: 400 }, NASA_south: { in: 146, out: 142 } }));
	            events.push(new _event2.default(new Date(2015, 8, 1), { NASA_north: { in: 300, out: 600 }, NASA_south: { in: 147, out: 158 } }));
	            events.push(new _event2.default(new Date(2015, 9, 1), { NASA_north: { in: 400, out: 800 }, NASA_south: { in: 155, out: 175 } }));
	            var series = new _series2.default({
	                name: "Map traffic",
	                events: events
	            });
	            (0, _chai.expect)(series.at(0).get("NASA_north").in).to.equal(100);
	            (0, _chai.expect)(series.at(3).get("NASA_south").out).to.equal(175);
	            (0, _chai.expect)(series.size()).to.equal(4);
	            done();
	        });
	    });

	    describe("Timeseries compare", function () {

	        it("can compare a series and a reference to a series as being equal", function (done) {
	            var series = new _series2.default(data);
	            var refSeries = series;
	            (0, _chai.expect)(series).to.equal(refSeries);
	            done();
	        });

	        it("can use the equals() comparator to compare a series and a copy of the series as true", function (done) {
	            var series = new _series2.default(data);
	            var copyOfSeries = new _series2.default(series);
	            (0, _chai.expect)(_series2.default.equal(series, copyOfSeries)).to.be.true;
	            done();
	        });

	        it("can use the equals() comparator to compare a series and a value equivalent series as false", function (done) {
	            var series = new _series2.default(data);
	            var otherSeries = new _series2.default(data);
	            (0, _chai.expect)(_series2.default.equal(series, otherSeries)).to.be.false;
	            done();
	        });

	        it("can use the is() comparator to compare a series and a value equivalent series as true", function (done) {
	            var series = new _series2.default(data);
	            var otherSeries = new _series2.default(data);
	            (0, _chai.expect)(_series2.default.is(series, otherSeries)).to.be.true;
	            done();
	        });
	    });

	    describe("TimeSeries reducing functions", function () {

	        it("can sum the series", function (done) {
	            var series = new _series2.default(data);
	            (0, _chai.expect)(series.sum("value")).to.equal(189);
	            done();
	        });

	        it("can sum a series with deep data", function (done) {
	            var series = new _series2.default({
	                name: "Map Traffic",
	                columns: ["time", "NASA_north", "NASA_south"],
	                points: [[1400425951000, { in: 100, out: 200 }, { in: 145, out: 135 }], [1400425952000, { in: 200, out: 400 }, { in: 146, out: 142 }], [1400425953000, { in: 300, out: 600 }, { in: 147, out: 158 }], [1400425954000, { in: 400, out: 800 }, { in: 155, out: 175 }]]
	            });
	            (0, _chai.expect)(series.sum("NASA_north.in")).to.equal(1000);
	            done();
	        });

	        it("can sum a series with missing data", function (done) {
	            var inSeries = missingDataSeries.clean("in");
	            var outSeries = missingDataSeries.clean("out");
	            (0, _chai.expect)(inSeries.sum("in")).to.equal(600);
	            (0, _chai.expect)(outSeries.sum("out")).to.equal(900);
	            (0, _chai.expect)(inSeries.sizeValid("in")).to.equal(3);
	            (0, _chai.expect)(outSeries.sizeValid("out")).to.equal(2);
	            done();
	        });

	        it("can sum the series with no column name specified", function (done) {
	            var series = new _series2.default(data);
	            (0, _chai.expect)(series.sum()).to.equal(189);
	            done();
	        });

	        it("can find the max of the series", function (done) {
	            var series = new _series2.default(data);
	            (0, _chai.expect)(series.max()).to.equal(93);
	            done();
	        });

	        it("can find the max of the series with missing data", function (done) {
	            var series = new _series2.default(missingDataSeries);
	            (0, _chai.expect)(series.max("in")).to.equal(300);
	            (0, _chai.expect)(series.max("out")).to.equal(500);
	            done();
	        });

	        it("can find the max of the series with no data", function (done) {
	            var series = new _series2.default(noDataSeries);
	            (0, _chai.expect)(series.max()).to.be.undefined;
	            done();
	        });

	        it("can find the max of the series with null data", function (done) {
	            var series = new _series2.default(nullDataSeries);
	            (0, _chai.expect)(series.max()).to.be.undefined;
	            done();
	        });

	        it("can find the max of a series with deep data", function (done) {
	            var series = new _series2.default({
	                name: "Map Traffic",
	                columns: ["time", "NASA_north", "NASA_south"],
	                points: [[1400425951000, { in: 100, out: 200 }, { in: 145, out: 135 }], [1400425952000, { in: 200, out: 400 }, { in: 146, out: 182 }], [1400425953000, { in: 300, out: 600 }, { in: 147, out: 158 }], [1400425954000, { in: 400, out: 800 }, { in: 155, out: 175 }]]
	            });
	            (0, _chai.expect)(series.max("NASA_south.out")).to.equal(182);
	            done();
	        });

	        it("can find the min of the series", function (done) {
	            var series = new _series2.default(data);
	            (0, _chai.expect)(series.min()).to.equal(18);
	            done();
	        });

	        it("can find the min of the series with missing data", function (done) {
	            var series = new _series2.default(missingDataSeries);
	            var inSeries = series.clean("in");
	            var outSeries = series.clean("out");
	            (0, _chai.expect)(inSeries.min("in")).to.equal(100);
	            (0, _chai.expect)(outSeries.min("out")).to.equal(400);
	            done();
	        });

	        it("can find the min of a series with deep data", function (done) {
	            var series = new _series2.default({
	                name: "Map Traffic",
	                columns: ["time", "NASA_north", "NASA_south"],
	                points: [[1400425951000, { in: 100, out: 200 }, { in: 145, out: 135 }], [1400425952000, { in: 200, out: 400 }, { in: 146, out: 182 }], [1400425953000, { in: 300, out: 600 }, { in: 147, out: 158 }], [1400425954000, { in: 400, out: 800 }, { in: 155, out: 175 }]]
	            });
	            (0, _chai.expect)(series.min("NASA_south.out")).to.equal(135);
	            done();
	        });
	    });

	    describe("TimeSeries statistics functions", function () {

	        it("can avg the series", function (done) {
	            var series = new _series2.default(statsData);
	            (0, _chai.expect)(series.avg()).to.equal(15);
	            done();
	        });

	        it("can avg series with deep data", function (done) {
	            var series = new _series2.default({
	                name: "Map Traffic",
	                columns: ["time", "NASA_north", "NASA_south"],
	                points: [[1400425951000, { in: 100, out: 200 }, { in: 145, out: 135 }], [1400425952000, { in: 200, out: 400 }, { in: 146, out: 142 }], [1400425953000, { in: 300, out: 600 }, { in: 147, out: 158 }], [1400425954000, { in: 400, out: 800 }, { in: 155, out: 175 }]]
	            });
	            (0, _chai.expect)(series.avg("NASA_north.in")).to.equal(250);
	            done();
	        });

	        it("can avg series with deep data", function (done) {
	            var series = new _series2.default(availabilitySeries);
	            (0, _chai.expect)(series.avg("uptime")).to.equal(95.16666666666667);
	            done();
	        });

	        it("can find the max of the series with no data", function (done) {
	            var series = new _series2.default(noDataSeries);
	            (0, _chai.expect)(series.avg()).to.be.undefined;
	            done();
	        });

	        it("can mean of the series (the avg)", function (done) {
	            var series = new _series2.default(statsData);
	            (0, _chai.expect)(series.mean()).to.equal(15);
	            done();
	        });

	        it("can find the median of the series", function (done) {
	            var series = new _series2.default(statsData);
	            (0, _chai.expect)(series.median()).to.equal(14);
	            done();
	        });

	        it("can find the median of a series with deep data and even number of events", function (done) {
	            var series = new _series2.default({
	                name: "Map Traffic",
	                columns: ["time", "NASA_north", "NASA_south"],
	                points: [[1400425951000, { in: 100, out: 200 }, { in: 145, out: 135 }], [1400425952000, { in: 200, out: 400 }, { in: 146, out: 142 }], [1400425953000, { in: 400, out: 600 }, { in: 147, out: 158 }], [1400425954000, { in: 800, out: 800 }, { in: 155, out: 175 }]]
	            });
	            (0, _chai.expect)(series.median("NASA_north.in")).to.equal(300);
	            done();
	        });

	        it("can find the median of a series with deep data and odd number of events", function (done) {
	            var series = new _series2.default({
	                name: "Map Traffic",
	                columns: ["time", "NASA_north", "NASA_south"],
	                points: [[1400425951000, { in: 100, out: 200 }, { in: 145, out: 135 }], [1400425952000, { in: 200, out: 400 }, { in: 146, out: 142 }], [1400425953000, { in: 400, out: 600 }, { in: 147, out: 158 }]]
	            });
	            (0, _chai.expect)(series.median("NASA_north.out")).to.equal(400);
	            done();
	        });

	        it("can find the standard deviation of the series", function (done) {
	            var series = new _series2.default(statsData);
	            (0, _chai.expect)(series.stdev()).to.equal(2.6666666666666665);
	            done();
	        });

	        it("can find the standard deviation and mean of another series", function (done) {
	            var series = new _series2.default(statsData2);
	            (0, _chai.expect)(Math.round(series.mean() * 10) / 10).to.equal(38.8);
	            (0, _chai.expect)(Math.round(series.stdev() * 10) / 10).to.equal(11.4);
	            done();
	        });

	        it("can find the standard deviation of a series with deep data", function (done) {
	            var series = new _series2.default({
	                name: "Map Traffic",
	                columns: ["time", "NASA_north", "NASA_south"],
	                points: [[1400425951000, { in: 100, out: 200 }, { in: 145, out: 135 }], [1400425952000, { in: 200, out: 400 }, { in: 146, out: 142 }], [1400425953000, { in: 400, out: 600 }, { in: 147, out: 158 }], [1400425954000, { in: 800, out: 800 }, { in: 155, out: 175 }]]
	            });
	            (0, _chai.expect)(series.stdev("NASA_south.out")).to.equal(15.435349040433131);
	            done();
	        });
	    });

	    describe("TimeSeries bisect function", function () {

	        it("can find the bisect starting from 0", function (done) {
	            var series = new _series2.default(bisectTestData);
	            (0, _chai.expect)(series.bisect((0, _moment2.default)("2012-01-11 00:30", fmt).toDate())).to.equal(0);
	            (0, _chai.expect)(series.bisect((0, _moment2.default)("2012-01-11 03:00", fmt).toDate())).to.equal(2);
	            (0, _chai.expect)(series.bisect((0, _moment2.default)("2012-01-11 03:30", fmt).toDate())).to.equal(2);
	            (0, _chai.expect)(series.bisect((0, _moment2.default)("2012-01-11 08:00", fmt).toDate())).to.equal(6);
	            done();
	        });

	        it("can find the bisect starting from an begin index", function (done) {
	            var series = new _series2.default(bisectTestData);

	            (0, _chai.expect)(series.bisect((0, _moment2.default)("2012-01-11 03:00", fmt).toDate(), 2)).to.equal(2);
	            (0, _chai.expect)(series.bisect((0, _moment2.default)("2012-01-11 03:30", fmt).toDate(), 3)).to.equal(2);
	            (0, _chai.expect)(series.bisect((0, _moment2.default)("2012-01-11 03:30", fmt).toDate(), 4)).to.equal(3);

	            var first = series.bisect((0, _moment2.default)("2012-01-11 03:30", fmt).toDate());
	            var second = series.bisect((0, _moment2.default)("2012-01-11 04:30", fmt).toDate(), first);
	            (0, _chai.expect)(series.at(first).get()).to.equal(44);
	            (0, _chai.expect)(series.at(second).get()).to.equal(55);
	            done();
	        });
	    });

	    describe("TimeSeries with TimeRangeEvents", function () {

	        var events = outageEvents.map(function (event) {
	            var startTime = event.startTime;
	            var endTime = event.endTime;

	            var other = _objectWithoutProperties(event, ["startTime", "endTime"]); //eslint-disable-line


	            var b = new Date(startTime);
	            var e = new Date(endTime);
	            return new _timerangeevent2.default(new _range2.default(b, e), other);
	        });

	        it("can make a timeseries with the right timerange", function (done) {
	            var series = new _series2.default({ name: "outages", events: events });
	            (0, _chai.expect)(series.range().toString()).to.equal("[1425459600000,1429721400000]");
	            done();
	        });

	        it("can make a timeseries that can be serialized to a string", function (done) {
	            var series = new _series2.default({ name: "outages", events: events });
	            var expected = "{\"name\":\"outages\",\"utc\":true,\"columns\":[\"timerange\",\"title\",\"description\",\"completed\",\"external_ticket\",\"esnet_ticket\",\"organization\",\"type\"],\"points\":[[[1425459600000,1425477600000],\"ANL Scheduled Maintenance\",\"ANL will be switching border routers...\",true,\"\",\"ESNET-20150302-002\",\"ANL\",\"Planned\"],[[1429673400000,1429707600000],\"At 13:33 pacific circuit 06519 went down.\",\"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",true,\"\",\"ESNET-20150421-013\",\"Internet2 / Level 3\",\"Unplanned\"],[[1429673700000,1429721400000],\"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",\"The listed circuit was unavailable due to bent pins.\",true,\"3576:144\",\"ESNET-20150421-013\",\"Internet2 / Level 3\",\"Unplanned\"]]}";
	            (0, _chai.expect)(series.toString()).to.equal(expected);
	            done();
	        });

	        it("can make a timeseries that can be serialized to JSON and then used to construct a TimeSeries again", function (done) {
	            var series = new _series2.default({ name: "outages", events: events });
	            var newSeries = new _series2.default(series.toJSON());
	            (0, _chai.expect)(series.toString()).to.equal(newSeries.toString());
	            done();
	        });
	    });

	    describe("TimeSeries IndexedEvents", function () {

	        it("can serialize to a string", function (done) {
	            var series = new _series2.default(indexedData);
	            var expectedString = "{\"index\":\"1d-625\",\"name\":\"traffic\",\"utc\":true,\"columns\":[\"time\",\"value\",\"status\"],\"points\":[[1400425947000,52,\"ok\"],[1400425948000,18,\"ok\"],[1400425949000,26,\"fail\"],[1400425950000,93,\"offline\"]]}";
	            (0, _chai.expect)(series.toString()).to.equal(expectedString);
	            done();
	        });

	        it("can return the time range of the series", function (done) {
	            var series = new _series2.default(indexedData);
	            var expectedString = "[Sat, 18 Sep 1971 00:00:00 GMT, Sun, 19 Sep 1971 00:00:00 GMT]";
	            (0, _chai.expect)(series.indexAsRange().toUTCString()).to.equal(expectedString);
	            done();
	        });

	        it("can create an series with indexed data (in UTC time)", function (done) {
	            var series = new _series2.default(availabilityData);
	            var event = series.at(2);
	            (0, _chai.expect)(event.timerangeAsUTCString()).to.equal("[Mon, 01 Sep 2014 00:00:00 GMT, Tue, 30 Sep 2014 23:59:59 GMT]");
	            (0, _chai.expect)(series.range().begin().getTime()).to.equal(1404172800000);
	            (0, _chai.expect)(series.range().end().getTime()).to.equal(1435708799999);
	            done();
	        });
	    });

	    describe("TimeSeries slicing", function () {

	        it("can create a slice of a series", function (done) {
	            var series = new _series2.default(availabilityData);
	            var expectedLastTwo = "{\"name\":\"availability\",\"utc\":true,\"columns\":[\"index\",\"uptime\"],\"points\":[[\"2015-05\",\"92%\"],[\"2015-06\",\"100%\"]]}";
	            var lastTwo = series.slice(-2);
	            (0, _chai.expect)(lastTwo.toString()).to.equal(expectedLastTwo);
	            var expectedFirstThree = "{\"name\":\"availability\",\"utc\":true,\"columns\":[\"index\",\"uptime\"],\"points\":[[\"2014-07\",\"100%\"],[\"2014-08\",\"88%\"],[\"2014-09\",\"95%\"]]}";
	            var firstThree = series.slice(0, 3);
	            (0, _chai.expect)(firstThree.toString()).to.equal(expectedFirstThree);
	            var expectedAll = "{\"name\":\"availability\",\"utc\":true,\"columns\":[\"index\",\"uptime\"],\"points\":[[\"2014-07\",\"100%\"],[\"2014-08\",\"88%\"],[\"2014-09\",\"95%\"],[\"2014-10\",\"99%\"],[\"2014-11\",\"91%\"],[\"2014-12\",\"99%\"],[\"2015-01\",\"100%\"],[\"2015-02\",\"92%\"],[\"2015-03\",\"99%\"],[\"2015-04\",\"87%\"],[\"2015-05\",\"92%\"],[\"2015-06\",\"100%\"]]}";
	            var sliceAll = series.slice();
	            (0, _chai.expect)(sliceAll.toString()).to.equal(expectedAll);
	            done();
	        });
	    });

	    describe("TimeSeries merging", function () {

	        it("can merge two timeseries columns together using merge", function (done) {
	            var inTraffic = new _series2.default(trafficDataIn);
	            var outTraffic = new _series2.default(trafficDataOut);
	            var trafficSeries = _series2.default.timeSeriesListMerge({ name: "traffic" }, [inTraffic, outTraffic]);
	            (0, _chai.expect)(trafficSeries.at(2).get("in")).to.equal(26);
	            (0, _chai.expect)(trafficSeries.at(2).get("out")).to.equal(67);
	            done();
	        });

	        it("can append two timeseries together using merge", function (done) {
	            var tile1 = new _series2.default(partialTraffic1);
	            var tile2 = new _series2.default(partialTraffic2);
	            var trafficSeries = _series2.default.timeSeriesListMerge({ name: "traffic", source: "router" }, [tile1, tile2]);
	            (0, _chai.expect)(trafficSeries.size()).to.equal(8);
	            (0, _chai.expect)(trafficSeries.at(0).get()).to.equal(34);
	            (0, _chai.expect)(trafficSeries.at(1).get()).to.equal(13);
	            (0, _chai.expect)(trafficSeries.at(2).get()).to.equal(67);
	            (0, _chai.expect)(trafficSeries.at(3).get()).to.equal(91);
	            (0, _chai.expect)(trafficSeries.at(4).get()).to.equal(65);
	            (0, _chai.expect)(trafficSeries.at(5).get()).to.equal(86);
	            (0, _chai.expect)(trafficSeries.at(6).get()).to.equal(27);
	            (0, _chai.expect)(trafficSeries.at(7).get()).to.equal(72);
	            (0, _chai.expect)(trafficSeries.name()).to.equal("traffic");
	            (0, _chai.expect)(trafficSeries.meta("source")).to.equal("router");
	            done();
	        });

	        it("can merge two series and preserve the correct time format", function (done) {
	            var inTraffic = new _series2.default(trafficBNLtoNEWY);
	            var outTraffic = new _series2.default(trafficNEWYtoBNL);
	            var trafficSeries = _series2.default.timeSeriesListMerge({ name: "traffic" }, [inTraffic, outTraffic]);
	            (0, _chai.expect)(trafficSeries.at(0).timestampAsUTCString()).to.equal("Mon, 31 Aug 2015 20:12:30 GMT");
	            (0, _chai.expect)(trafficSeries.at(1).timestampAsUTCString()).to.equal("Mon, 31 Aug 2015 20:13:00 GMT");
	            (0, _chai.expect)(trafficSeries.at(2).timestampAsUTCString()).to.equal("Mon, 31 Aug 2015 20:13:30 GMT");
	            done();
	        });
	    });

	    describe("TimeSeries sum static function", function () {

	        it("can merge two timeseries into a new timeseries that is the sum", function (done) {
	            var part1 = new _series2.default(sumPart1);
	            var part2 = new _series2.default(sumPart2);
	            var sum = _series2.default.timeSeriesListSum({ name: "sum" }, [part1, part2], ["in", "out"]);

	            //10, 9, 8, 7
	            (0, _chai.expect)(sum.at(0).get("in")).to.equal(10);
	            (0, _chai.expect)(sum.at(1).get("in")).to.equal(9);
	            (0, _chai.expect)(sum.at(2).get("in")).to.equal(8);
	            (0, _chai.expect)(sum.at(3).get("in")).to.equal(7);

	            //7, 9, 11, 13
	            (0, _chai.expect)(sum.at(0).get("out")).to.equal(7);
	            (0, _chai.expect)(sum.at(1).get("out")).to.equal(9);
	            (0, _chai.expect)(sum.at(2).get("out")).to.equal(11);
	            (0, _chai.expect)(sum.at(3).get("out")).to.equal(13);

	            done();
	        });
	    });

	    describe("TimeSeries collapse", function () {

	        it("can collapse a timeseries into a new timeseries that is the sum of two columns", function (done) {
	            var ts = new _series2.default(sumPart1);
	            var sums = ts.collapse(["in", "out"], "sum", _functions.sum, false);

	            (0, _chai.expect)(sums.at(0).get("sum")).to.equal(7);
	            (0, _chai.expect)(sums.at(1).get("sum")).to.equal(9);
	            (0, _chai.expect)(sums.at(2).get("sum")).to.equal(11);
	            (0, _chai.expect)(sums.at(3).get("sum")).to.equal(13);
	            done();
	        });

	        it("can collapse a timeseries into a new timeseries that is the max of two columns", function (done) {
	            var timeseries = new _series2.default(sumPart2);
	            var c = timeseries.collapse(["in", "out"], "max_in_out", _functions.max, true);

	            (0, _chai.expect)(c.at(0).get("max_in_out")).to.equal(9);
	            (0, _chai.expect)(c.at(1).get("max_in_out")).to.equal(7);
	            (0, _chai.expect)(c.at(2).get("max_in_out")).to.equal(5);
	            (0, _chai.expect)(c.at(3).get("max_in_out")).to.equal(4);
	            done();
	        });

	        it("can collapse a timeseries into a new timeseries that is the sum of two columns, then find the max", function (done) {
	            var ts = new _series2.default(sumPart1);
	            var sums = ts.collapse(["in", "out"], "value", _functions.sum, false);

	            (0, _chai.expect)(sums.max()).to.equal(13);
	            done();
	        });
	    });

	    describe("TimeSeries column selection", function () {

	        it("can select a single column from a TimeSeries", function (done) {
	            var timeseries = new _series2.default(interfaceData);
	            (0, _chai.expect)(timeseries.columns()).to.eql(["in", "out"]);

	            var ts = timeseries.select("in");
	            (0, _chai.expect)(ts.columns()).to.eql(["in"]);
	            (0, _chai.expect)(ts.name()).to.equal("star-cr5:to_anl_ip-a_v4");

	            done();
	        });

	        it("can select multiple columns from a TimeSeries", function (done) {
	            var timeseries = new _series2.default(availabilitySeries);
	            (0, _chai.expect)(timeseries.columns()).to.eql(["uptime", "notes", "outages"]);

	            var ts = timeseries.select(["uptime", "notes"]);
	            (0, _chai.expect)(ts.columns()).to.eql(["uptime", "notes"]);
	            (0, _chai.expect)(ts.name()).to.equal("availability");

	            done();
	        });
	    });

	    describe("TimeSeries remapping", function () {

	        it("can reverse the values in this timeseries", function (done) {
	            var timeseries = new _series2.default(interfaceData);

	            (0, _chai.expect)(timeseries.columns()).to.eql(["in", "out"]);

	            var ts = timeseries.map(function (e) {
	                return e.setData({ in: e.get("out"), out: e.get("in") });
	            });

	            (0, _chai.expect)(ts.at(0).get("in")).to.equal(34);
	            (0, _chai.expect)(ts.at(0).get("out")).to.equal(52);
	            (0, _chai.expect)(ts.size()).to.equal(timeseries.size());

	            done();
	        });
	    });

	    describe("TimeSeries rollup to a fixed window", function () {
	        it("can take 1 day avgs over a timeseries", function (done) {
	            var timeseries = new _series2.default(sept2014Data);
	            var dailyAvg = timeseries.fixedWindowRollup("1d", { value: _functions.avg });

	            (0, _chai.expect)(dailyAvg.size()).to.equal(5);
	            (0, _chai.expect)(dailyAvg.at(0).value()).to.equal(46.875);
	            (0, _chai.expect)(dailyAvg.at(2).value()).to.equal(54.083333333333336);
	            (0, _chai.expect)(dailyAvg.at(4).value()).to.equal(51.85);

	            done();
	        });
	    });

	    /*
	    Since this is all in local time, testing this is kind of problematic
	    Removing for now :(
	        
	    describe("TimeSeries daily rollup", () => {
	        it("can take daily avgs over a timeseries", (done) => {
	            const timeseries = new TimeSeries(sept2014Data);
	            const dailyAvg = timeseries.dailyRollup({value: avg});
	             expect(dailyAvg.size()).to.equal(6);
	            expect(dailyAvg.at(0).indexAsString()).to.equal("2014-08-31");
	            //expect(dailyAvg.at(2).value()).to.equal(54.083333333333336);
	            //expect(dailyAvg.at(4).value()).to.equal(51.85);
	             done();
	        });
	    });
	    */

	    describe("TimeSeries collect by a fixed window", function () {
	        it("can make collections for each day in the timeseries", function (done) {
	            var timeseries = new _series2.default(sept2014Data);
	            var collections = timeseries.collectByFixedWindow("1d");

	            (0, _chai.expect)(collections["1d-16314"].size()).to.equal(24);
	            (0, _chai.expect)(collections["1d-16318"].size()).to.equal(20);

	            done();
	        });
	    });
	});

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _moment = __webpack_require__(346);

	var _moment2 = _interopRequireDefault(_moment);

	var _chai = __webpack_require__(304);

	var _collection = __webpack_require__(458);

	var _collection2 = _interopRequireDefault(_collection);

	var _event = __webpack_require__(453);

	var _event2 = _interopRequireDefault(_event);

	var _series = __webpack_require__(472);

	var _series2 = _interopRequireDefault(_series);

	var _range = __webpack_require__(450);

	var _range2 = _interopRequireDefault(_range);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//
	// Load AAPL stock data and make a timeseries out of it
	//

	/**
	 *  Copyright (c) 2015, The Regents of the University of California,
	 *  through Lawrence Berkeley National Laboratory (subject to receipt
	 *  of any required approvals from the U.S. Dept. of Energy).
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree.
	 */

	/* global it, describe */
	/* eslint no-unused-expressions: 0 */
	/* eslint-disable max-len */

	var data = __webpack_require__(481);

	var name = "AAPL";
	var rawCollection = new _collection2.default(data.map(function (item) {
	    var timestamp = new _moment2.default(new Date(item.date));
	    var open = item.open;
	    var close = item.close;
	    var low = item.low;
	    var high = item.high;
	    var volume = item.volume;

	    return new _event2.default(timestamp.toDate(), {
	        open: +open,
	        close: +close,
	        low: +low,
	        height: +high,
	        volume: +volume
	    });
	}));
	var collection = rawCollection.sortByTime();

	describe("AAPL Stock tests", function () {

	    describe("Statistics functions", function () {

	        var series = new _series2.default({ name: name, collection: collection });

	        it("can find the average", function (done) {
	            (0, _chai.expect)(series.avg("close")).be.closeTo(65.7267, 0.001);
	            done();
	        });

	        it("can find the min", function (done) {
	            (0, _chai.expect)(series.min("close")).to.equal(11.1714);
	            done();
	        });

	        it("can find the max", function (done) {
	            (0, _chai.expect)(series.max("close")).to.equal(133);
	            done();
	        });
	    });

	    // "2014/03/26","77.1114","74394902.0000","78.0743","78.4285","76.9800"

	    describe("Functions for subsets of timeseries", function () {

	        var series = new _series2.default({ name: name, collection: collection });

	        it("can find the bisect", function (done) {
	            var pos = series.bisect(new Date("2014/03/26"));
	            var event = series.at(pos);

	            (0, _chai.expect)(event.get("close")).to.equal(77.1114);
	            done();
	        });

	        it("can find the event at a time", function (done) {
	            var event = series.atTime(new Date("2014/03/26"));

	            (0, _chai.expect)(event.get("close")).to.equal(77.1114);
	            done();
	        });

	        it("can find the event at a time", function (done) {
	            var event = series.atTime(new Date("2014/03/26"));

	            (0, _chai.expect)(event.get("close")).to.equal(77.1114);
	            done();
	        });

	        it("can crop the series", function (done) {
	            var b = new Date("2014/03/26");
	            var e = new Date("2016/03/26");
	            var timerange = new _range2.default(b, e);
	            var croppedSeries = series.crop(timerange);

	            (0, _chai.expect)(croppedSeries.size()).to.equal(503);
	            (0, _chai.expect)(croppedSeries.atFirst().get("close")).to.equal(77.1114);
	            (0, _chai.expect)(croppedSeries.atLast().get("close")).to.equal(106.13);
	            done();
	        });
	    });
	});

/***/ },
/* 481 */
/***/ function(module, exports) {

	module.exports = [{"date":"2016/06/07","close":"99.0300","volume":"22378380.0000","open":"99.2500","high":"99.8700","low":"98.9600"},{"date":"2016/06/06","close":"98.6300","volume":"23265200.0000","open":"97.9900","high":"101.8900","low":"97.5500"},{"date":"2016/06/03","close":"97.9200","volume":"28487570.0000","open":"97.7900","high":"98.2700","low":"97.4500"},{"date":"2016/06/02","close":"97.7200","volume":"40170200.0000","open":"97.6000","high":"97.8400","low":"96.6300"},{"date":"2016/06/01","close":"98.4600","volume":"29139100.0000","open":"99.0200","high":"99.5400","low":"98.3300"},{"date":"2016/05/31","close":"99.8600","volume":"42268040.0000","open":"99.6000","high":"100.4000","low":"98.8200"},{"date":"2016/05/27","close":"100.3500","volume":"36299460.0000","open":"99.4400","high":"100.4700","low":"99.2450"},{"date":"2016/05/26","close":"100.4100","volume":"56293490.0000","open":"99.6800","high":"100.7300","low":"98.6400"},{"date":"2016/05/25","close":"99.6200","volume":"38258300.0000","open":"98.6700","high":"99.7400","low":"98.1100"},{"date":"2016/05/24","close":"97.9000","volume":"35074380.0000","open":"97.2200","high":"98.0900","low":"96.8400"},{"date":"2016/05/23","close":"96.4300","volume":"37977020.0000","open":"95.8700","high":"97.1900","low":"95.6700"},{"date":"2016/05/20","close":"95.2200","volume":"31834020.0000","open":"94.6400","high":"95.4300","low":"94.5200"},{"date":"2016/05/19","close":"94.2000","volume":"30417880.0000","open":"94.6400","high":"94.6400","low":"93.5700"},{"date":"2016/05/18","close":"94.5600","volume":"42009830.0000","open":"94.1600","high":"95.2100","low":"93.8900"},{"date":"2016/05/17","close":"93.4900","volume":"46858910.0000","open":"94.5500","high":"94.7000","low":"93.0100"},{"date":"2016/05/16","close":"93.8800","volume":"61192340.0000","open":"92.3900","high":"94.3900","low":"91.6500"},{"date":"2016/05/13","close":"90.5200","volume":"44223040.0000","open":"90.0000","high":"91.6700","low":"90.0000"},{"date":"2016/05/12","close":"90.3400","volume":"76183460.0000","open":"92.7200","high":"92.7800","low":"89.4700"},{"date":"2016/05/11","close":"92.5100","volume":"28641180.0000","open":"93.4800","high":"93.5700","low":"92.4600"},{"date":"2016/05/10","close":"93.4200","volume":"33653020.0000","open":"93.3300","high":"93.5700","low":"92.1100"},{"date":"2016/05/09","close":"92.7900","volume":"32895650.0000","open":"93.0000","high":"93.7700","low":"92.5900"},{"date":"2016/05/06","close":"92.7200","volume":"43665160.0000","open":"93.3700","high":"93.4500","low":"91.8500"},{"date":"2016/05/05","close":"93.2400","volume":"35850220.0000","open":"94.0000","high":"94.0700","low":"92.6800"},{"date":"2016/05/04","close":"94.1900","volume":"40984160.0000","open":"95.2000","high":"95.9000","low":"93.8200"},{"date":"2016/05/03","close":"95.1800","volume":"56770080.0000","open":"94.2000","high":"95.7400","low":"93.6800"},{"date":"2016/05/02","close":"93.6400","volume":"47844490.0000","open":"93.9650","high":"94.0800","low":"92.4000"},{"date":"2016/04/29","close":"93.7400","volume":"68388840.0000","open":"93.9900","high":"94.7200","low":"92.5100"},{"date":"2016/04/28","close":"94.8300","volume":"82107120.0000","open":"97.6100","high":"97.8800","low":"94.2500"},{"date":"2016/04/27","close":"97.8200","volume":"114436300.0000","open":"96.0000","high":"98.7100","low":"95.6800"},{"date":"2016/04/26","close":"104.3500","volume":"52979780.0000","open":"103.9100","high":"105.3000","low":"103.9100"},{"date":"2016/04/25","close":"105.0800","volume":"27997990.0000","open":"105.0000","high":"105.6500","low":"104.5100"},{"date":"2016/04/22","close":"105.6800","volume":"33655810.0000","open":"105.0100","high":"106.4800","low":"104.6200"},{"date":"2016/04/21","close":"105.9700","volume":"31416910.0000","open":"106.9300","high":"106.9300","low":"105.5200"},{"date":"2016/04/20","close":"107.1300","volume":"30576980.0000","open":"106.6400","high":"108.0900","low":"106.0600"},{"date":"2016/04/19","close":"106.9100","volume":"32340620.0000","open":"107.8800","high":"108.0000","low":"106.2300"},{"date":"2016/04/18","close":"107.4800","volume":"60784920.0000","open":"108.8900","high":"108.9500","low":"106.9400"},{"date":"2016/04/15","close":"109.8500","volume":"46873670.0000","open":"112.1100","high":"112.3000","low":"109.7300"},{"date":"2016/04/14","close":"112.1000","volume":"25364920.0000","open":"111.6200","high":"112.3900","low":"111.3300"},{"date":"2016/04/13","close":"112.0400","volume":"32771760.0000","open":"110.8000","high":"112.3400","low":"110.8000"},{"date":"2016/04/12","close":"110.4400","volume":"27150570.0000","open":"109.3400","high":"110.5000","low":"108.6600"},{"date":"2016/04/11","close":"109.0200","volume":"29357940.0000","open":"108.9700","high":"110.6100","low":"108.8300"},{"date":"2016/04/08","close":"108.6600","volume":"23553790.0000","open":"108.9100","high":"109.7700","low":"108.1700"},{"date":"2016/04/07","close":"108.5400","volume":"31735810.0000","open":"109.9500","high":"110.4200","low":"108.1210"},{"date":"2016/04/06","close":"110.9600","volume":"26178840.0000","open":"110.2300","high":"110.9800","low":"109.2000"},{"date":"2016/04/05","close":"109.8100","volume":"26560420.0000","open":"109.5100","high":"110.7300","low":"109.4200"},{"date":"2016/04/04","close":"111.1200","volume":"37322930.0000","open":"110.4200","high":"112.1900","low":"110.2700"},{"date":"2016/04/01","close":"109.9900","volume":"25820460.0000","open":"108.7800","high":"110.0000","low":"108.2000"},{"date":"2016/03/31","close":"108.9900","volume":"25763840.0000","open":"109.7200","high":"109.9000","low":"108.8800"},{"date":"2016/03/30","close":"109.5600","volume":"45547590.0000","open":"108.6500","high":"110.4200","low":"108.6000"},{"date":"2016/03/29","close":"107.6800","volume":"31154910.0000","open":"104.8900","high":"107.7900","low":"104.8800"},{"date":"2016/03/28","close":"105.1900","volume":"19354440.0000","open":"106.0000","high":"106.1900","low":"105.0600"},{"date":"2016/03/24","close":"105.6700","volume":"25568350.0000","open":"105.4700","high":"106.2500","low":"104.8900"},{"date":"2016/03/23","close":"106.1300","volume":"25686350.0000","open":"106.4800","high":"107.0700","low":"105.9000"},{"date":"2016/03/22","close":"106.7200","volume":"32345430.0000","open":"105.2500","high":"107.2900","low":"105.2100"},{"date":"2016/03/21","close":"105.9100","volume":"35454230.0000","open":"105.9300","high":"107.6500","low":"105.1401"},{"date":"2016/03/18","close":"105.9200","volume":"43607120.0000","open":"106.3400","high":"106.5000","low":"105.1900"},{"date":"2016/03/17","close":"105.8000","volume":"34394830.0000","open":"105.5200","high":"106.4700","low":"104.9600"},{"date":"2016/03/16","close":"105.9700","volume":"38236730.0000","open":"104.6100","high":"106.3100","low":"104.5900"},{"date":"2016/03/15","close":"104.5800","volume":"40026250.0000","open":"103.9600","high":"105.1800","low":"103.8500"},{"date":"2016/03/14","close":"102.5200","volume":"25058280.0000","open":"101.9100","high":"102.9100","low":"101.7800"},{"date":"2016/03/11","close":"102.2600","volume":"27368840.0000","open":"102.2400","high":"102.2800","low":"101.5000"},{"date":"2016/03/10","close":"101.1700","volume":"33490630.0000","open":"101.4100","high":"102.2400","low":"100.1500"},{"date":"2016/03/09","close":"101.1200","volume":"27148530.0000","open":"101.3100","high":"101.5800","low":"100.2700"},{"date":"2016/03/08","close":"101.0300","volume":"31538710.0000","open":"100.7800","high":"101.7600","low":"100.4000"},{"date":"2016/03/07","close":"101.8700","volume":"35890740.0000","open":"102.3900","high":"102.8300","low":"100.9600"},{"date":"2016/03/04","close":"103.0100","volume":"46026600.0000","open":"102.3700","high":"103.7500","low":"101.3700"},{"date":"2016/03/03","close":"101.5000","volume":"36884490.0000","open":"100.5800","high":"101.7099","low":"100.4500"},{"date":"2016/03/02","close":"100.7500","volume":"33136130.0000","open":"100.5100","high":"100.8900","low":"99.6400"},{"date":"2016/03/01","close":"100.5300","volume":"50303500.0000","open":"97.6500","high":"100.7700","low":"97.4200"},{"date":"2016/02/29","close":"96.6900","volume":"35131460.0000","open":"96.8600","high":"98.2300","low":"96.6500"},{"date":"2016/02/26","close":"96.9100","volume":"28949760.0000","open":"97.2000","high":"98.0237","low":"96.5800"},{"date":"2016/02/25","close":"96.7600","volume":"27526040.0000","open":"96.0500","high":"96.7600","low":"95.2500"},{"date":"2016/02/24","close":"96.1000","volume":"36192150.0000","open":"93.9800","high":"96.3800","low":"93.3200"},{"date":"2016/02/23","close":"94.6900","volume":"31851180.0000","open":"96.4000","high":"96.5000","low":"94.5500"},{"date":"2016/02/22","close":"96.8800","volume":"34240470.0000","open":"96.3100","high":"96.9000","low":"95.9200"},{"date":"2016/02/19","close":"96.0400","volume":"35290570.0000","open":"96.0000","high":"96.7599","low":"95.8000"},{"date":"2016/02/18","close":"96.2600","volume":"38866100.0000","open":"98.8400","high":"98.8900","low":"96.0910"},{"date":"2016/02/17","close":"98.1200","volume":"44811800.0000","open":"96.6700","high":"98.2100","low":"96.1500"},{"date":"2016/02/16","close":"96.6400","volume":"48032600.0000","open":"95.0200","high":"96.8500","low":"94.6100"},{"date":"2016/02/12","close":"93.9900","volume":"40323020.0000","open":"94.1900","high":"94.5000","low":"93.0100"},{"date":"2016/02/11","close":"93.7000","volume":"49979700.0000","open":"93.7900","high":"94.7200","low":"92.5900"},{"date":"2016/02/10","close":"94.2700","volume":"42288790.0000","open":"95.9200","high":"96.3500","low":"94.1000"},{"date":"2016/02/09","close":"94.9900","volume":"44282560.0000","open":"94.2900","high":"95.9400","low":"93.9300"},{"date":"2016/02/08","close":"95.0100","volume":"53920550.0000","open":"93.1300","high":"95.7000","low":"93.0400"},{"date":"2016/02/05","close":"94.0200","volume":"46315620.0000","open":"96.5200","high":"96.9200","low":"93.6900"},{"date":"2016/02/04","close":"96.6000","volume":"46418230.0000","open":"95.8600","high":"97.3300","low":"95.1900"},{"date":"2016/02/03","close":"96.3500","volume":"45870130.0000","open":"95.0000","high":"96.8400","low":"94.0800"},{"date":"2016/02/02","close":"94.4800","volume":"37190500.0000","open":"95.4200","high":"96.0400","low":"94.2800"},{"date":"2016/02/01","close":"96.4300","volume":"40814360.0000","open":"96.4700","high":"96.7100","low":"95.4000"},{"date":"2016/01/29","close":"97.3400","volume":"64332440.0000","open":"94.7900","high":"97.3400","low":"94.3500"},{"date":"2016/01/28","close":"94.0900","volume":"55622370.0000","open":"93.7900","high":"94.5200","low":"92.3900"},{"date":"2016/01/27","close":"93.4200","volume":"133059000.0000","open":"96.0400","high":"96.6289","low":"93.3400"},{"date":"2016/01/26","close":"99.9900","volume":"71937310.0000","open":"99.9300","high":"100.8800","low":"98.0700"},{"date":"2016/01/25","close":"99.4400","volume":"51529980.0000","open":"101.5200","high":"101.5300","low":"99.2100"},{"date":"2016/01/22","close":"101.4200","volume":"65648660.0000","open":"98.6300","high":"101.4600","low":"98.3700"},{"date":"2016/01/21","close":"96.3000","volume":"52099200.0000","open":"97.0600","high":"97.8800","low":"94.9400"},{"date":"2016/01/20","close":"96.7900","volume":"72274300.0000","open":"95.1000","high":"98.1897","low":"93.4200"},{"date":"2016/01/19","close":"96.6600","volume":"52960810.0000","open":"98.4100","high":"98.6500","low":"95.5000"},{"date":"2016/01/15","close":"97.1300","volume":"79356010.0000","open":"96.2000","high":"97.7100","low":"95.3600"},{"date":"2016/01/14","close":"99.5200","volume":"63000140.0000","open":"97.9600","high":"100.4800","low":"95.7400"},{"date":"2016/01/13","close":"97.3900","volume":"62285770.0000","open":"100.3200","high":"101.1900","low":"97.3000"},{"date":"2016/01/12","close":"99.9600","volume":"49046150.0000","open":"100.5500","high":"100.6900","low":"98.8399"},{"date":"2016/01/11","close":"98.5300","volume":"49687870.0000","open":"98.9700","high":"99.0600","low":"97.3400"},{"date":"2016/01/08","close":"96.9600","volume":"70722000.0000","open":"98.5500","high":"99.1100","low":"96.7600"},{"date":"2016/01/07","close":"96.4500","volume":"80742460.0000","open":"98.6800","high":"100.1300","low":"96.4300"},{"date":"2016/01/06","close":"100.7000","volume":"68384270.0000","open":"100.5600","high":"102.3700","low":"99.8700"},{"date":"2016/01/05","close":"102.7100","volume":"55583140.0000","open":"105.7500","high":"105.8500","low":"102.4100"},{"date":"2016/01/04","close":"105.3500","volume":"67569090.0000","open":"102.6100","high":"105.3680","low":"102.0000"},{"date":"2015/12/31","close":"105.2600","volume":"40885480.0000","open":"107.0100","high":"107.0300","low":"104.8200"},{"date":"2015/12/30","close":"107.3200","volume":"25184090.0000","open":"108.5800","high":"108.7000","low":"107.1800"},{"date":"2015/12/29","close":"108.7400","volume":"30912260.0000","open":"106.9600","high":"109.4300","low":"106.8600"},{"date":"2015/12/28","close":"106.8200","volume":"26639930.0000","open":"107.5900","high":"107.6900","low":"106.1807"},{"date":"2015/12/24","close":"108.0300","volume":"13596680.0000","open":"109.0000","high":"109.0000","low":"107.9500"},{"date":"2015/12/23","close":"108.6100","volume":"32618140.0000","open":"107.2700","high":"108.8500","low":"107.2000"},{"date":"2015/12/22","close":"107.2300","volume":"32728460.0000","open":"107.4000","high":"107.7200","low":"106.4510"},{"date":"2015/12/21","close":"107.3300","volume":"47507230.0000","open":"107.2800","high":"107.3700","low":"105.5700"},{"date":"2015/12/18","close":"106.0300","volume":"96197190.0000","open":"108.9100","high":"109.5200","low":"105.8100"},{"date":"2015/12/17","close":"108.9800","volume":"44654830.0000","open":"112.0200","high":"112.2500","low":"108.9800"},{"date":"2015/12/16","close":"111.3400","volume":"56157370.0000","open":"111.0700","high":"111.9900","low":"108.8000"},{"date":"2015/12/15","close":"110.4900","volume":"53168580.0000","open":"111.9400","high":"112.8000","low":"110.3500"},{"date":"2015/12/14","close":"112.4800","volume":"64678220.0000","open":"112.1800","high":"112.6800","low":"109.7900"},{"date":"2015/12/11","close":"113.1800","volume":"46810020.0000","open":"115.1900","high":"115.3900","low":"112.8510"},{"date":"2015/12/10","close":"116.1700","volume":"29158640.0000","open":"116.0400","high":"116.9400","low":"115.5100"},{"date":"2015/12/09","close":"115.6200","volume":"46301930.0000","open":"117.6400","high":"117.6900","low":"115.0800"},{"date":"2015/12/08","close":"118.2300","volume":"34275420.0000","open":"117.5200","high":"118.6000","low":"116.8600"},{"date":"2015/12/07","close":"118.2800","volume":"32063100.0000","open":"118.9800","high":"119.8600","low":"117.8100"},{"date":"2015/12/04","close":"119.0300","volume":"57717870.0000","open":"115.2900","high":"119.2500","low":"115.1100"},{"date":"2015/12/03","close":"115.2000","volume":"41511380.0000","open":"116.5500","high":"116.7900","low":"114.2200"},{"date":"2015/12/02","close":"116.2800","volume":"33316990.0000","open":"117.0500","high":"118.1100","low":"116.0800"},{"date":"2015/12/01","close":"117.3400","volume":"34806250.0000","open":"118.7500","high":"118.8100","low":"116.8600"},{"date":"2015/11/30","close":"118.3000","volume":"38063130.0000","open":"117.9900","high":"119.4100","low":"117.7500"},{"date":"2015/11/27","close":"117.8100","volume":"13046450.0000","open":"118.2900","high":"118.4100","low":"117.6000"},{"date":"2015/11/25","close":"118.0300","volume":"21341960.0000","open":"119.2100","high":"119.2300","low":"117.9200"},{"date":"2015/11/24","close":"118.8800","volume":"42747950.0000","open":"117.3300","high":"119.3500","low":"117.1200"},{"date":"2015/11/23","close":"117.7500","volume":"32445680.0000","open":"119.2700","high":"119.7300","low":"117.3400"},{"date":"2015/11/20","close":"119.3000","volume":"34135230.0000","open":"119.2000","high":"119.9200","low":"118.8500"},{"date":"2015/11/19","close":"118.7800","volume":"43233950.0000","open":"117.6400","high":"119.7500","low":"116.7600"},{"date":"2015/11/18","close":"117.2900","volume":"46559730.0000","open":"115.7600","high":"117.4900","low":"115.5000"},{"date":"2015/11/17","close":"113.6900","volume":"27584020.0000","open":"114.9200","high":"115.0500","low":"113.3200"},{"date":"2015/11/16","close":"114.1750","volume":"37979570.0000","open":"111.3800","high":"114.2400","low":"111.0000"},{"date":"2015/11/13","close":"112.3400","volume":"45555300.0000","open":"115.2000","high":"115.5700","low":"112.2700"},{"date":"2015/11/12","close":"115.7200","volume":"32461350.0000","open":"116.2600","high":"116.8200","low":"115.6500"},{"date":"2015/11/11","close":"116.1100","volume":"45179400.0000","open":"116.3700","high":"117.4200","low":"115.2100"},{"date":"2015/11/10","close":"116.7700","volume":"59029400.0000","open":"116.9000","high":"118.0700","low":"116.0610"},{"date":"2015/11/09","close":"120.5700","volume":"33829290.0000","open":"120.9600","high":"121.8100","low":"120.0500"},{"date":"2015/11/06","close":"121.0600","volume":"33009110.0000","open":"121.1100","high":"121.8100","low":"120.6200"},{"date":"2015/11/05","close":"120.9200","volume":"39483400.0000","open":"121.8500","high":"122.6900","low":"120.1800"},{"date":"2015/11/04","close":"122.0000","volume":"44829060.0000","open":"123.1300","high":"123.8200","low":"121.6200"},{"date":"2015/11/03","close":"122.5700","volume":"45479260.0000","open":"120.7900","high":"123.4900","low":"120.7000"},{"date":"2015/11/02","close":"121.1800","volume":"32152870.0000","open":"119.8700","high":"121.3600","low":"119.6100"},{"date":"2015/10/30","close":"119.5000","volume":"49305220.0000","open":"120.9900","high":"121.2200","low":"119.4500"},{"date":"2015/10/29","close":"120.5300","volume":"51106100.0000","open":"118.7000","high":"120.6900","low":"118.2700"},{"date":"2015/10/28","close":"119.2700","volume":"85436210.0000","open":"116.9300","high":"119.3000","low":"116.0600"},{"date":"2015/10/27","close":"114.5500","volume":"67673450.0000","open":"115.4000","high":"116.5400","low":"113.9900"},{"date":"2015/10/26","close":"115.2800","volume":"66139770.0000","open":"118.0800","high":"118.1300","low":"114.9200"},{"date":"2015/10/23","close":"119.0800","volume":"59251740.0000","open":"116.7000","high":"119.2280","low":"116.3300"},{"date":"2015/10/22","close":"115.5000","volume":"41430660.0000","open":"114.3300","high":"115.5000","low":"114.1000"},{"date":"2015/10/21","close":"113.7600","volume":"42276880.0000","open":"114.0000","high":"115.5800","low":"113.7000"},{"date":"2015/10/20","close":"113.7700","volume":"48929200.0000","open":"111.3400","high":"114.1700","low":"110.8200"},{"date":"2015/10/19","close":"111.7300","volume":"29723750.0000","open":"110.8000","high":"111.7500","low":"110.1100"},{"date":"2015/10/16","close":"111.0400","volume":"38794930.0000","open":"111.7800","high":"112.0000","low":"110.5300"},{"date":"2015/10/15","close":"111.8600","volume":"37622200.0000","open":"110.9300","high":"112.1000","low":"110.4900"},{"date":"2015/10/14","close":"110.2100","volume":"44434220.0000","open":"111.2900","high":"111.5200","low":"109.5600"},{"date":"2015/10/13","close":"111.7900","volume":"32970790.0000","open":"110.8200","high":"112.4500","low":"110.6800"},{"date":"2015/10/12","close":"111.6000","volume":"30386830.0000","open":"112.7300","high":"112.7500","low":"111.4400"},{"date":"2015/10/09","close":"112.1200","volume":"52720620.0000","open":"110.0000","high":"112.2800","low":"109.4900"},{"date":"2015/10/08","close":"109.5000","volume":"61747260.0000","open":"110.1900","high":"110.1900","low":"108.2100"},{"date":"2015/10/07","close":"110.7800","volume":"46717770.0000","open":"111.7400","high":"111.7700","low":"109.4100"},{"date":"2015/10/06","close":"111.3100","volume":"48702200.0000","open":"110.6300","high":"111.7400","low":"109.7650"},{"date":"2015/10/05","close":"110.7800","volume":"52033100.0000","open":"109.8800","high":"111.3698","low":"109.0700"},{"date":"2015/10/02","close":"110.3800","volume":"57774940.0000","open":"108.0100","high":"111.0136","low":"107.5500"},{"date":"2015/10/01","close":"109.5800","volume":"63849470.0000","open":"109.0700","high":"109.6200","low":"107.3100"},{"date":"2015/09/30","close":"110.3000","volume":"66300930.0000","open":"110.1700","high":"111.5400","low":"108.7300"},{"date":"2015/09/29","close":"109.0600","volume":"73230280.0000","open":"112.8300","high":"113.5100","low":"107.8600"},{"date":"2015/09/28","close":"112.4400","volume":"51861990.0000","open":"113.8500","high":"114.5700","low":"112.4400"},{"date":"2015/09/25","close":"114.7100","volume":"56005550.0000","open":"116.4400","high":"116.6900","low":"114.0200"},{"date":"2015/09/24","close":"115.0000","volume":"50061580.0000","open":"113.2500","high":"115.5000","low":"112.3700"},{"date":"2015/09/23","close":"114.3200","volume":"35678360.0000","open":"113.6300","high":"114.7200","low":"113.3000"},{"date":"2015/09/22","close":"113.4000","volume":"50278030.0000","open":"113.3800","high":"114.1800","low":"112.5201"},{"date":"2015/09/21","close":"115.2100","volume":"46594220.0000","open":"113.6700","high":"115.3700","low":"113.6600"},{"date":"2015/09/18","close":"113.4500","volume":"73991000.0000","open":"112.2100","high":"114.3000","low":"111.8700"},{"date":"2015/09/17","close":"113.9200","volume":"63712340.0000","open":"115.6600","high":"116.4900","low":"113.7150"},{"date":"2015/09/16","close":"116.4100","volume":"37080720.0000","open":"116.2500","high":"116.5400","low":"115.4400"},{"date":"2015/09/15","close":"116.2800","volume":"43218350.0000","open":"115.9300","high":"116.5300","low":"114.4200"},{"date":"2015/09/14","close":"115.3100","volume":"58279570.0000","open":"116.5800","high":"116.8900","low":"114.8600"},{"date":"2015/09/11","close":"114.2100","volume":"49793750.0000","open":"111.7900","high":"114.2100","low":"111.7600"},{"date":"2015/09/10","close":"112.5700","volume":"62800770.0000","open":"110.2700","high":"113.2825","low":"109.9000"},{"date":"2015/09/09","close":"110.1500","volume":"84757780.0000","open":"113.7600","high":"114.0200","low":"109.7700"},{"date":"2015/09/08","close":"112.3100","volume":"54507300.0000","open":"111.6500","high":"112.5600","low":"110.3200"},{"date":"2015/09/04","close":"109.2700","volume":"49904460.0000","open":"108.9700","high":"110.4500","low":"108.5100"},{"date":"2015/09/03","close":"110.3700","volume":"53142590.0000","open":"112.4900","high":"112.7800","low":"110.0400"},{"date":"2015/09/02","close":"112.3400","volume":"61681250.0000","open":"110.2300","high":"112.3400","low":"109.1310"},{"date":"2015/09/01","close":"107.7200","volume":"76562170.0000","open":"110.1500","high":"111.8800","low":"107.3600"},{"date":"2015/08/31","close":"112.7600","volume":"56111590.0000","open":"112.0300","high":"114.5300","low":"112.0000"},{"date":"2015/08/28","close":"113.2900","volume":"53075960.0000","open":"112.1700","high":"113.3100","low":"111.5400"},{"date":"2015/08/27","close":"112.9200","volume":"83825220.0000","open":"112.2300","high":"113.2400","low":"110.0200"},{"date":"2015/08/26","close":"109.6900","volume":"96531890.0000","open":"107.0850","high":"109.8900","low":"105.0500"},{"date":"2015/08/25","close":"103.7400","volume":"102731700.0000","open":"111.1100","high":"111.1100","low":"103.5000"},{"date":"2015/08/24","close":"103.1200","volume":"161882500.0000","open":"94.8700","high":"108.8000","low":"92.0000"},{"date":"2015/08/21","close":"105.7600","volume":"127246600.0000","open":"110.4300","high":"111.9000","low":"105.6450"},{"date":"2015/08/20","close":"112.6500","volume":"68176940.0000","open":"114.0800","high":"114.3500","low":"111.6300"},{"date":"2015/08/19","close":"115.0100","volume":"48079330.0000","open":"116.1000","high":"116.5200","low":"114.6800"},{"date":"2015/08/18","close":"116.5000","volume":"34525630.0000","open":"116.4300","high":"117.4400","low":"116.0100"},{"date":"2015/08/17","close":"117.1600","volume":"40827260.0000","open":"116.0400","high":"117.6500","low":"115.5000"},{"date":"2015/08/14","close":"115.9600","volume":"42876370.0000","open":"114.3200","high":"116.3100","low":"114.0100"},{"date":"2015/08/13","close":"115.1500","volume":"48407640.0000","open":"116.0400","high":"116.4000","low":"114.5400"},{"date":"2015/08/12","close":"115.2400","volume":"101593400.0000","open":"112.5300","high":"115.4200","low":"109.6300"},{"date":"2015/08/11","close":"113.4900","volume":"96820670.0000","open":"117.8100","high":"118.1800","low":"113.3300"},{"date":"2015/08/10","close":"119.7200","volume":"54851010.0000","open":"116.5300","high":"119.9900","low":"116.5300"},{"date":"2015/08/07","close":"115.5200","volume":"38610120.0000","open":"114.5800","high":"116.2500","low":"114.5000"},{"date":"2015/08/06","close":"115.1300","volume":"52828890.0000","open":"115.9700","high":"116.5000","low":"114.1150"},{"date":"2015/08/05","close":"115.4000","volume":"99202400.0000","open":"112.9500","high":"117.4400","low":"112.1000"},{"date":"2015/08/04","close":"114.6400","volume":"123601900.0000","open":"117.4200","high":"117.7000","low":"113.2500"},{"date":"2015/08/03","close":"118.4400","volume":"69639900.0000","open":"121.5000","high":"122.5700","low":"117.5200"},{"date":"2015/07/31","close":"121.3000","volume":"42832890.0000","open":"122.6000","high":"122.6425","low":"120.9100"},{"date":"2015/07/30","close":"122.3700","volume":"33400950.0000","open":"122.3200","high":"122.5699","low":"121.7100"},{"date":"2015/07/29","close":"122.9900","volume":"36912040.0000","open":"123.1500","high":"123.5000","low":"122.2700"},{"date":"2015/07/28","close":"123.3800","volume":"33570380.0000","open":"123.3800","high":"123.9100","low":"122.5500"},{"date":"2015/07/27","close":"122.7700","volume":"44371580.0000","open":"123.0900","high":"123.6100","low":"122.1200"},{"date":"2015/07/24","close":"124.5000","volume":"42090320.0000","open":"125.3200","high":"125.7400","low":"123.9000"},{"date":"2015/07/23","close":"125.1600","volume":"50832950.0000","open":"126.2000","high":"127.0900","low":"125.0600"},{"date":"2015/07/22","close":"125.2200","volume":"115288400.0000","open":"121.9900","high":"125.5000","low":"121.9900"},{"date":"2015/07/21","close":"130.7500","volume":"73006780.0000","open":"132.8500","high":"132.9200","low":"130.3200"},{"date":"2015/07/20","close":"132.0700","volume":"55204920.0000","open":"130.9700","high":"132.9700","low":"130.7000"},{"date":"2015/07/17","close":"129.6200","volume":"45970470.0000","open":"129.0800","high":"129.6200","low":"128.3100"},{"date":"2015/07/16","close":"128.5100","volume":"35987630.0000","open":"127.7400","high":"128.5700","low":"127.3500"},{"date":"2015/07/15","close":"126.8200","volume":"33559770.0000","open":"125.7200","high":"127.1500","low":"125.5800"},{"date":"2015/07/14","close":"125.6100","volume":"31695870.0000","open":"126.0400","high":"126.3700","low":"125.0400"},{"date":"2015/07/13","close":"125.6600","volume":"41365600.0000","open":"125.0300","high":"125.7550","low":"124.3200"},{"date":"2015/07/10","close":"123.2800","volume":"61292800.0000","open":"121.9400","high":"123.8500","low":"121.2100"},{"date":"2015/07/09","close":"120.0700","volume":"78291510.0000","open":"123.8500","high":"124.0600","low":"119.2200"},{"date":"2015/07/08","close":"122.5700","volume":"60609830.0000","open":"124.4800","high":"124.6400","low":"122.5400"},{"date":"2015/07/07","close":"125.6900","volume":"46737090.0000","open":"125.8900","high":"126.1500","low":"123.7700"},{"date":"2015/07/06","close":"126.0000","volume":"27972950.0000","open":"124.9400","high":"126.2300","low":"124.8500"},{"date":"2015/07/02","close":"126.4400","volume":"27171180.0000","open":"126.4300","high":"126.6900","low":"125.7700"},{"date":"2015/07/01","close":"126.6000","volume":"30206890.0000","open":"126.9000","high":"126.9400","low":"125.9900"},{"date":"2015/06/30","close":"125.4250","volume":"44326050.0000","open":"125.5700","high":"126.1200","low":"124.8600"},{"date":"2015/06/29","close":"124.5300","volume":"49043410.0000","open":"125.4600","high":"126.4700","low":"124.4800"},{"date":"2015/06/26","close":"126.7500","volume":"43986290.0000","open":"127.6700","high":"127.9900","low":"126.5100"},{"date":"2015/06/25","close":"127.5000","volume":"31872390.0000","open":"128.8600","high":"129.2000","low":"127.5000"},{"date":"2015/06/24","close":"128.1100","volume":"55077520.0000","open":"127.2100","high":"129.8000","low":"127.1200"},{"date":"2015/06/23","close":"127.0300","volume":"30192140.0000","open":"127.4800","high":"127.6100","low":"126.8792"},{"date":"2015/06/22","close":"127.6100","volume":"33976180.0000","open":"127.4900","high":"128.0600","low":"127.0800"},{"date":"2015/06/19","close":"126.6000","volume":"54361530.0000","open":"127.7100","high":"127.8200","low":"126.4000"},{"date":"2015/06/18","close":"127.8800","volume":"35363990.0000","open":"127.2300","high":"128.3100","low":"127.2200"},{"date":"2015/06/17","close":"127.3000","volume":"32858900.0000","open":"127.7200","high":"127.8800","low":"126.7400"},{"date":"2015/06/16","close":"127.6000","volume":"31443650.0000","open":"127.0300","high":"127.8500","low":"126.3700"},{"date":"2015/06/15","close":"126.9200","volume":"43896960.0000","open":"126.1000","high":"127.2400","low":"125.7100"},{"date":"2015/06/12","close":"127.1700","volume":"36826260.0000","open":"128.1850","high":"128.3300","low":"127.1100"},{"date":"2015/06/11","close":"128.5900","volume":"35344520.0000","open":"129.1800","high":"130.1800","low":"128.4750"},{"date":"2015/06/10","close":"128.8800","volume":"39029190.0000","open":"127.9200","high":"129.3400","low":"127.8500"},{"date":"2015/06/09","close":"127.4200","volume":"56002840.0000","open":"126.7000","high":"128.0800","low":"125.6200"},{"date":"2015/06/08","close":"127.8000","volume":"52609900.0000","open":"128.9000","high":"129.2100","low":"126.8300"},{"date":"2015/06/05","close":"128.6500","volume":"35577760.0000","open":"129.5000","high":"129.6900","low":"128.3600"},{"date":"2015/06/04","close":"129.3600","volume":"38335980.0000","open":"129.5800","high":"130.5800","low":"128.9100"},{"date":"2015/06/03","close":"130.1200","volume":"30939810.0000","open":"130.6600","high":"130.9400","low":"129.9000"},{"date":"2015/06/02","close":"129.9600","volume":"33595980.0000","open":"129.8600","high":"130.6550","low":"129.3200"},{"date":"2015/06/01","close":"130.5350","volume":"32016020.0000","open":"131.2000","high":"131.3900","low":"130.0500"},{"date":"2015/05/29","close":"130.2800","volume":"50474170.0000","open":"131.2300","high":"131.4500","low":"129.9000"},{"date":"2015/05/28","close":"131.7800","volume":"30678840.0000","open":"131.8600","high":"131.9500","low":"131.1000"},{"date":"2015/05/27","close":"132.0450","volume":"45771120.0000","open":"130.3400","high":"132.2600","low":"130.0500"},{"date":"2015/05/26","close":"129.6200","volume":"70544670.0000","open":"132.6000","high":"132.9100","low":"129.1200"},{"date":"2015/05/22","close":"132.5400","volume":"45469340.0000","open":"131.6000","high":"132.9700","low":"131.4000"},{"date":"2015/05/21","close":"131.3900","volume":"39589780.0000","open":"130.0700","high":"131.6300","low":"129.8300"},{"date":"2015/05/20","close":"130.0600","volume":"36261170.0000","open":"130.0000","high":"130.9800","low":"129.3400"},{"date":"2015/05/19","close":"130.0700","volume":"44395440.0000","open":"130.6900","high":"130.8800","low":"129.6400"},{"date":"2015/05/18","close":"130.1900","volume":"50723240.0000","open":"128.3800","high":"130.7200","low":"128.3600"},{"date":"2015/05/15","close":"128.7700","volume":"38128470.0000","open":"129.0700","high":"129.4900","low":"128.2100"},{"date":"2015/05/14","close":"128.9500","volume":"45123920.0000","open":"127.4100","high":"128.9500","low":"127.1600"},{"date":"2015/05/13","close":"126.0100","volume":"34611600.0000","open":"126.1500","high":"127.1900","low":"125.8700"},{"date":"2015/05/12","close":"125.8650","volume":"48073450.0000","open":"125.6000","high":"126.8800","low":"124.8200"},{"date":"2015/05/11","close":"126.3200","volume":"41920740.0000","open":"127.3900","high":"127.5600","low":"125.6250"},{"date":"2015/05/08","close":"127.6200","volume":"55473820.0000","open":"126.6800","high":"127.6200","low":"126.1100"},{"date":"2015/05/07","close":"125.2600","volume":"42653920.0000","open":"124.7700","high":"126.0800","low":"124.0200"},{"date":"2015/05/06","close":"125.0100","volume":"72037370.0000","open":"126.5600","high":"126.7500","low":"123.3600"},{"date":"2015/05/05","close":"125.8000","volume":"49127770.0000","open":"128.1500","high":"128.4498","low":"125.7800"},{"date":"2015/05/04","close":"128.7000","volume":"50905020.0000","open":"129.5000","high":"130.5700","low":"128.2600"},{"date":"2015/05/01","close":"128.9500","volume":"57349000.0000","open":"126.1000","high":"130.1300","low":"125.3000"},{"date":"2015/04/30","close":"125.1500","volume":"82924980.0000","open":"127.5000","high":"127.8800","low":"124.5800"},{"date":"2015/04/29","close":"128.6400","volume":"63063240.0000","open":"130.1600","high":"131.5900","low":"128.3000"},{"date":"2015/04/28","close":"130.5600","volume":"118693700.0000","open":"134.4550","high":"134.5400","low":"129.5700"},{"date":"2015/04/27","close":"132.6500","volume":"95084260.0000","open":"132.3100","high":"133.1300","low":"131.1500"},{"date":"2015/04/24","close":"130.2800","volume":"44209710.0000","open":"130.4900","high":"130.6300","low":"129.2300"},{"date":"2015/04/23","close":"129.6700","volume":"45596690.0000","open":"128.3000","high":"130.4200","low":"128.1400"},{"date":"2015/04/22","close":"128.6200","volume":"37575420.0000","open":"126.9900","high":"128.8700","low":"126.3200"},{"date":"2015/04/21","close":"126.9100","volume":"32341380.0000","open":"128.1000","high":"128.2000","low":"126.6700"},{"date":"2015/04/20","close":"127.6000","volume":"46975110.0000","open":"125.5700","high":"128.1200","low":"125.1700"},{"date":"2015/04/17","close":"124.7500","volume":"51481310.0000","open":"125.5500","high":"126.1400","low":"124.4600"},{"date":"2015/04/16","close":"126.1700","volume":"28020240.0000","open":"126.2800","high":"127.1000","low":"126.1100"},{"date":"2015/04/15","close":"126.7800","volume":"28922420.0000","open":"126.4100","high":"127.1300","low":"126.0100"},{"date":"2015/04/14","close":"126.3000","volume":"25418280.0000","open":"127.0000","high":"127.2900","low":"125.9100"},{"date":"2015/04/13","close":"126.8500","volume":"36248620.0000","open":"128.3700","high":"128.5700","low":"126.6100"},{"date":"2015/04/10","close":"127.1000","volume":"40125760.0000","open":"125.9500","high":"127.2100","low":"125.2600"},{"date":"2015/04/09","close":"126.5600","volume":"32244360.0000","open":"125.8500","high":"126.5800","low":"124.6600"},{"date":"2015/04/08","close":"125.6000","volume":"37272090.0000","open":"125.8500","high":"126.4000","low":"124.9700"},{"date":"2015/04/07","close":"126.0100","volume":"34894810.0000","open":"127.6400","high":"128.1218","low":"125.9800"},{"date":"2015/04/06","close":"127.3500","volume":"36917490.0000","open":"124.4700","high":"127.5100","low":"124.3300"},{"date":"2015/04/02","close":"125.3200","volume":"32171410.0000","open":"125.0300","high":"125.5600","low":"124.1900"},{"date":"2015/04/01","close":"124.2500","volume":"40463140.0000","open":"124.8200","high":"125.1200","low":"123.1000"},{"date":"2015/03/31","close":"124.4300","volume":"42019420.0000","open":"126.0900","high":"126.4900","low":"124.3550"},{"date":"2015/03/30","close":"126.3700","volume":"46974980.0000","open":"124.0500","high":"126.4000","low":"124.0000"},{"date":"2015/03/27","close":"123.2500","volume":"39471720.0000","open":"124.5700","high":"124.7000","low":"122.9100"},{"date":"2015/03/26","close":"124.2400","volume":"47409610.0000","open":"122.7600","high":"124.8800","low":"122.6000"},{"date":"2015/03/25","close":"123.3800","volume":"51505600.0000","open":"126.5400","high":"126.8200","low":"123.3800"},{"date":"2015/03/24","close":"126.6900","volume":"32747200.0000","open":"127.2300","high":"128.0400","low":"126.5600"},{"date":"2015/03/23","close":"127.2100","volume":"37597600.0000","open":"127.1200","high":"127.8500","low":"126.5200"},{"date":"2015/03/20","close":"125.9000","volume":"68516180.0000","open":"128.2500","high":"128.4000","low":"125.1600"},{"date":"2015/03/19","close":"127.4950","volume":"45674520.0000","open":"128.7500","high":"129.2451","low":"127.4000"},{"date":"2015/03/18","close":"128.4700","volume":"65118170.0000","open":"127.0000","high":"129.1600","low":"126.3700"},{"date":"2015/03/17","close":"127.0400","volume":"50891230.0000","open":"125.9000","high":"127.3200","low":"125.6500"},{"date":"2015/03/16","close":"124.9500","volume":"35816300.0000","open":"123.8800","high":"124.9500","low":"122.8700"},{"date":"2015/03/13","close":"123.5900","volume":"51744670.0000","open":"124.4000","high":"125.3951","low":"122.5800"},{"date":"2015/03/12","close":"124.4500","volume":"48233270.0000","open":"122.3100","high":"124.9000","low":"121.6300"},{"date":"2015/03/11","close":"122.2400","volume":"68812690.0000","open":"124.7500","high":"124.7700","low":"122.1100"},{"date":"2015/03/10","close":"124.5100","volume":"68720360.0000","open":"126.4100","high":"127.2200","low":"123.8000"},{"date":"2015/03/09","close":"127.1400","volume":"88410240.0000","open":"127.9600","high":"129.5700","low":"125.0600"},{"date":"2015/03/06","close":"126.6000","volume":"72699680.0000","open":"128.4000","high":"129.3700","low":"126.2600"},{"date":"2015/03/05","close":"126.4100","volume":"56391280.0000","open":"128.5800","high":"128.7500","low":"125.7600"},{"date":"2015/03/04","close":"128.5400","volume":"31588480.0000","open":"129.1000","high":"129.5600","low":"128.3200"},{"date":"2015/03/03","close":"129.3600","volume":"37749900.0000","open":"128.9600","high":"129.5200","low":"128.0900"},{"date":"2015/03/02","close":"129.0900","volume":"48042680.0000","open":"129.2500","high":"130.2800","low":"128.3000"},{"date":"2015/02/27","close":"128.4600","volume":"61931350.0000","open":"130.0000","high":"130.5700","low":"128.2400"},{"date":"2015/02/26","close":"130.4150","volume":"91171830.0000","open":"128.7850","high":"130.8700","low":"126.6100"},{"date":"2015/02/25","close":"128.7900","volume":"74555120.0000","open":"131.5600","high":"131.6000","low":"128.1500"},{"date":"2015/02/24","close":"132.1700","volume":"69109410.0000","open":"132.9400","high":"133.6000","low":"131.1700"},{"date":"2015/02/23","close":"133.0000","volume":"73089250.0000","open":"130.0200","high":"133.0000","low":"129.6600"},{"date":"2015/02/20","close":"129.4950","volume":"48878410.0000","open":"128.6200","high":"129.5000","low":"128.0500"},{"date":"2015/02/19","close":"128.4500","volume":"37295460.0000","open":"128.4800","high":"129.0300","low":"128.3300"},{"date":"2015/02/18","close":"128.7150","volume":"44695980.0000","open":"127.6250","high":"128.7800","low":"127.4500"},{"date":"2015/02/17","close":"127.8300","volume":"63014110.0000","open":"127.4900","high":"128.8800","low":"126.9200"},{"date":"2015/02/13","close":"127.0800","volume":"53955650.0000","open":"127.2800","high":"127.2800","low":"125.6500"},{"date":"2015/02/12","close":"126.4600","volume":"74374630.0000","open":"126.0600","high":"127.4800","low":"125.5700"},{"date":"2015/02/11","close":"124.8800","volume":"73278020.0000","open":"122.7700","high":"124.9200","low":"122.5000"},{"date":"2015/02/10","close":"122.0200","volume":"61845390.0000","open":"120.1700","high":"122.1500","low":"120.1600"},{"date":"2015/02/09","close":"119.7200","volume":"37900780.0000","open":"118.5500","high":"119.8400","low":"118.4300"},{"date":"2015/02/06","close":"118.9300","volume":"43633660.0000","open":"120.0200","high":"120.2500","low":"118.4500"},{"date":"2015/02/05","close":"119.9400","volume":"42197110.0000","open":"120.0200","high":"120.2300","low":"119.2500"},{"date":"2015/02/04","close":"119.5600","volume":"69975180.0000","open":"118.5000","high":"120.5100","low":"118.3090"},{"date":"2015/02/03","close":"118.6500","volume":"51842080.0000","open":"118.5000","high":"119.0900","low":"117.6100"},{"date":"2015/02/02","close":"118.6300","volume":"62542440.0000","open":"118.0500","high":"119.1700","low":"116.0800"},{"date":"2015/01/30","close":"117.1600","volume":"83646800.0000","open":"118.4000","high":"120.0000","low":"116.8500"},{"date":"2015/01/29","close":"118.9000","volume":"84132130.0000","open":"116.3200","high":"119.1900","low":"115.5600"},{"date":"2015/01/28","close":"115.3100","volume":"146184300.0000","open":"117.6250","high":"118.1200","low":"115.3100"},{"date":"2015/01/27","close":"109.1400","volume":"92326640.0000","open":"112.4200","high":"112.4800","low":"109.0300"},{"date":"2015/01/26","close":"113.1000","volume":"55457420.0000","open":"113.7400","high":"114.3626","low":"112.8000"},{"date":"2015/01/23","close":"112.9800","volume":"46420020.0000","open":"112.3000","high":"113.7500","low":"111.5300"},{"date":"2015/01/22","close":"112.4000","volume":"53717440.0000","open":"110.2600","high":"112.4700","low":"109.7200"},{"date":"2015/01/21","close":"109.5500","volume":"48482860.0000","open":"108.9500","high":"111.0600","low":"108.2700"},{"date":"2015/01/20","close":"108.7200","volume":"49742320.0000","open":"107.8400","high":"108.9667","low":"106.5000"},{"date":"2015/01/16","close":"105.9900","volume":"78453330.0000","open":"107.0300","high":"107.5800","low":"105.2000"},{"date":"2015/01/15","close":"106.8200","volume":"59808470.0000","open":"110.0000","high":"110.0600","low":"106.6600"},{"date":"2015/01/14","close":"109.8000","volume":"48728190.0000","open":"109.0400","high":"110.4900","low":"108.5000"},{"date":"2015/01/13","close":"110.2200","volume":"66969980.0000","open":"111.4300","high":"112.8000","low":"108.9100"},{"date":"2015/01/12","close":"109.2500","volume":"49571170.0000","open":"112.6000","high":"112.6300","low":"108.8000"},{"date":"2015/01/09","close":"112.0100","volume":"53645730.0000","open":"112.6700","high":"113.2500","low":"110.2100"},{"date":"2015/01/08","close":"111.8900","volume":"59168760.0000","open":"109.2300","high":"112.1500","low":"108.7000"},{"date":"2015/01/07","close":"107.7500","volume":"39983350.0000","open":"107.2000","high":"108.2000","low":"106.6950"},{"date":"2015/01/06","close":"106.2600","volume":"65682250.0000","open":"106.5400","high":"107.4300","low":"104.6300"},{"date":"2015/01/05","close":"106.2500","volume":"64210880.0000","open":"108.2900","high":"108.6500","low":"105.4100"},{"date":"2015/01/02","close":"109.3300","volume":"53143770.0000","open":"111.3900","high":"111.4400","low":"107.3500"},{"date":"2014/12/31","close":"110.3800","volume":"41304780.0000","open":"112.8200","high":"113.1300","low":"110.2100"},{"date":"2014/12/30","close":"112.5200","volume":"29798660.0000","open":"113.6400","high":"113.9200","low":"112.1100"},{"date":"2014/12/29","close":"113.9100","volume":"27533430.0000","open":"113.7900","high":"114.7700","low":"113.7000"},{"date":"2014/12/26","close":"113.9900","volume":"33681200.0000","open":"112.1000","high":"114.5200","low":"112.0100"},{"date":"2014/12/24","close":"112.0100","volume":"14479610.0000","open":"112.5800","high":"112.7100","low":"112.0100"},{"date":"2014/12/23","close":"112.5400","volume":"25991030.0000","open":"113.2300","high":"113.3300","low":"112.4600"},{"date":"2014/12/22","close":"112.9400","volume":"45097060.0000","open":"112.1600","high":"113.4900","low":"111.9700"},{"date":"2014/12/19","close":"111.7800","volume":"86595830.0000","open":"112.2600","high":"113.2400","low":"111.6600"},{"date":"2014/12/18","close":"112.6500","volume":"58785590.0000","open":"111.8700","high":"112.6500","low":"110.6600"},{"date":"2014/12/17","close":"109.4100","volume":"53265930.0000","open":"107.1200","high":"109.8400","low":"106.8200"},{"date":"2014/12/16","close":"106.7450","volume":"60651790.0000","open":"106.3700","high":"110.1600","low":"106.2600"},{"date":"2014/12/15","close":"108.2250","volume":"67083260.0000","open":"110.7000","high":"111.6000","low":"106.3500"},{"date":"2014/12/12","close":"109.7300","volume":"55873820.0000","open":"110.4600","high":"111.8700","low":"109.5800"},{"date":"2014/12/11","close":"111.6200","volume":"41404690.0000","open":"112.2600","high":"113.8000","low":"111.3400"},{"date":"2014/12/10","close":"111.9500","volume":"44475360.0000","open":"114.4100","high":"114.8500","low":"111.5400"},{"date":"2014/12/09","close":"114.1200","volume":"60112240.0000","open":"110.1900","high":"114.3000","low":"109.3500"},{"date":"2014/12/08","close":"112.4000","volume":"57445030.0000","open":"114.1000","high":"114.6480","low":"111.6200"},{"date":"2014/12/05","close":"115.0000","volume":"38230970.0000","open":"115.9900","high":"116.0800","low":"114.6400"},{"date":"2014/12/04","close":"115.4900","volume":"42068020.0000","open":"115.7700","high":"117.2000","low":"115.2900"},{"date":"2014/12/03","close":"115.9300","volume":"42956200.0000","open":"115.7500","high":"116.3500","low":"115.1100"},{"date":"2014/12/02","close":"114.6300","volume":"59205320.0000","open":"113.5000","high":"115.7500","low":"112.7500"},{"date":"2014/12/01","close":"115.0700","volume":"83657780.0000","open":"118.8100","high":"119.2500","low":"111.2700"},{"date":"2014/11/28","close":"118.9300","volume":"24814400.0000","open":"119.2700","high":"119.4000","low":"118.0500"},{"date":"2014/11/26","close":"119.0000","volume":"40756950.0000","open":"117.9400","high":"119.1000","low":"117.8300"},{"date":"2014/11/25","close":"117.6000","volume":"68719930.0000","open":"119.0700","high":"119.7500","low":"117.4500"},{"date":"2014/11/24","close":"118.6250","volume":"46867340.0000","open":"116.8500","high":"118.7700","low":"116.6200"},{"date":"2014/11/21","close":"116.4700","volume":"56759320.0000","open":"117.5100","high":"117.5700","low":"116.0300"},{"date":"2014/11/20","close":"116.3100","volume":"43148650.0000","open":"114.9100","high":"116.8600","low":"114.8500"},{"date":"2014/11/19","close":"114.6700","volume":"41815550.0000","open":"115.4400","high":"115.7400","low":"113.8000"},{"date":"2014/11/18","close":"115.4700","volume":"44163250.0000","open":"113.9400","high":"115.6900","low":"113.8900"},{"date":"2014/11/17","close":"113.9900","volume":"46687710.0000","open":"114.2700","high":"117.2800","low":"113.3000"},{"date":"2014/11/14","close":"114.1800","volume":"43789060.0000","open":"113.1500","high":"114.1900","low":"113.0500"},{"date":"2014/11/13","close":"112.8200","volume":"59418180.0000","open":"111.8000","high":"113.4500","low":"111.6000"},{"date":"2014/11/12","close":"111.2500","volume":"46372630.0000","open":"109.3800","high":"111.4300","low":"109.3700"},{"date":"2014/11/11","close":"109.7000","volume":"27330410.0000","open":"108.7000","high":"109.7500","low":"108.4000"},{"date":"2014/11/10","close":"108.8300","volume":"27066060.0000","open":"109.0200","high":"109.3300","low":"108.6700"},{"date":"2014/11/07","close":"109.0100","volume":"33655280.0000","open":"108.7500","high":"109.3200","low":"108.5500"},{"date":"2014/11/06","close":"108.7000","volume":"34733740.0000","open":"108.6000","high":"108.7900","low":"107.8000"},{"date":"2014/11/05","close":"108.8600","volume":"37365530.0000","open":"109.1000","high":"109.3000","low":"108.1250"},{"date":"2014/11/04","close":"108.6000","volume":"41423660.0000","open":"109.3600","high":"109.4900","low":"107.7200"},{"date":"2014/11/03","close":"109.4000","volume":"52154490.0000","open":"108.2200","high":"110.3000","low":"108.0100"},{"date":"2014/10/31","close":"108.0000","volume":"44550790.0000","open":"108.0100","high":"108.0400","low":"107.2100"},{"date":"2014/10/30","close":"106.9800","volume":"40572000.0000","open":"106.9590","high":"107.3500","low":"105.9000"},{"date":"2014/10/29","close":"107.3400","volume":"52545580.0000","open":"106.6500","high":"107.3700","low":"106.3600"},{"date":"2014/10/28","close":"106.7400","volume":"47689070.0000","open":"105.4000","high":"106.7400","low":"105.3500"},{"date":"2014/10/27","close":"105.1100","volume":"34086120.0000","open":"104.8500","high":"105.4800","low":"104.7000"},{"date":"2014/10/24","close":"105.2200","volume":"46937880.0000","open":"105.1800","high":"105.4900","low":"104.5300"},{"date":"2014/10/23","close":"104.8300","volume":"70760150.0000","open":"104.0800","high":"105.0510","low":"103.6300"},{"date":"2014/10/22","close":"102.9900","volume":"68140010.0000","open":"102.8400","high":"104.1100","low":"102.6000"},{"date":"2014/10/21","close":"102.4700","volume":"93786680.0000","open":"103.0200","high":"103.0200","low":"101.2700"},{"date":"2014/10/20","close":"99.7600","volume":"75705040.0000","open":"98.3150","high":"99.9600","low":"98.2200"},{"date":"2014/10/17","close":"97.6700","volume":"67723910.0000","open":"97.5000","high":"99.0000","low":"96.8100"},{"date":"2014/10/16","close":"96.2600","volume":"72017830.0000","open":"95.5500","high":"97.7200","low":"95.4100"},{"date":"2014/10/15","close":"97.5400","volume":"99942790.0000","open":"97.9700","high":"99.1500","low":"95.1800"},{"date":"2014/10/14","close":"98.7500","volume":"63287170.0000","open":"100.3900","high":"100.5200","low":"98.5700"},{"date":"2014/10/13","close":"99.8100","volume":"53437060.0000","open":"101.3300","high":"101.7800","low":"99.8100"},{"date":"2014/10/10","close":"100.7300","volume":"66249770.0000","open":"100.6900","high":"102.0300","low":"100.3000"},{"date":"2014/10/09","close":"101.0200","volume":"77283330.0000","open":"101.5400","high":"102.3800","low":"100.6100"},{"date":"2014/10/08","close":"100.8000","volume":"57329820.0000","open":"98.7600","high":"101.1100","low":"98.3100"},{"date":"2014/10/07","close":"98.7500","volume":"42003200.0000","open":"99.4300","high":"100.1200","low":"98.7300"},{"date":"2014/10/06","close":"99.6200","volume":"36780620.0000","open":"99.9500","high":"100.6500","low":"99.4200"},{"date":"2014/10/03","close":"99.6200","volume":"43419580.0000","open":"99.4400","high":"100.2100","low":"99.0400"},{"date":"2014/10/02","close":"99.9000","volume":"47697150.0000","open":"99.2700","high":"100.2200","low":"98.0400"},{"date":"2014/10/01","close":"99.1800","volume":"51400260.0000","open":"100.5900","high":"100.6900","low":"98.7000"},{"date":"2014/09/30","close":"100.7500","volume":"55119980.0000","open":"100.8100","high":"101.5400","low":"100.5300"},{"date":"2014/09/29","close":"100.1100","volume":"49263260.0000","open":"98.6500","high":"100.4350","low":"98.6300"},{"date":"2014/09/26","close":"100.7500","volume":"62276770.0000","open":"98.5300","high":"100.7500","low":"98.4000"},{"date":"2014/09/25","close":"97.8700","volume":"99689300.0000","open":"100.5100","high":"100.7100","low":"97.7200"},{"date":"2014/09/24","close":"101.7500","volume":"59974260.0000","open":"102.1600","high":"102.8500","low":"101.2000"},{"date":"2014/09/23","close":"102.6400","volume":"63255860.0000","open":"100.6000","high":"102.9400","low":"100.5400"},{"date":"2014/09/22","close":"101.0600","volume":"52421660.0000","open":"101.8000","high":"102.1400","low":"100.5800"},{"date":"2014/09/19","close":"100.9600","volume":"70747430.0000","open":"102.2900","high":"102.3500","low":"100.8800"},{"date":"2014/09/18","close":"101.7900","volume":"36971170.0000","open":"101.9300","high":"102.3500","low":"101.5600"},{"date":"2014/09/17","close":"101.5800","volume":"60783090.0000","open":"101.2700","high":"101.8000","low":"100.5922"},{"date":"2014/09/16","close":"100.8600","volume":"66754370.0000","open":"99.8000","high":"101.2600","low":"98.8900"},{"date":"2014/09/15","close":"101.6300","volume":"61169670.0000","open":"102.8100","high":"103.0500","low":"101.4400"},{"date":"2014/09/12","close":"101.6600","volume":"62826040.0000","open":"101.2100","high":"102.1900","low":"101.0800"},{"date":"2014/09/11","close":"101.4300","volume":"62077230.0000","open":"100.4100","high":"101.4400","low":"99.6200"},{"date":"2014/09/10","close":"101.0000","volume":"100352500.0000","open":"98.0100","high":"101.1100","low":"97.7600"},{"date":"2014/09/09","close":"97.9900","volume":"189419500.0000","open":"99.0800","high":"103.0800","low":"96.1400"},{"date":"2014/09/08","close":"98.3600","volume":"46176570.0000","open":"99.3000","high":"99.3100","low":"98.0500"},{"date":"2014/09/05","close":"98.9700","volume":"58280030.0000","open":"98.8000","high":"99.3900","low":"98.3100"},{"date":"2014/09/04","close":"98.1200","volume":"85537710.0000","open":"98.8500","high":"100.0900","low":"97.7900"},{"date":"2014/09/03","close":"98.9400","volume":"125000400.0000","open":"103.1000","high":"103.2000","low":"98.5800"},{"date":"2014/09/02","close":"103.3000","volume":"53227770.0000","open":"103.0600","high":"103.7400","low":"102.7200"},{"date":"2014/08/29","close":"102.5000","volume":"44516120.0000","open":"102.8600","high":"102.9000","low":"102.2000"},{"date":"2014/08/28","close":"102.2500","volume":"68368740.0000","open":"101.5900","high":"102.7800","low":"101.5600"},{"date":"2014/08/27","close":"102.1300","volume":"46807000.0000","open":"101.0200","high":"102.5700","low":"100.7000"},{"date":"2014/08/26","close":"100.8890","volume":"33079170.0000","open":"101.4200","high":"101.5000","low":"100.8600"},{"date":"2014/08/25","close":"101.5400","volume":"40087220.0000","open":"101.7900","high":"102.1700","low":"101.2800"},{"date":"2014/08/22","close":"101.3200","volume":"44028280.0000","open":"100.2900","high":"101.4700","low":"100.1900"},{"date":"2014/08/21","close":"100.5800","volume":"33377530.0000","open":"100.5700","high":"100.9400","low":"100.1100"},{"date":"2014/08/20","close":"100.5700","volume":"52565000.0000","open":"100.4400","high":"101.0900","low":"99.9500"},{"date":"2014/08/19","close":"100.5300","volume":"69189840.0000","open":"99.4100","high":"100.6800","low":"99.3200"},{"date":"2014/08/18","close":"99.1600","volume":"47285630.0000","open":"98.4900","high":"99.3700","low":"97.9800"},{"date":"2014/08/15","close":"97.9800","volume":"48938120.0000","open":"97.9000","high":"98.1900","low":"96.8600"},{"date":"2014/08/14","close":"97.5000","volume":"28056530.0000","open":"97.3300","high":"97.5700","low":"96.8000"},{"date":"2014/08/13","close":"97.2400","volume":"31866630.0000","open":"96.1500","high":"97.2400","low":"96.0400"},{"date":"2014/08/12","close":"95.9700","volume":"33485870.0000","open":"96.0400","high":"96.8800","low":"95.6100"},{"date":"2014/08/11","close":"95.9900","volume":"36459430.0000","open":"95.2700","high":"96.0800","low":"94.8355"},{"date":"2014/08/08","close":"94.7400","volume":"41783300.0000","open":"94.2600","high":"94.8200","low":"93.2800"},{"date":"2014/08/07","close":"94.4800","volume":"46553350.0000","open":"94.9300","high":"95.9500","low":"94.1000"},{"date":"2014/08/06","close":"94.9600","volume":"38463700.0000","open":"94.7500","high":"95.4800","low":"94.7100"},{"date":"2014/08/05","close":"95.1200","volume":"55861030.0000","open":"95.3600","high":"95.6800","low":"94.3600"},{"date":"2014/08/04","close":"95.5900","volume":"39860740.0000","open":"96.3700","high":"96.5800","low":"95.1700"},{"date":"2014/08/01","close":"96.1300","volume":"48379730.0000","open":"94.9000","high":"96.6200","low":"94.8100"},{"date":"2014/07/31","close":"95.6000","volume":"56625420.0000","open":"97.1600","high":"97.4500","low":"95.3300"},{"date":"2014/07/30","close":"98.1500","volume":"32978480.0000","open":"98.4400","high":"98.7000","low":"97.6700"},{"date":"2014/07/29","close":"98.3800","volume":"42957960.0000","open":"99.3300","high":"99.4400","low":"98.2500"},{"date":"2014/07/28","close":"99.0200","volume":"54926940.0000","open":"97.8200","high":"99.2400","low":"97.5500"},{"date":"2014/07/25","close":"97.6710","volume":"43384590.0000","open":"96.8500","high":"97.8400","low":"96.6400"},{"date":"2014/07/24","close":"97.0300","volume":"45609040.0000","open":"97.0350","high":"97.3200","low":"96.4200"},{"date":"2014/07/23","close":"97.1900","volume":"90937230.0000","open":"95.4200","high":"97.8800","low":"95.1700"},{"date":"2014/07/22","close":"94.7200","volume":"54297530.0000","open":"94.6800","high":"94.8900","low":"94.1200"},{"date":"2014/07/21","close":"93.9390","volume":"38792960.0000","open":"94.9900","high":"95.0000","low":"93.7200"},{"date":"2014/07/18","close":"94.4300","volume":"49838110.0000","open":"93.6200","high":"94.7400","low":"93.0200"},{"date":"2014/07/17","close":"93.0899","volume":"57111160.0000","open":"95.0300","high":"95.2790","low":"92.5700"},{"date":"2014/07/16","close":"94.7800","volume":"53323940.0000","open":"96.9700","high":"97.1000","low":"94.7400"},{"date":"2014/07/15","close":"95.3200","volume":"45187420.0000","open":"96.8000","high":"96.8500","low":"95.0300"},{"date":"2014/07/14","close":"96.4500","volume":"42643760.0000","open":"95.8600","high":"96.8900","low":"95.6500"},{"date":"2014/07/11","close":"95.2200","volume":"33960300.0000","open":"95.3600","high":"95.8900","low":"94.8625"},{"date":"2014/07/10","close":"95.0350","volume":"39633800.0000","open":"93.7600","high":"95.5500","low":"93.5200"},{"date":"2014/07/09","close":"95.3900","volume":"36267350.0000","open":"95.4400","high":"95.9500","low":"94.7600"},{"date":"2014/07/08","close":"95.3500","volume":"65111960.0000","open":"96.2700","high":"96.8000","low":"93.9200"},{"date":"2014/07/07","close":"95.9680","volume":"54809030.0000","open":"94.1400","high":"95.9900","low":"94.1000"},{"date":"2014/07/03","close":"94.0300","volume":"22891750.0000","open":"93.6700","high":"94.1000","low":"93.2000"},{"date":"2014/07/02","close":"93.4800","volume":"28414310.0000","open":"93.8650","high":"94.0600","low":"93.0900"},{"date":"2014/07/01","close":"93.5200","volume":"38156280.0000","open":"93.5200","high":"94.0700","low":"93.1300"},{"date":"2014/06/30","close":"92.9300","volume":"49474230.0000","open":"92.1000","high":"93.7250","low":"92.0900"},{"date":"2014/06/27","close":"91.9800","volume":"61758200.0000","open":"90.8200","high":"92.0000","low":"90.7700"},{"date":"2014/06/26","close":"90.9000","volume":"32528680.0000","open":"90.3700","high":"91.0500","low":"89.8000"},{"date":"2014/06/25","close":"90.3600","volume":"36835900.0000","open":"90.2100","high":"90.7000","low":"89.6500"},{"date":"2014/06/24","close":"90.2800","volume":"38977670.0000","open":"90.7500","high":"91.7400","low":"90.1900"},{"date":"2014/06/23","close":"90.8300","volume":"43611710.0000","open":"91.3200","high":"91.6200","low":"90.6000"},{"date":"2014/06/20","close":"90.9100","volume":"100478600.0000","open":"91.8500","high":"92.5500","low":"90.9000"},{"date":"2014/06/19","close":"91.8600","volume":"35476080.0000","open":"92.2900","high":"92.3000","low":"91.3389"},{"date":"2014/06/18","close":"92.1800","volume":"33314720.0000","open":"92.2700","high":"92.2900","low":"91.3500"},{"date":"2014/06/17","close":"92.0800","volume":"29684620.0000","open":"92.3100","high":"92.7000","low":"91.8000"},{"date":"2014/06/16","close":"92.2000","volume":"35371460.0000","open":"91.5100","high":"92.7500","low":"91.4500"},{"date":"2014/06/13","close":"91.2800","volume":"54406640.0000","open":"92.2000","high":"92.4400","low":"90.8800"},{"date":"2014/06/12","close":"92.2900","volume":"54628650.0000","open":"94.0400","high":"94.1200","low":"91.9000"},{"date":"2014/06/11","close":"93.8600","volume":"45528740.0000","open":"94.1300","high":"94.7600","low":"93.4700"},{"date":"2014/06/10","close":"94.2500","volume":"62563070.0000","open":"94.7300","high":"95.0500","low":"93.5700"},{"date":"2014/06/09","close":"93.7000","volume":"75295450.0000","open":"92.7000","high":"93.8800","low":"91.7500"},{"date":"2014/06/06","close":"92.2243","volume":"87403076.0000","open":"92.8428","high":"93.0371","low":"92.0671"},{"date":"2014/06/05","close":"92.4785","volume":"75796583.0000","open":"92.3143","high":"92.7671","low":"91.8014"},{"date":"2014/06/04","close":"92.1171","volume":"83735285.0000","open":"91.0628","high":"92.5557","low":"90.8728"},{"date":"2014/06/03","close":"91.0771","volume":"73043412.0000","open":"89.7800","high":"91.2485","low":"89.7500"},{"date":"2014/06/02","close":"89.8071","volume":"92179668.0000","open":"90.5657","high":"90.6900","low":"88.9285"},{"date":"2014/05/30","close":"90.4285","volume":"140860202.0000","open":"91.1400","high":"92.0243","low":"89.8428"},{"date":"2014/05/29","close":"90.7685","volume":"93737728.0000","open":"89.6928","high":"90.9814","low":"89.6814"},{"date":"2014/05/28","close":"89.1443","volume":"78793704.0000","open":"89.4314","high":"89.9757","low":"89.1114"},{"date":"2014/05/27","close":"89.3757","volume":"86840486.0000","open":"87.9828","high":"89.4085","low":"87.9471"},{"date":"2014/05/23","close":"87.7328","volume":"57918367.0000","open":"86.7500","high":"87.8184","low":"86.6385"},{"date":"2014/05/22","close":"86.7528","volume":"50142667.0000","open":"86.6571","high":"87.1214","low":"86.3000"},{"date":"2014/05/21","close":"86.6157","volume":"49184983.0000","open":"86.2614","high":"86.6714","low":"86.0085"},{"date":"2014/05/20","close":"86.3871","volume":"58232373.0000","open":"86.3585","high":"86.6285","low":"85.8185"},{"date":"2014/05/19","close":"86.3700","volume":"78819884.0000","open":"85.4071","high":"86.7614","low":"85.3328"},{"date":"2014/05/16","close":"85.3585","volume":"68960136.0000","open":"84.0900","high":"85.3614","low":"83.6285"},{"date":"2014/05/15","close":"84.1171","volume":"57427744.0000","open":"84.9571","high":"85.2285","low":"84.0057"},{"date":"2014/05/14","close":"84.8385","volume":"41505203.0000","open":"84.6328","high":"85.3428","low":"84.5343"},{"date":"2014/05/13","close":"84.8228","volume":"39854512.0000","open":"84.5714","high":"84.9343","low":"84.3857"},{"date":"2014/05/12","close":"84.6900","volume":"53184042.0000","open":"83.9271","high":"84.8085","low":"83.9143"},{"date":"2014/05/09","close":"83.6489","volume":"72767192.0000","open":"83.5057","high":"83.7500","low":"82.9043"},{"date":"2014/05/08","close":"83.9985","volume":"57243511.0000","open":"84.0357","high":"84.9157","low":"83.7714"},{"date":"2014/05/07","close":"84.6185","volume":"70532231.0000","open":"85.0357","high":"85.3271","low":"83.9614"},{"date":"2014/05/06","close":"84.9157","volume":"93468228.0000","open":"85.9714","high":"86.3442","low":"84.9157"},{"date":"2014/05/05","close":"85.8514","volume":"71523851.0000","open":"84.3057","high":"85.8571","low":"84.2857"},{"date":"2014/05/02","close":"84.6543","volume":"47673150.0000","open":"84.6200","high":"84.8857","low":"84.2443"},{"date":"2014/05/01","close":"84.4971","volume":"60958860.0000","open":"84.5714","high":"84.9714","low":"83.7657"},{"date":"2014/04/30","close":"84.2985","volume":"114029614.0000","open":"84.6628","high":"85.6328","low":"84.2571"},{"date":"2014/04/29","close":"84.6185","volume":"84049445.0000","open":"84.8200","high":"85.1400","low":"84.2157"},{"date":"2014/04/28","close":"84.8700","volume":"167001640.0000","open":"81.8285","high":"85.1071","low":"81.7928"},{"date":"2014/04/25","close":"81.7057","volume":"97435199.0000","open":"80.6471","high":"81.7128","low":"80.5657"},{"date":"2014/04/24","close":"81.1100","volume":"189588407.0000","open":"81.1728","high":"81.4285","low":"80.1043"},{"date":"2014/04/23","close":"74.9643","volume":"93473618.0000","open":"75.5800","high":"75.8757","low":"74.9214"},{"date":"2014/04/22","close":"75.9570","volume":"50607747.0000","open":"75.4728","high":"75.9751","low":"75.2144"},{"date":"2014/04/21","close":"75.8814","volume":"45546494.0000","open":"75.0485","high":"76.0200","low":"74.8514"},{"date":"2014/04/17","close":"74.9914","volume":"70978621.0000","open":"74.2857","high":"75.3943","low":"74.1714"},{"date":"2014/04/16","close":"74.1443","volume":"52515794.0000","open":"74.0071","high":"74.4414","low":"73.4479"},{"date":"2014/04/15","close":"73.9942","volume":"66461884.0000","open":"74.3243","high":"74.5200","low":"73.0471"},{"date":"2014/04/14","close":"74.5257","volume":"51252748.0000","open":"74.5571","high":"74.5943","low":"73.8871"},{"date":"2014/04/11","close":"74.2300","volume":"67920698.0000","open":"74.1428","high":"74.6900","low":"73.8771"},{"date":"2014/04/10","close":"74.7828","volume":"59701814.0000","open":"75.8114","high":"76.0343","low":"74.7385"},{"date":"2014/04/09","close":"75.7600","volume":"51357706.0000","open":"74.6628","high":"75.7843","low":"74.5743"},{"date":"2014/04/08","close":"74.7771","volume":"60880929.0000","open":"75.0271","high":"75.1600","low":"74.1000"},{"date":"2014/04/07","close":"74.7814","volume":"72146992.0000","open":"75.4314","high":"75.8428","low":"74.5557"},{"date":"2014/04/04","close":"75.9743","volume":"68615246.0000","open":"77.1157","high":"77.1428","low":"75.7971"},{"date":"2014/04/03","close":"76.9700","volume":"40472773.0000","open":"77.3414","high":"77.5000","low":"76.8057"},{"date":"2014/04/02","close":"77.5071","volume":"44803807.0000","open":"77.4828","high":"77.6400","low":"77.1800"},{"date":"2014/04/01","close":"77.3785","volume":"50069657.0000","open":"76.8228","high":"77.4100","low":"76.6814"},{"date":"2014/03/31","close":"76.6771","volume":"41787976.0000","open":"77.0328","high":"77.2585","low":"76.5614"},{"date":"2014/03/28","close":"76.6943","volume":"49703046.0000","open":"76.9028","high":"76.9914","low":"76.3214"},{"date":"2014/03/27","close":"76.7800","volume":"55330425.0000","open":"77.1450","high":"77.3571","low":"76.4457"},{"date":"2014/03/26","close":"77.1114","volume":"74394902.0000","open":"78.0743","high":"78.4285","low":"76.9800"},{"date":"2014/03/25","close":"77.8557","volume":"70284361.0000","open":"77.3571","high":"77.9643","low":"77.0843"},{"date":"2014/03/24","close":"77.0271","volume":"88674487.0000","open":"76.9171","high":"77.2143","low":"76.4371"},{"date":"2014/03/21","close":"76.1243","volume":"93431688.0000","open":"75.9900","high":"76.2500","low":"75.1900"},{"date":"2014/03/20","close":"75.5285","volume":"52017415.0000","open":"75.6985","high":"76.0957","low":"75.3357"},{"date":"2014/03/19","close":"75.8943","volume":"56077605.0000","open":"76.0371","high":"76.6057","low":"75.5714"},{"date":"2014/03/18","close":"75.9143","volume":"52279152.0000","open":"75.1285","high":"75.9957","low":"75.0286"},{"date":"2014/03/17","close":"75.2485","volume":"49725201.0000","open":"75.3857","high":"75.7100","low":"75.1214"},{"date":"2014/03/14","close":"74.9557","volume":"59166181.0000","open":"75.5414","high":"75.8414","low":"74.7143"},{"date":"2014/03/13","close":"75.8071","volume":"64314038.0000","open":"76.7771","high":"77.0943","low":"75.5943"},{"date":"2014/03/12","close":"76.6585","volume":"49819071.0000","open":"76.3585","high":"76.7643","low":"76.0000"},{"date":"2014/03/11","close":"76.5843","volume":"69791288.0000","open":"76.4928","high":"76.9628","low":"76.0843"},{"date":"2014/03/10","close":"75.8457","volume":"44638950.0000","open":"75.4800","high":"76.1900","low":"75.4770"},{"date":"2014/03/07","close":"75.7771","volume":"55164427.0000","open":"75.8700","high":"75.9971","low":"75.1500"},{"date":"2014/03/06","close":"75.8214","volume":"46363282.0000","open":"76.1128","high":"76.3485","low":"75.4428"},{"date":"2014/03/05","close":"76.0514","volume":"50000910.0000","open":"75.8457","high":"76.3928","low":"75.5900"},{"date":"2014/03/04","close":"75.8914","volume":"64772440.0000","open":"75.8571","high":"76.0914","low":"75.3957"},{"date":"2014/03/03","close":"75.3943","volume":"59671581.0000","open":"74.7743","high":"75.8071","low":"74.6871"},{"date":"2014/02/28","close":"75.1771","volume":"92930208.0000","open":"75.5828","high":"76.1071","low":"74.5885"},{"date":"2014/02/27","close":"75.3814","volume":"75444623.0000","open":"73.8771","high":"75.5400","low":"73.7214"},{"date":"2014/02/26","close":"73.9071","volume":"69024270.0000","open":"74.8014","high":"75.0000","low":"73.6571"},{"date":"2014/02/25","close":"74.5800","volume":"57961606.0000","open":"75.6257","high":"75.6521","low":"74.4285"},{"date":"2014/02/24","close":"75.3643","volume":"72208942.0000","open":"74.7357","high":"75.7028","low":"74.6314"},{"date":"2014/02/21","close":"75.0357","volume":"69688045.0000","open":"76.1133","high":"76.3671","low":"74.9428"},{"date":"2014/02/20","close":"75.8785","volume":"76457383.0000","open":"76.1414","high":"76.7143","low":"75.5714"},{"date":"2014/02/19","close":"76.7671","volume":"78415914.0000","open":"77.8214","high":"78.1271","low":"76.3357"},{"date":"2014/02/18","close":"77.9985","volume":"65048101.0000","open":"78.0000","high":"78.7414","low":"77.9443"},{"date":"2014/02/14","close":"77.7128","volume":"68395257.0000","open":"77.4957","high":"77.9971","low":"77.3157"},{"date":"2014/02/13","close":"77.7757","volume":"76790093.0000","open":"76.3800","high":"77.8357","low":"76.3143"},{"date":"2014/02/12","close":"76.5600","volume":"76994423.0000","open":"76.7071","high":"77.0800","low":"76.1771"},{"date":"2014/02/11","close":"76.5657","volume":"70489461.0000","open":"75.8014","high":"76.8214","low":"75.6428"},{"date":"2014/02/10","close":"75.5700","volume":"86342646.0000","open":"74.0943","high":"75.9985","low":"74.0000"},{"date":"2014/02/07","close":"74.2400","volume":"93444918.0000","open":"74.4828","high":"74.7042","low":"73.9114"},{"date":"2014/02/06","close":"73.2157","volume":"64415139.0000","open":"72.8657","high":"73.3571","low":"72.5443"},{"date":"2014/02/05","close":"73.2271","volume":"82072855.0000","open":"72.3657","high":"73.6114","low":"72.3217"},{"date":"2014/02/04","close":"72.6843","volume":"94166758.0000","open":"72.2643","high":"72.7800","low":"71.8228"},{"date":"2014/02/03","close":"71.6471","volume":"100347900.0000","open":"71.8014","high":"72.5328","low":"71.3286"},{"date":"2014/01/31","close":"71.5143","volume":"116191705.0000","open":"70.7400","high":"71.6471","low":"70.5071"},{"date":"2014/01/30","close":"71.3974","volume":"169602001.0000","open":"71.7914","high":"72.3571","low":"70.9571"},{"date":"2014/01/29","close":"71.5357","volume":"125679438.0000","open":"71.9928","high":"72.4814","low":"71.2314"},{"date":"2014/01/28","close":"72.3571","volume":"266302550.0000","open":"72.6800","high":"73.5714","low":"71.7243"},{"date":"2014/01/27","close":"78.6428","volume":"135926881.0000","open":"78.5814","high":"79.2571","low":"77.9643"},{"date":"2014/01/24","close":"78.0100","volume":"107943182.0000","open":"79.1428","high":"79.3743","low":"77.8214"},{"date":"2014/01/23","close":"79.4543","volume":"100803600.0000","open":"78.5628","high":"79.5000","low":"77.8295"},{"date":"2014/01/22","close":"78.7871","volume":"94941728.0000","open":"78.7021","high":"79.6128","low":"78.2585"},{"date":"2014/01/21","close":"78.4385","volume":"81897015.0000","open":"77.2843","high":"78.5814","low":"77.2028"},{"date":"2014/01/17","close":"77.2385","volume":"106660852.0000","open":"78.7828","high":"78.8671","low":"77.1285"},{"date":"2014/01/16","close":"79.1785","volume":"57313035.0000","open":"79.2714","high":"79.5500","low":"78.8114"},{"date":"2014/01/15","close":"79.6228","volume":"97888589.0000","open":"79.0743","high":"80.0285","low":"78.8085"},{"date":"2014/01/14","close":"78.0557","volume":"83082535.0000","open":"76.8885","high":"78.1043","low":"76.8085"},{"date":"2014/01/13","close":"76.5328","volume":"94612448.0000","open":"75.7014","high":"77.5000","low":"75.6971"},{"date":"2014/01/10","close":"76.1343","volume":"76235553.0000","open":"77.1185","high":"77.2571","low":"75.8728"},{"date":"2014/01/09","close":"76.6455","volume":"69762819.0000","open":"78.1143","high":"78.1228","low":"76.4786"},{"date":"2014/01/08","close":"77.6371","volume":"64158428.0000","open":"76.9728","high":"77.9371","low":"76.9557"},{"date":"2014/01/07","close":"77.1482","volume":"80172914.0000","open":"77.7600","high":"77.9943","low":"76.8464"},{"date":"2014/01/06","close":"77.7043","volume":"103132361.0000","open":"76.7785","high":"78.1143","low":"76.2285"},{"date":"2014/01/03","close":"77.2828","volume":"98046999.0000","open":"78.9800","high":"79.1000","low":"77.2043"},{"date":"2014/01/02","close":"79.0185","volume":"58661530.0000","open":"79.3828","high":"79.5757","low":"78.8601"},{"date":"2013/12/31","close":"80.1457","volume":"55761100.0000","open":"79.1671","high":"80.1828","low":"79.1428"},{"date":"2013/12/30","close":"79.2171","volume":"63265305.0000","open":"79.6371","high":"80.0128","low":"78.9030"},{"date":"2013/12/27","close":"80.0128","volume":"56385717.0000","open":"80.5457","high":"80.6300","low":"79.9285"},{"date":"2013/12/26","close":"80.5571","volume":"50906710.0000","open":"81.1571","high":"81.3571","low":"80.4823"},{"date":"2013/12/24","close":"81.0957","volume":"41888748.0000","open":"81.4128","high":"81.6971","low":"80.8614"},{"date":"2013/12/23","close":"81.4414","volume":"125072328.0000","open":"81.1428","high":"81.5314","low":"80.3943"},{"date":"2013/12/20","close":"78.4314","volume":"108738663.0000","open":"77.9185","high":"78.8014","low":"77.8310"},{"date":"2013/12/19","close":"77.7800","volume":"79939814.0000","open":"78.5000","high":"78.5714","low":"77.6757"},{"date":"2013/12/18","close":"78.6814","volume":"141217062.0000","open":"78.5285","high":"78.7785","low":"76.9714"},{"date":"2013/12/17","close":"79.2843","volume":"57137328.0000","open":"79.4014","high":"79.9200","low":"79.0535"},{"date":"2013/12/16","close":"79.6428","volume":"70547981.0000","open":"79.2885","high":"80.3770","low":"79.2871"},{"date":"2013/12/13","close":"79.2043","volume":"82974455.0000","open":"80.4071","high":"80.4114","low":"79.0957"},{"date":"2013/12/12","close":"80.0771","volume":"65465763.0000","open":"80.3060","high":"80.7628","low":"80.0043"},{"date":"2013/12/11","close":"80.1943","volume":"89783987.0000","open":"81.0000","high":"81.5671","low":"79.9557"},{"date":"2013/12/10","close":"80.7928","volume":"69101620.0000","open":"80.5114","high":"81.1257","low":"80.1714"},{"date":"2013/12/09","close":"80.9185","volume":"79945274.0000","open":"80.1286","high":"81.3685","low":"80.1286"},{"date":"2013/12/06","close":"80.0028","volume":"85919076.0000","open":"80.8271","high":"80.9643","low":"79.9385"},{"date":"2013/12/05","close":"81.1287","volume":"111600823.0000","open":"81.8071","high":"82.1622","low":"80.9157"},{"date":"2013/12/04","close":"80.7143","volume":"94279248.0000","open":"80.7857","high":"81.3128","low":"80.1171"},{"date":"2013/12/03","close":"80.9031","volume":"112338274.0000","open":"79.7571","high":"80.9114","low":"79.6685"},{"date":"2013/12/02","close":"78.7471","volume":"117918255.0000","open":"79.7143","high":"80.6185","low":"78.6885"},{"date":"2013/11/29","close":"79.4385","volume":"79532274.0000","open":"78.4971","high":"79.7614","low":"78.2585"},{"date":"2013/11/27","close":"77.9943","volume":"90644497.0000","open":"76.6157","high":"78.0000","low":"76.2000"},{"date":"2013/11/26","close":"76.2000","volume":"99957720.0000","open":"74.8743","high":"76.5914","low":"74.8571"},{"date":"2013/11/25","close":"74.8200","volume":"57270811.0000","open":"74.4314","high":"75.1243","low":"74.4285"},{"date":"2013/11/22","close":"74.2571","volume":"55833466.0000","open":"74.2171","high":"74.5943","low":"74.0757"},{"date":"2013/11/21","close":"74.4480","volume":"65382638.0000","open":"73.9428","high":"74.4585","low":"73.3814"},{"date":"2013/11/20","close":"73.5714","volume":"48459468.0000","open":"74.1757","high":"74.3457","low":"73.4757"},{"date":"2013/11/19","close":"74.2214","volume":"52105335.0000","open":"74.1471","high":"74.7685","low":"73.9957"},{"date":"2013/11/18","close":"74.0898","volume":"60997871.0000","open":"74.9985","high":"75.3128","low":"74.0285"},{"date":"2013/11/15","close":"74.9987","volume":"79339984.0000","open":"75.2257","high":"75.5843","low":"74.9271"},{"date":"2013/11/14","close":"75.4514","volume":"70401611.0000","open":"74.6871","high":"75.6114","low":"74.5528"},{"date":"2013/11/13","close":"74.3763","volume":"49154022.0000","open":"74.0000","high":"74.6071","low":"73.8514"},{"date":"2013/11/12","close":"74.2871","volume":"51067815.0000","open":"73.9528","high":"74.8457","low":"73.8571"},{"date":"2013/11/11","close":"74.1497","volume":"56747589.0000","open":"74.2843","high":"74.5243","low":"73.4871"},{"date":"2013/11/08","close":"74.3657","volume":"69617240.0000","open":"73.5114","high":"74.4471","low":"73.2271"},{"date":"2013/11/07","close":"73.2131","volume":"65542966.0000","open":"74.2257","high":"74.7414","low":"73.1971"},{"date":"2013/11/06","close":"74.4171","volume":"55716622.0000","open":"74.8785","high":"74.9800","low":"74.0285"},{"date":"2013/11/05","close":"75.0641","volume":"66243519.0000","open":"74.9400","high":"75.5550","low":"74.7143"},{"date":"2013/11/04","close":"75.2500","volume":"61011871.0000","open":"74.4428","high":"75.2600","low":"74.1157"},{"date":"2013/11/01","close":"74.2900","volume":"68524519.0000","open":"74.8600","high":"74.9714","low":"73.6914"},{"date":"2013/10/31","close":"74.6717","volume":"68774804.0000","open":"75.0000","high":"75.3557","low":"74.4671"},{"date":"2013/10/30","close":"74.9851","volume":"88125406.0000","open":"74.2300","high":"75.3600","low":"73.8600"},{"date":"2013/10/29","close":"73.8111","volume":"158499648.0000","open":"76.6100","high":"77.0357","low":"73.5057"},{"date":"2013/10/28","close":"75.6965","volume":"124205797.0000","open":"75.5771","high":"75.8571","low":"74.7443"},{"date":"2013/10/25","close":"75.1368","volume":"84316215.0000","open":"75.9021","high":"76.1757","low":"75.0157"},{"date":"2013/10/24","close":"75.9871","volume":"96004539.0000","open":"75.0000","high":"76.0671","low":"74.6357"},{"date":"2013/10/23","close":"74.9943","volume":"78237833.0000","open":"74.1428","high":"75.0957","low":"74.1428"},{"date":"2013/10/22","close":"74.2668","volume":"133200030.0000","open":"75.2007","high":"75.4928","low":"72.5757"},{"date":"2013/10/21","close":"74.4803","volume":"98700380.0000","open":"73.1100","high":"74.9000","low":"73.0743"},{"date":"2013/10/18","close":"72.6985","volume":"72195292.0000","open":"72.2843","high":"72.7514","low":"72.2443"},{"date":"2013/10/17","close":"72.0714","volume":"63116954.0000","open":"71.4257","high":"72.1114","low":"71.3828"},{"date":"2013/10/16","close":"71.5877","volume":"62449609.0000","open":"71.5414","high":"71.7900","low":"71.3186"},{"date":"2013/10/15","close":"71.2400","volume":"79715744.0000","open":"71.0721","high":"71.7143","low":"70.7886"},{"date":"2013/10/14","close":"70.8628","volume":"65216780.0000","open":"69.9757","high":"71.0828","low":"69.9071"},{"date":"2013/10/11","close":"70.4017","volume":"66797100.0000","open":"69.5700","high":"70.5486","low":"69.3086"},{"date":"2013/10/10","close":"69.9483","volume":"69186523.0000","open":"70.1886","high":"70.3400","low":"69.5771"},{"date":"2013/10/09","close":"69.5126","volume":"75304273.0000","open":"69.2343","high":"69.6843","low":"68.3257"},{"date":"2013/10/08","close":"68.7057","volume":"72260532.0000","open":"69.9914","high":"70.0914","low":"68.6486"},{"date":"2013/10/07","close":"69.6786","volume":"77889233.0000","open":"69.5086","high":"70.3786","low":"69.3357"},{"date":"2013/10/04","close":"69.0043","volume":"64638089.0000","open":"69.1228","high":"69.2286","low":"68.3714"},{"date":"2013/10/03","close":"69.0586","volume":"78802384.0000","open":"70.0728","high":"70.3357","low":"68.6769"},{"date":"2013/10/02","close":"69.9371","volume":"71799162.0000","open":"69.3757","high":"70.2571","low":"69.1071"},{"date":"2013/10/01","close":"69.7086","volume":"88194286.0000","open":"68.3500","high":"69.8771","low":"68.3401"},{"date":"2013/09/30","close":"68.1071","volume":"64764985.0000","open":"68.1786","high":"68.8086","low":"67.7730"},{"date":"2013/09/27","close":"68.9643","volume":"56787853.0000","open":"69.1114","high":"69.2386","low":"68.6743"},{"date":"2013/09/26","close":"69.4600","volume":"59050786.0000","open":"69.4286","high":"69.7943","low":"69.1286"},{"date":"2013/09/25","close":"68.7900","volume":"79011544.0000","open":"69.8857","high":"69.9486","low":"68.7757"},{"date":"2013/09/24","close":"69.8714","volume":"90481397.0000","open":"70.6971","high":"70.7814","low":"69.6886"},{"date":"2013/09/23","close":"70.0914","volume":"189942957.0000","open":"70.8714","high":"70.9871","low":"68.9428"},{"date":"2013/09/20","close":"66.7728","volume":"174425492.0000","open":"68.2857","high":"68.3643","low":"66.5714"},{"date":"2013/09/19","close":"67.4714","volume":"100811930.0000","open":"67.2428","high":"67.9757","low":"67.0357"},{"date":"2013/09/18","close":"66.3828","volume":"113636704.0000","open":"66.1686","high":"66.6214","low":"65.8086"},{"date":"2013/09/17","close":"65.0457","volume":"99704600.0000","open":"63.9943","high":"65.6728","low":"63.9286"},{"date":"2013/09/16","close":"64.3028","volume":"136563951.0000","open":"65.8571","high":"65.9443","low":"63.8886"},{"date":"2013/09/13","close":"66.4143","volume":"74495492.0000","open":"67.0486","high":"67.4042","low":"66.3857"},{"date":"2013/09/12","close":"67.5271","volume":"100856800.0000","open":"66.9286","high":"67.9143","low":"66.5728"},{"date":"2013/09/11","close":"66.8157","volume":"224172687.0000","open":"66.7157","high":"67.6700","low":"66.4014"},{"date":"2013/09/10","close":"70.6628","volume":"185372026.0000","open":"72.3143","high":"72.4928","low":"69.9286"},{"date":"2013/09/09","close":"72.3100","volume":"84479315.0000","open":"72.1428","high":"72.5600","low":"71.9257"},{"date":"2013/09/06","close":"71.1743","volume":"89482147.0000","open":"71.2057","high":"71.3400","low":"69.9928"},{"date":"2013/09/05","close":"70.7528","volume":"58779242.0000","open":"71.4643","high":"71.5257","low":"70.5200"},{"date":"2013/09/04","close":"71.2416","volume":"86016026.0000","open":"71.3657","high":"71.7485","low":"70.8971"},{"date":"2013/09/03","close":"69.7971","volume":"82966965.0000","open":"70.4428","high":"71.5143","low":"69.6214"},{"date":"2013/08/30","close":"69.6023","volume":"68053649.0000","open":"70.2857","high":"70.4214","low":"69.5000"},{"date":"2013/08/29","close":"70.2428","volume":"59804259.0000","open":"70.2357","high":"70.9286","low":"70.1614"},{"date":"2013/08/28","close":"70.1280","volume":"76746763.0000","open":"69.4286","high":"70.8286","low":"69.4286"},{"date":"2013/08/27","close":"69.7986","volume":"105846822.0000","open":"71.1428","high":"71.7871","low":"69.4714"},{"date":"2013/08/26","close":"71.8528","volume":"82354395.0000","open":"71.5357","high":"72.8857","low":"71.5000"},{"date":"2013/08/23","close":"71.5743","volume":"55559766.0000","open":"71.8957","high":"71.9071","low":"71.3357"},{"date":"2013/08/22","close":"71.8514","volume":"60866474.0000","open":"72.1400","high":"72.2271","low":"71.1714"},{"date":"2013/08/21","close":"71.7657","volume":"83783025.0000","open":"71.9414","high":"72.4500","low":"71.6000"},{"date":"2013/08/20","close":"71.5814","volume":"89508677.0000","open":"72.8157","high":"72.9385","low":"71.5457"},{"date":"2013/08/19","close":"72.5343","volume":"127401718.0000","open":"72.0485","high":"73.3914","low":"72.0000"},{"date":"2013/08/16","close":"71.7614","volume":"90314517.0000","open":"71.4500","high":"71.8485","low":"71.2657"},{"date":"2013/08/15","close":"71.1300","volume":"122386917.0000","open":"70.9171","high":"71.7713","low":"69.8690"},{"date":"2013/08/14","close":"71.2143","volume":"188427037.0000","open":"71.1257","high":"72.0357","low":"70.4857"},{"date":"2013/08/13","close":"69.9386","volume":"219450906.0000","open":"67.2771","high":"70.6657","low":"66.8643"},{"date":"2013/08/12","close":"66.7657","volume":"90984207.0000","open":"65.2657","high":"66.9500","low":"65.2328"},{"date":"2013/08/09","close":"64.9214","volume":"66643940.0000","open":"65.5200","high":"65.7800","low":"64.8071"},{"date":"2013/08/08","close":"65.8586","volume":"63939790.0000","open":"66.2650","high":"66.3000","low":"65.4214"},{"date":"2013/08/07","close":"66.4257","volume":"74622262.0000","open":"66.2571","high":"66.7143","low":"65.9671"},{"date":"2013/08/06","close":"66.4643","volume":"83703085.0000","open":"66.8600","high":"67.4128","low":"66.0243"},{"date":"2013/08/05","close":"67.0643","volume":"79577704.0000","open":"66.3843","high":"67.2386","low":"66.0214"},{"date":"2013/08/02","close":"66.0771","volume":"68411287.0000","open":"65.4300","high":"66.1214","low":"65.2371"},{"date":"2013/08/01","close":"65.2394","volume":"51386070.0000","open":"65.1076","high":"65.2571","low":"64.7514"},{"date":"2013/07/31","close":"64.6471","volume":"80624904.0000","open":"64.9986","high":"65.3346","low":"64.2043"},{"date":"2013/07/30","close":"64.7600","volume":"77240193.0000","open":"64.2800","high":"65.3071","low":"64.1757"},{"date":"2013/07/29","close":"63.9700","volume":"62006404.0000","open":"62.9714","high":"64.2843","low":"62.8857"},{"date":"2013/07/26","close":"62.9986","volume":"50020601.0000","open":"62.1857","high":"63.0057","low":"62.0486"},{"date":"2013/07/25","close":"62.6428","volume":"57358143.0000","open":"62.9571","high":"63.0571","low":"62.2586"},{"date":"2013/07/24","close":"62.9300","volume":"147906334.0000","open":"62.7043","high":"63.5128","low":"62.1800"},{"date":"2013/07/23","close":"59.8557","volume":"88619467.0000","open":"60.8571","high":"60.9943","low":"59.8157"},{"date":"2013/07/22","close":"60.9014","volume":"51912282.0000","open":"61.3514","high":"61.3928","low":"60.7811"},{"date":"2013/07/19","close":"60.7071","volume":"67137272.0000","open":"61.8714","high":"61.9971","low":"60.6214"},{"date":"2013/07/18","close":"61.6797","volume":"54658172.0000","open":"61.9114","high":"62.1243","low":"61.5157"},{"date":"2013/07/17","close":"61.4728","volume":"49737479.0000","open":"61.3857","high":"61.7457","low":"61.1743"},{"date":"2013/07/16","close":"61.4564","volume":"54028599.0000","open":"60.9314","high":"61.5300","low":"60.5957"},{"date":"2013/07/15","close":"61.0628","volume":"60473991.0000","open":"60.7157","high":"61.6371","low":"60.6857"},{"date":"2013/07/12","close":"60.9300","volume":"69863934.0000","open":"61.0928","high":"61.3986","low":"60.4871"},{"date":"2013/07/11","close":"61.0411","volume":"81567174.0000","open":"60.4214","high":"61.1786","low":"60.1671"},{"date":"2013/07/10","close":"60.1043","volume":"70064141.0000","open":"59.9428","high":"60.6857","low":"59.7500"},{"date":"2013/07/09","close":"60.3357","volume":"88135556.0000","open":"59.0857","high":"60.5000","low":"58.6257"},{"date":"2013/07/08","close":"59.2928","volume":"74476172.0000","open":"60.0157","high":"60.1428","low":"58.6643"},{"date":"2013/07/05","close":"59.6314","volume":"68482701.0000","open":"60.0557","high":"60.4700","low":"59.3357"},{"date":"2013/07/03","close":"60.1143","volume":"60232176.0000","open":"60.1228","high":"60.4257","low":"59.6357"},{"date":"2013/07/02","close":"59.7843","volume":"117427695.0000","open":"58.5657","high":"60.2328","low":"58.4957"},{"date":"2013/07/01","close":"58.4600","volume":"97736269.0000","open":"57.5271","high":"58.8957","low":"57.3171"},{"date":"2013/06/28","close":"56.6471","volume":"144584903.0000","open":"55.9086","high":"57.1814","low":"55.5528"},{"date":"2013/06/27","close":"56.2543","volume":"84237745.0000","open":"57.0357","high":"57.3414","low":"56.2200"},{"date":"2013/06/26","close":"56.8671","volume":"91911848.0000","open":"57.7000","high":"57.8271","low":"56.5228"},{"date":"2013/06/25","close":"57.5186","volume":"78533304.0000","open":"57.9571","high":"58.2557","low":"56.9757"},{"date":"2013/06/24","close":"57.5057","volume":"120047026.0000","open":"58.2000","high":"58.3800","low":"56.8643"},{"date":"2013/06/21","close":"59.0714","volume":"120212576.0000","open":"59.7843","high":"60.0000","low":"58.3000"},{"date":"2013/06/20","close":"59.5483","volume":"89321357.0000","open":"59.9000","high":"60.8543","low":"59.3100"},{"date":"2013/06/19","close":"60.4286","volume":"77690993.0000","open":"61.6286","high":"61.6657","low":"60.4286"},{"date":"2013/06/18","close":"61.6814","volume":"48375328.0000","open":"61.6514","high":"62.1286","low":"61.4586"},{"date":"2013/06/17","close":"61.7143","volume":"64784564.0000","open":"61.6343","high":"62.2428","low":"61.4802"},{"date":"2013/06/14","close":"61.4357","volume":"67955299.0000","open":"62.2000","high":"62.3271","low":"61.2143"},{"date":"2013/06/13","close":"62.2807","volume":"71449021.0000","open":"61.7857","high":"62.4486","low":"61.2500"},{"date":"2013/06/12","close":"61.7414","volume":"66270567.0000","open":"62.7857","high":"63.0357","low":"61.6428"},{"date":"2013/06/11","close":"62.5143","volume":"71515731.0000","open":"62.2486","high":"63.2514","low":"61.9028"},{"date":"2013/06/10","close":"62.6986","volume":"112489474.0000","open":"63.5328","high":"64.1541","low":"62.4000"},{"date":"2013/06/07","close":"63.1158","volume":"101081990.0000","open":"62.3571","high":"63.3200","low":"61.8243"},{"date":"2013/06/06","close":"62.6371","volume":"104167451.0000","open":"63.6386","high":"63.8571","low":"62.0071"},{"date":"2013/06/05","close":"63.5871","volume":"72524432.0000","open":"63.6643","high":"64.3886","low":"63.3871"},{"date":"2013/06/04","close":"64.1871","volume":"72575322.0000","open":"64.7457","high":"64.9186","low":"63.9128"},{"date":"2013/06/03","close":"64.3886","volume":"92900598.0000","open":"64.3900","high":"64.6228","low":"63.2114"},{"date":"2013/05/31","close":"64.2478","volume":"95688069.0000","open":"64.6428","high":"65.3000","low":"64.2143"},{"date":"2013/05/30","close":"64.5114","volume":"88354937.0000","open":"63.6643","high":"64.9286","low":"63.5014"},{"date":"2013/05/29","close":"63.5643","volume":"82553265.0000","open":"62.8571","high":"63.9286","low":"62.7714"},{"date":"2013/05/28","close":"63.0627","volume":"96311559.0000","open":"64.2714","high":"64.4443","low":"62.9786"},{"date":"2013/05/24","close":"63.5928","volume":"69009031.0000","open":"62.9786","high":"63.6657","low":"62.9086"},{"date":"2013/05/23","close":"63.1628","volume":"88239856.0000","open":"62.2786","high":"63.7371","low":"62.2557"},{"date":"2013/05/22","close":"63.0506","volume":"110682773.0000","open":"63.4357","high":"64.0500","low":"62.6028"},{"date":"2013/05/21","close":"62.8086","volume":"113917824.0000","open":"62.5928","high":"63.6400","low":"62.0286"},{"date":"2013/05/20","close":"63.2757","volume":"112529584.0000","open":"61.7014","high":"63.6857","low":"61.4428"},{"date":"2013/05/17","close":"61.8943","volume":"106966262.0000","open":"62.7214","high":"62.8700","low":"61.5728"},{"date":"2013/05/16","close":"62.0826","volume":"150737695.0000","open":"60.4628","high":"62.5500","low":"59.8428"},{"date":"2013/05/15","close":"61.2643","volume":"185168956.0000","open":"62.7371","high":"63.0000","low":"60.3371"},{"date":"2013/05/14","close":"63.4086","volume":"111617413.0000","open":"64.8357","high":"65.0286","low":"63.1643"},{"date":"2013/05/13","close":"64.9628","volume":"79216224.0000","open":"64.5014","high":"65.4143","low":"64.5000"},{"date":"2013/05/10","close":"64.7100","volume":"83615305.0000","open":"65.4243","high":"65.6728","low":"64.3543"},{"date":"2013/05/09","close":"65.2528","volume":"99448260.0000","open":"65.6871","high":"66.1428","low":"65.0828"},{"date":"2013/05/08","close":"66.2628","volume":"117977895.0000","open":"65.5771","high":"66.4814","low":"65.1157"},{"date":"2013/05/07","close":"65.5226","volume":"120467656.0000","open":"66.4243","high":"66.5357","low":"64.8143"},{"date":"2013/05/06","close":"65.8157","volume":"123979417.0000","open":"65.1014","high":"66.0286","low":"64.9014"},{"date":"2013/05/03","close":"64.2828","volume":"90287637.0000","open":"64.4728","high":"64.7471","low":"64.1643"},{"date":"2013/05/02","close":"63.6457","volume":"105409532.0000","open":"63.1114","high":"64.0843","low":"62.9471"},{"date":"2013/05/01","close":"62.7557","volume":"126694438.0000","open":"63.4943","high":"63.5614","low":"62.0557"},{"date":"2013/04/30","close":"63.2543","volume":"172699362.0000","open":"62.1571","high":"63.6071","low":"61.7243"},{"date":"2013/04/29","close":"61.4457","volume":"159929048.0000","open":"60.0643","high":"61.9453","low":"60.0000"},{"date":"2013/04/26","close":"59.6007","volume":"190977767.0000","open":"58.5443","high":"59.8241","low":"58.3214"},{"date":"2013/04/25","close":"58.3400","volume":"95958899.0000","open":"58.7464","high":"59.1343","low":"58.1428"},{"date":"2013/04/24","close":"57.9231","volume":"242352533.0000","open":"56.2200","high":"59.3214","low":"56.0714"},{"date":"2013/04/23","close":"58.0186","volume":"150492275.0000","open":"57.7128","high":"58.3401","low":"56.9728"},{"date":"2013/04/22","close":"56.9528","volume":"107226032.0000","open":"56.0914","high":"57.4571","low":"55.8964"},{"date":"2013/04/19","close":"55.7900","volume":"152132166.0000","open":"55.4243","high":"57.0857","low":"55.0143"},{"date":"2013/04/18","close":"56.0071","volume":"166414970.0000","open":"57.8557","high":"57.9700","low":"55.6774"},{"date":"2013/04/17","close":"57.5428","volume":"236094111.0000","open":"60.0386","high":"60.0857","low":"56.8728"},{"date":"2013/04/16","close":"60.8914","volume":"76203143.0000","open":"60.2243","high":"60.9443","low":"60.0814"},{"date":"2013/04/15","close":"59.9786","volume":"79101214.0000","open":"61.0000","high":"61.1271","low":"59.9357"},{"date":"2013/04/12","close":"61.4000","volume":"59634201.0000","open":"62.0214","high":"62.0214","low":"61.2986"},{"date":"2013/04/11","close":"62.0471","volume":"82064315.0000","open":"61.9600","high":"62.5700","low":"61.6000"},{"date":"2013/04/10","close":"62.2414","volume":"93883258.0000","open":"61.1571","high":"62.4371","low":"60.8586"},{"date":"2013/04/09","close":"60.9971","volume":"76595913.0000","open":"60.9086","high":"61.2143","low":"60.3928"},{"date":"2013/04/08","close":"60.8871","volume":"75145863.0000","open":"60.6928","high":"61.0714","low":"60.3557"},{"date":"2013/04/05","close":"60.4571","volume":"95724469.0000","open":"60.6428","high":"60.7071","low":"59.9543"},{"date":"2013/04/04","close":"61.1028","volume":"89574827.0000","open":"61.9657","high":"62.1428","low":"60.7500"},{"date":"2013/04/03","close":"61.7128","volume":"90550837.0000","open":"61.6243","high":"62.4686","low":"61.4728"},{"date":"2013/04/02","close":"61.3988","volume":"132255450.0000","open":"61.0857","high":"62.5914","low":"60.9143"},{"date":"2013/04/01","close":"61.2728","volume":"97168149.0000","open":"63.1286","high":"63.3854","low":"61.1057"},{"date":"2013/03/28","close":"63.2371","volume":"110618443.0000","open":"64.2600","high":"64.5456","low":"63.0886"},{"date":"2013/03/27","close":"64.5828","volume":"81772975.0000","open":"65.2086","high":"65.2571","low":"64.3900"},{"date":"2013/03/26","close":"65.8766","volume":"73390892.0000","open":"66.4914","high":"66.5485","low":"65.7900"},{"date":"2013/03/25","close":"66.2257","volume":"124980207.0000","open":"66.3843","high":"67.1357","low":"65.9686"},{"date":"2013/03/22","close":"65.9871","volume":"98261129.0000","open":"64.9400","high":"66.0143","low":"64.7300"},{"date":"2013/03/21","close":"64.6757","volume":"95484439.0000","open":"64.3171","high":"65.4257","low":"64.3000"},{"date":"2013/03/20","close":"64.5828","volume":"76980353.0000","open":"65.3457","high":"65.3757","low":"64.2271"},{"date":"2013/03/19","close":"64.9271","volume":"131468929.0000","open":"65.6428","high":"65.8528","low":"64.0714"},{"date":"2013/03/18","close":"65.1028","volume":"149961185.0000","open":"63.0643","high":"65.3514","low":"63.0286"},{"date":"2013/03/15","close":"63.3800","volume":"160587468.0000","open":"62.5614","high":"63.4614","low":"62.4643"},{"date":"2013/03/14","close":"61.7857","volume":"75801483.0000","open":"61.8328","high":"62.0914","low":"61.4928"},{"date":"2013/03/13","close":"61.1928","volume":"101314460.0000","open":"61.2071","high":"62.0714","low":"60.7657"},{"date":"2013/03/12","close":"61.2043","volume":"116142145.0000","open":"62.2286","high":"62.6971","low":"61.0814"},{"date":"2013/03/11","close":"62.5528","volume":"118221425.0000","open":"61.3928","high":"62.7157","low":"60.7343"},{"date":"2013/03/08","close":"61.6743","volume":"97466769.0000","open":"61.4000","high":"62.2043","low":"61.2300"},{"date":"2013/03/07","close":"61.5117","volume":"116969895.0000","open":"60.6428","high":"61.7157","low":"60.1514"},{"date":"2013/03/06","close":"60.8088","volume":"114860374.0000","open":"62.0728","high":"62.1786","low":"60.6328"},{"date":"2013/03/05","close":"61.5920","volume":"159227158.0000","open":"60.2114","high":"62.1700","low":"60.1071"},{"date":"2013/03/04","close":"60.0071","volume":"144332343.0000","open":"61.1143","high":"61.1714","low":"59.8571"},{"date":"2013/03/01","close":"61.4957","volume":"137819681.0000","open":"62.5714","high":"62.5971","low":"61.4257"},{"date":"2013/02/28","close":"63.0571","volume":"80512484.0000","open":"63.4357","high":"63.9814","low":"63.0571"},{"date":"2013/02/27","close":"63.5100","volume":"146554914.0000","open":"64.0614","high":"64.6343","low":"62.9500"},{"date":"2013/02/26","close":"64.1386","volume":"125040618.0000","open":"63.4028","high":"64.5057","low":"62.5228"},{"date":"2013/02/25","close":"63.2571","volume":"92813518.0000","open":"64.8357","high":"65.0171","low":"63.2243"},{"date":"2013/02/22","close":"64.4014","volume":"82560265.0000","open":"64.1786","high":"64.5143","low":"63.8000"},{"date":"2013/02/21","close":"63.7228","volume":"111563653.0000","open":"63.7143","high":"64.1671","low":"63.2600"},{"date":"2013/02/20","close":"64.1214","volume":"118823076.0000","open":"65.3843","high":"65.3843","low":"64.1143"},{"date":"2013/02/19","close":"65.7128","volume":"108820003.0000","open":"65.8714","high":"66.1043","low":"64.8357"},{"date":"2013/02/15","close":"65.7371","volume":"97873819.0000","open":"66.9786","high":"67.1657","low":"65.7028"},{"date":"2013/02/14","close":"66.6557","volume":"88785717.0000","open":"66.3600","high":"67.3771","low":"66.2886"},{"date":"2013/02/13","close":"66.7157","volume":"118682866.0000","open":"66.7443","high":"67.6628","low":"66.1743"},{"date":"2013/02/12","close":"66.8428","volume":"151743386.0000","open":"68.5014","high":"68.9114","low":"66.8206"},{"date":"2013/02/11","close":"68.5614","volume":"128206578.0000","open":"68.0714","high":"69.2771","low":"67.6071"},{"date":"2013/02/08","close":"67.8543","volume":"158143417.0000","open":"67.7143","high":"68.4014","low":"66.8928"},{"date":"2013/02/07","close":"66.8886","volume":"175627813.0000","open":"66.1786","high":"67.1428","low":"64.8743"},{"date":"2013/02/06","close":"65.3357","volume":"148003914.0000","open":"65.2100","high":"66.6428","low":"64.6543"},{"date":"2013/02/05","close":"65.4063","volume":"142959083.0000","open":"63.4357","high":"65.6771","low":"63.1743"},{"date":"2013/02/04","close":"63.1880","volume":"119044766.0000","open":"64.8443","high":"65.1343","low":"63.1428"},{"date":"2013/02/01","close":"64.8028","volume":"134704470.0000","open":"65.5871","high":"65.6400","low":"64.0500"},{"date":"2013/01/31","close":"65.0700","volume":"79445474.0000","open":"65.2828","high":"65.6114","low":"64.9971"},{"date":"2013/01/30","close":"65.2614","volume":"104140851.0000","open":"65.2857","high":"66.0857","low":"64.9286"},{"date":"2013/01/29","close":"65.4671","volume":"142486933.0000","open":"65.5000","high":"65.7428","low":"64.5886"},{"date":"2013/01/28","close":"64.2614","volume":"195771859.0000","open":"62.5464","high":"64.7443","low":"62.2657"},{"date":"2013/01/25","close":"62.8400","volume":"301617420.0000","open":"64.5271","high":"65.1757","low":"62.1428"},{"date":"2013/01/24","close":"64.3571","volume":"364459099.0000","open":"65.7143","high":"66.5328","low":"64.3214"},{"date":"2013/01/23","close":"73.4293","volume":"191090117.0000","open":"72.6871","high":"73.5700","low":"72.1100"},{"date":"2013/01/22","close":"72.1100","volume":"114745924.0000","open":"72.0800","high":"72.5543","low":"70.9471"},{"date":"2013/01/18","close":"71.4285","volume":"116987465.0000","open":"71.2166","high":"71.7457","low":"70.9143"},{"date":"2013/01/17","close":"71.8114","volume":"112900444.0000","open":"72.9014","high":"72.9643","low":"71.7185"},{"date":"2013/01/16","close":"72.2985","volume":"172393952.0000","open":"70.6628","high":"72.7771","low":"70.3571"},{"date":"2013/01/15","close":"69.4171","volume":"217802615.0000","open":"71.1857","high":"71.2843","low":"69.0543"},{"date":"2013/01/14","close":"71.6785","volume":"183021145.0000","open":"71.8114","high":"72.5000","low":"71.2157"},{"date":"2013/01/11","close":"74.3285","volume":"87569116.0000","open":"74.4285","high":"75.0457","low":"74.1457"},{"date":"2013/01/10","close":"74.7871","volume":"149986665.0000","open":"75.5071","high":"75.5314","low":"73.6457"},{"date":"2013/01/09","close":"73.8714","volume":"101748741.0000","open":"74.6428","high":"75.0007","low":"73.7128"},{"date":"2013/01/08","close":"75.0443","volume":"114451364.0000","open":"75.6014","high":"75.9843","low":"74.4643"},{"date":"2013/01/07","close":"74.8428","volume":"120838376.0000","open":"74.5714","high":"75.6143","low":"73.6000"},{"date":"2013/01/04","close":"75.2857","volume":"148374285.0000","open":"76.7093","high":"76.9471","low":"75.1183"},{"date":"2013/01/03","close":"77.4422","volume":"88054216.0000","open":"78.2685","high":"78.5243","low":"77.2857"},{"date":"2013/01/02","close":"78.4328","volume":"139906732.0000","open":"79.1171","high":"79.2857","low":"77.3757"},{"date":"2012/12/31","close":"76.0247","volume":"164519649.0000","open":"72.9328","high":"76.4857","low":"72.7143"},{"date":"2012/12/28","close":"72.7984","volume":"88117426.0000","open":"72.8985","high":"73.4971","low":"72.5885"},{"date":"2012/12/27","close":"73.5800","volume":"113575314.0000","open":"73.3628","high":"73.7500","low":"72.0943"},{"date":"2012/12/26","close":"73.2856","volume":"75475003.0000","open":"74.1428","high":"74.2085","low":"73.0171"},{"date":"2012/12/24","close":"74.3097","volume":"43936990.0000","open":"74.3357","high":"74.8928","low":"74.1014"},{"date":"2012/12/21","close":"74.1900","volume":"148609695.0000","open":"73.2100","high":"74.2385","low":"72.8914"},{"date":"2012/12/20","close":"74.5329","volume":"120153986.0000","open":"75.7143","high":"75.7428","low":"74.1257"},{"date":"2012/12/19","close":"75.1871","volume":"112061074.0000","open":"75.9243","high":"76.2428","low":"75.0714"},{"date":"2012/12/18","close":"76.2714","volume":"156143657.0000","open":"75.0000","high":"76.4143","low":"74.3214"},{"date":"2012/12/17","close":"74.1185","volume":"189181917.0000","open":"72.7043","high":"74.2857","low":"71.6043"},{"date":"2012/12/14","close":"72.8277","volume":"252115436.0000","open":"73.5357","high":"74.0188","low":"72.2257"},{"date":"2012/12/13","close":"75.6700","volume":"155971877.0000","open":"75.8785","high":"76.8057","low":"75.1143"},{"date":"2012/12/12","close":"77.0000","volume":"121630216.0000","open":"78.2528","high":"78.2857","low":"76.6100"},{"date":"2012/12/11","close":"77.3411","volume":"147820794.0000","open":"77.1100","high":"78.5085","low":"76.7671"},{"date":"2012/12/10","close":"75.6887","volume":"157477787.0000","open":"75.0000","high":"76.9300","low":"74.5114"},{"date":"2012/12/07","close":"76.1785","volume":"196603459.0000","open":"79.0571","high":"79.3143","low":"75.7143"},{"date":"2012/12/06","close":"78.1778","volume":"294065958.0000","open":"75.5628","high":"79.0443","low":"74.0900"},{"date":"2012/12/05","close":"76.9703","volume":"259803118.0000","open":"81.2728","high":"81.3214","low":"76.9671"},{"date":"2012/12/04","close":"82.2636","volume":"138712182.0000","open":"83.1143","high":"83.1143","low":"81.7328"},{"date":"2012/12/03","close":"83.7414","volume":"90911547.0000","open":"84.8071","high":"84.9414","low":"83.6428"},{"date":"2012/11/30","close":"83.6114","volume":"97622309.0000","open":"83.8271","high":"84.0571","low":"83.2400"},{"date":"2012/11/29","close":"84.1943","volume":"128394879.0000","open":"84.3164","high":"84.8928","low":"83.6071"},{"date":"2012/11/28","close":"83.2771","volume":"130112749.0000","open":"82.4671","high":"83.6857","low":"81.7514"},{"date":"2012/11/27","close":"83.5400","volume":"133099650.0000","open":"84.2214","high":"84.3457","low":"82.8714"},{"date":"2012/11/26","close":"84.2185","volume":"157238387.0000","open":"82.2714","high":"84.2857","low":"81.9585"},{"date":"2012/11/23","close":"81.6428","volume":"68206599.0000","open":"81.0243","high":"81.7143","low":"80.3714"},{"date":"2012/11/21","close":"80.2428","volume":"93231278.0000","open":"80.6071","high":"81.0528","low":"79.5143"},{"date":"2012/11/20","close":"80.1305","volume":"160537558.0000","open":"81.7014","high":"81.7071","low":"79.2257"},{"date":"2012/11/19","close":"80.8185","volume":"205441312.0000","open":"77.2443","high":"81.0714","low":"77.1257"},{"date":"2012/11/16","close":"75.3825","volume":"316194785.0000","open":"75.0285","high":"75.7143","low":"72.2500"},{"date":"2012/11/15","close":"75.0885","volume":"197157859.0000","open":"76.7900","high":"77.0714","low":"74.6600"},{"date":"2012/11/14","close":"76.6971","volume":"119026076.0000","open":"77.9285","high":"78.2071","low":"76.5971"},{"date":"2012/11/13","close":"77.5568","volume":"133201920.0000","open":"76.9871","high":"78.6400","low":"76.6228"},{"date":"2012/11/12","close":"77.5471","volume":"128801509.0000","open":"79.1643","high":"79.2143","low":"76.9500"},{"date":"2012/11/09","close":"78.1514","volume":"232298080.0000","open":"77.2028","high":"79.2685","low":"76.2457"},{"date":"2012/11/08","close":"76.8214","volume":"263467059.0000","open":"80.0900","high":"80.3185","low":"76.4700"},{"date":"2012/11/07","close":"79.7145","volume":"198152419.0000","open":"81.9764","high":"82.0771","low":"79.3928"},{"date":"2012/11/06","close":"83.2642","volume":"93580438.0000","open":"84.3185","high":"84.3914","low":"82.8700"},{"date":"2012/11/05","close":"83.5173","volume":"132221850.0000","open":"83.3593","high":"83.9671","low":"82.5143"},{"date":"2012/11/02","close":"82.4000","volume":"149722555.0000","open":"85.1271","high":"85.2785","low":"82.1071"},{"date":"2012/11/01","close":"85.2200","volume":"90287637.0000","open":"85.4600","high":"86.1428","low":"84.8814"},{"date":"2012/10/31","close":"85.0457","volume":"127361118.0000","open":"84.9828","high":"85.9943","low":"83.9571"},{"date":"2012/10/26","close":"86.2857","volume":"254608276.0000","open":"87.0614","high":"87.7143","low":"84.4285"},{"date":"2012/10/25","close":"87.0768","volume":"159313328.0000","open":"88.5714","high":"88.8571","low":"86.5071"},{"date":"2012/10/24","close":"88.1185","volume":"139246492.0000","open":"88.7771","high":"89.5071","low":"87.2343"},{"date":"2012/10/23","close":"87.6222","volume":"176497913.0000","open":"90.1428","high":"90.5571","low":"87.3857"},{"date":"2012/10/22","close":"90.5757","volume":"136374671.0000","open":"87.4885","high":"90.7685","low":"87.2514"},{"date":"2012/10/19","close":"87.1200","volume":"185618286.0000","open":"90.1500","high":"90.2528","low":"87.0885"},{"date":"2012/10/18","close":"90.3771","volume":"119025656.0000","open":"91.3700","high":"91.7228","low":"90.0000"},{"date":"2012/10/17","close":"92.0876","volume":"97195099.0000","open":"92.6957","high":"93.2557","low":"92.0000"},{"date":"2012/10/16","close":"92.8275","volume":"137208791.0000","open":"90.7671","high":"92.9000","low":"90.1428"},{"date":"2012/10/15","close":"90.6800","volume":"107948432.0000","open":"90.3357","high":"90.7328","low":"89.1214"},{"date":"2012/10/12","close":"89.9591","volume":"114883754.0000","open":"89.9371","high":"90.7685","low":"89.3285"},{"date":"2012/10/11","close":"89.7285","volume":"136341211.0000","open":"92.3571","high":"92.4571","low":"89.7285"},{"date":"2012/10/10","close":"91.5585","volume":"127322338.0000","open":"91.3914","high":"92.1400","low":"91.0000"},{"date":"2012/10/09","close":"90.8357","volume":"209390853.0000","open":"91.2357","high":"91.4985","low":"89.0785"},{"date":"2012/10/08","close":"91.1671","volume":"159189568.0000","open":"92.4114","high":"92.5085","low":"90.8728"},{"date":"2012/10/05","close":"93.2271","volume":"148189554.0000","open":"95.0285","high":"95.1428","low":"93.0400"},{"date":"2012/10/04","close":"95.2571","volume":"92516018.0000","open":"95.8928","high":"96.3214","low":"95.0785"},{"date":"2012/10/03","close":"95.9214","volume":"105850532.0000","open":"94.9800","high":"95.9800","low":"94.6614"},{"date":"2012/10/02","close":"94.4728","volume":"156293037.0000","open":"94.5443","high":"95.1928","low":"92.9500"},{"date":"2012/10/01","close":"94.1985","volume":"135694481.0000","open":"95.8800","high":"96.6785","low":"93.7857"},{"date":"2012/09/28","close":"95.3007","volume":"133569490.0000","open":"96.9643","high":"97.3014","low":"95.2500"},{"date":"2012/09/27","close":"97.3314","volume":"148037514.0000","open":"94.8985","high":"97.4528","low":"94.3357"},{"date":"2012/09/26","close":"95.0257","volume":"144088393.0000","open":"95.5343","high":"96.0985","low":"94.4571"},{"date":"2012/09/25","close":"96.2200","volume":"129376629.0000","open":"98.3228","high":"98.9685","low":"96.1428"},{"date":"2012/09/24","close":"98.6843","volume":"159435968.0000","open":"98.1228","high":"99.3028","low":"97.5714"},{"date":"2012/09/21","close":"100.0135","volume":"142582763.0000","open":"100.3443","high":"100.7243","low":"99.9088"},{"date":"2012/09/20","close":"99.8143","volume":"83949835.0000","open":"99.8800","high":"100.0085","low":"99.0885"},{"date":"2012/09/19","close":"100.3000","volume":"81575714.0000","open":"100.0371","high":"100.5700","low":"99.9385"},{"date":"2012/09/18","close":"100.2728","volume":"93139368.0000","open":"99.9828","high":"100.3328","low":"99.4885"},{"date":"2012/09/17","close":"99.9687","volume":"98918360.0000","open":"99.9071","high":"99.9714","low":"99.2300"},{"date":"2012/09/14","close":"98.7543","volume":"149877325.0000","open":"98.5650","high":"99.5685","low":"98.2700"},{"date":"2012/09/13","close":"97.5685","volume":"149262095.0000","open":"96.7671","high":"97.9285","low":"96.3957"},{"date":"2012/09/12","close":"95.6843","volume":"177589913.0000","open":"95.2643","high":"95.7000","low":"93.7143"},{"date":"2012/09/11","close":"94.3700","volume":"125760918.0000","open":"95.0157","high":"95.7285","low":"93.7857"},{"date":"2012/09/10","close":"94.6771","volume":"121551956.0000","open":"97.2071","high":"97.6128","low":"94.5857"},{"date":"2012/09/07","close":"97.2057","volume":"82228185.0000","open":"96.8643","high":"97.4971","low":"96.5385"},{"date":"2012/09/06","close":"96.6100","volume":"97738999.0000","open":"96.1671","high":"96.8985","low":"95.8285"},{"date":"2012/09/05","close":"95.7471","volume":"83949835.0000","open":"96.5100","high":"96.6214","low":"95.6571"},{"date":"2012/09/04","close":"96.4243","volume":"91805028.0000","open":"95.1085","high":"96.4485","low":"94.9285"},{"date":"2012/08/31","close":"95.0343","volume":"84463495.0000","open":"95.3214","high":"95.5143","low":"93.8928"},{"date":"2012/08/30","close":"94.8383","volume":"75514273.0000","open":"95.8057","high":"95.9363","low":"94.6933"},{"date":"2012/08/29","close":"96.2094","volume":"50544551.0000","open":"96.4643","high":"96.8100","low":"96.0857"},{"date":"2012/08/28","close":"96.4000","volume":"66709096.0000","open":"96.4253","high":"96.5857","low":"95.8104"},{"date":"2012/08/27","close":"96.5257","volume":"106575802.0000","open":"97.1414","high":"97.2671","low":"96.2200"},{"date":"2012/08/24","close":"94.7460","volume":"107074132.0000","open":"94.2157","high":"95.6400","low":"93.6500"},{"date":"2012/08/23","close":"94.6614","volume":"104855271.0000","open":"95.1585","high":"95.7000","low":"94.4500"},{"date":"2012/08/22","close":"95.5528","volume":"140900172.0000","open":"93.4885","high":"95.5714","low":"92.5871"},{"date":"2012/08/21","close":"93.7231","volume":"202792581.0000","open":"95.8314","high":"96.4114","low":"92.9043"},{"date":"2012/08/20","close":"95.0214","volume":"152992536.0000","open":"92.8585","high":"95.0214","low":"92.8428"},{"date":"2012/08/17","close":"92.5871","volume":"110457373.0000","open":"91.4285","high":"92.5985","low":"91.2585"},{"date":"2012/08/16","close":"90.9057","volume":"63601368.0000","open":"90.1728","high":"90.9657","low":"90.0714"},{"date":"2012/08/15","close":"90.1185","volume":"64307325.0000","open":"90.1857","high":"90.5714","low":"89.6785"},{"date":"2012/08/14","close":"90.2414","volume":"84939075.0000","open":"90.2671","high":"91.2300","low":"90.0300"},{"date":"2012/08/13","close":"90.0000","volume":"69562052.0000","open":"89.0557","high":"90.0000","low":"89.0357"},{"date":"2012/08/10","close":"88.8143","volume":"48726623.0000","open":"88.3871","high":"88.8228","low":"88.3857"},{"date":"2012/08/09","close":"88.6757","volume":"55081834.0000","open":"88.2643","high":"88.8185","low":"88.2571"},{"date":"2012/08/08","close":"88.5514","volume":"60970746.0000","open":"88.4843","high":"89.1257","low":"88.1571"},{"date":"2012/08/07","close":"88.7020","volume":"72558872.0000","open":"88.9671","high":"89.2857","low":"88.2914"},{"date":"2012/08/06","close":"88.9357","volume":"75488233.0000","open":"88.1843","high":"89.2668","low":"87.8943"},{"date":"2012/08/03","close":"87.9571","volume":"86083296.0000","open":"87.6614","high":"88.2828","low":"87.3657"},{"date":"2012/08/02","close":"86.8271","volume":"83023385.0000","open":"86.1200","high":"87.2414","low":"85.7500"},{"date":"2012/08/01","close":"86.6871","volume":"96002719.0000","open":"87.9864","high":"88.0571","low":"86.1428"},{"date":"2012/07/31","close":"87.2514","volume":"115373055.0000","open":"86.1757","high":"87.3857","low":"86.1028"},{"date":"2012/07/30","close":"85.0043","volume":"94626868.0000","open":"84.4171","high":"85.6343","low":"83.9743"},{"date":"2012/07/27","close":"83.5943","volume":"100956620.0000","open":"82.1443","high":"83.6900","low":"81.6557"},{"date":"2012/07/26","close":"82.1257","volume":"101611050.0000","open":"82.8228","high":"82.9143","low":"81.4800"},{"date":"2012/07/25","close":"82.1385","volume":"219211506.0000","open":"82.0657","high":"82.9714","low":"81.4285"},{"date":"2012/07/24","close":"85.8457","volume":"137351661.0000","open":"86.7685","high":"87.0971","low":"85.5014"},{"date":"2012/07/23","close":"86.2614","volume":"121642186.0000","open":"84.9143","high":"86.5571","low":"83.9585"},{"date":"2012/07/20","close":"86.3285","volume":"99227200.0000","open":"87.5757","high":"87.7771","low":"86.2428"},{"date":"2012/07/19","close":"87.7600","volume":"108981913.0000","open":"87.3257","high":"87.9071","low":"86.5714"},{"date":"2012/07/18","close":"86.6085","volume":"62685509.0000","open":"86.6557","high":"86.9057","low":"86.2228"},{"date":"2012/07/17","close":"86.7057","volume":"73378782.0000","open":"87.2557","high":"87.3571","low":"86.1643"},{"date":"2012/07/16","close":"86.7014","volume":"75263813.0000","open":"86.4457","high":"87.3743","low":"86.4314"},{"date":"2012/07/13","close":"86.4243","volume":"77827633.0000","open":"86.1357","high":"86.7414","low":"85.7143"},{"date":"2012/07/12","close":"85.5571","volume":"106873442.0000","open":"85.7485","high":"86.2100","low":"84.6685"},{"date":"2012/07/11","close":"86.3471","volume":"117068665.0000","open":"86.5885","high":"86.8085","low":"85.3171"},{"date":"2012/07/10","close":"86.8871","volume":"127763688.0000","open":"88.2814","high":"88.5528","low":"86.4728"},{"date":"2012/07/09","close":"87.6985","volume":"94701768.0000","open":"86.4714","high":"87.7000","low":"86.3014"},{"date":"2012/07/06","close":"86.5543","volume":"104693151.0000","open":"86.7271","high":"86.9200","low":"85.9400"},{"date":"2012/07/05","close":"87.1343","volume":"120978516.0000","open":"85.7943","high":"87.7628","low":"85.6643"},{"date":"2012/07/03","close":"85.6300","volume":"60428183.0000","open":"84.9828","high":"85.7143","low":"84.8571"},{"date":"2012/07/02","close":"84.6457","volume":"99806940.0000","open":"83.5328","high":"84.7814","low":"83.3714"},{"date":"2012/06/29","close":"83.4285","volume":"105131912.0000","open":"82.5714","high":"83.4285","low":"82.0357"},{"date":"2012/06/28","close":"81.2928","volume":"70572061.0000","open":"81.6671","high":"82.0000","low":"80.8014"},{"date":"2012/06/27","close":"82.0714","volume":"50737114.0000","open":"82.1428","high":"82.3914","low":"81.7028"},{"date":"2012/06/26","close":"81.7178","volume":"69124972.0000","open":"81.6185","high":"82.0700","low":"81.0471"},{"date":"2012/06/25","close":"81.5378","volume":"75963043.0000","open":"82.4714","high":"82.8285","low":"81.4814"},{"date":"2012/06/22","close":"83.1571","volume":"70792001.0000","open":"82.7200","high":"83.1700","low":"82.2028"},{"date":"2012/06/21","close":"82.5243","volume":"81511944.0000","open":"83.6343","high":"84.0314","low":"82.4914"},{"date":"2012/06/20","close":"83.6773","volume":"89706357.0000","open":"84.0300","high":"84.1785","low":"82.9714"},{"date":"2012/06/19","close":"83.9157","volume":"90239127.0000","open":"83.3428","high":"84.2857","low":"83.3000"},{"date":"2012/06/18","close":"83.6828","volume":"109922713.0000","open":"81.5657","high":"83.9843","low":"81.4814"},{"date":"2012/06/15","close":"82.0185","volume":"83596545.0000","open":"81.5714","high":"82.0885","low":"81.3643"},{"date":"2012/06/14","close":"81.6471","volume":"86325986.0000","open":"81.6057","high":"81.9285","low":"81.0371"},{"date":"2012/06/13","close":"81.7371","volume":"73380042.0000","open":"82.0743","high":"82.6400","low":"81.4828"},{"date":"2012/06/12","close":"82.3085","volume":"108784723.0000","open":"82.0657","high":"82.3743","low":"80.9571"},{"date":"2012/06/11","close":"81.5957","volume":"147605824.0000","open":"83.9600","high":"84.0714","low":"81.5185"},{"date":"2012/06/08","close":"82.9028","volume":"86587996.0000","open":"81.6571","high":"82.9405","low":"81.2857"},{"date":"2012/06/07","close":"81.6743","volume":"94916808.0000","open":"82.4700","high":"82.4743","low":"81.5000"},{"date":"2012/06/06","close":"81.6371","volume":"100135800.0000","open":"81.1100","high":"81.9785","low":"80.7857"},{"date":"2012/06/05","close":"80.4043","volume":"96944429.0000","open":"80.1814","high":"80.9243","low":"79.7614"},{"date":"2012/06/04","close":"80.6128","volume":"138991972.0000","open":"80.2143","high":"81.0714","low":"78.3571"},{"date":"2012/06/01","close":"80.1414","volume":"130080689.0000","open":"81.3085","high":"81.8071","low":"80.0743"},{"date":"2012/05/31","close":"82.5328","volume":"122817347.0000","open":"82.9628","high":"83.0714","low":"81.6371"},{"date":"2012/05/30","close":"82.7385","volume":"132188320.0000","open":"81.3143","high":"82.8557","low":"80.9371"},{"date":"2012/05/29","close":"81.7528","volume":"94973228.0000","open":"81.5571","high":"82.0000","low":"80.7585"},{"date":"2012/05/25","close":"80.3271","volume":"81958125.0000","open":"80.6557","high":"80.8357","low":"79.7817"},{"date":"2012/05/24","close":"80.7600","volume":"123856147.0000","open":"82.2671","high":"82.3571","low":"80.1757"},{"date":"2012/05/23","close":"81.5085","volume":"145594164.0000","open":"79.6428","high":"81.8285","low":"79.0328"},{"date":"2012/05/22","close":"79.5671","volume":"173417772.0000","open":"81.3643","high":"81.9828","low":"78.9400"},{"date":"2012/05/21","close":"80.1828","volume":"157250007.0000","open":"76.3571","high":"80.2200","low":"76.2928"},{"date":"2012/05/18","close":"75.7685","volume":"182773345.0000","open":"76.2800","high":"77.6300","low":"74.5971"},{"date":"2012/05/17","close":"75.7314","volume":"178603164.0000","open":"77.9014","high":"78.2143","low":"75.7314"},{"date":"2012/05/16","close":"78.0107","volume":"139914782.0000","open":"79.1500","high":"79.5557","low":"77.2914"},{"date":"2012/05/15","close":"79.0243","volume":"118859546.0000","open":"80.2071","high":"80.4600","low":"78.8214"},{"date":"2012/05/14","close":"79.7457","volume":"87975396.0000","open":"80.3671","high":"81.0728","low":"79.6571"},{"date":"2012/05/11","close":"80.9585","volume":"99653570.0000","open":"80.7143","high":"82.0671","low":"80.6214"},{"date":"2012/05/10","close":"81.5028","volume":"83026395.0000","open":"82.0828","high":"82.2685","low":"81.2058"},{"date":"2012/05/09","close":"81.3114","volume":"120022806.0000","open":"80.5285","high":"81.9968","low":"80.1214"},{"date":"2012/05/08","close":"81.1685","volume":"124080357.0000","open":"81.3685","high":"81.6428","low":"79.8185"},{"date":"2012/05/07","close":"81.3543","volume":"114959564.0000","open":"80.2143","high":"81.8243","low":"80.1757"},{"date":"2012/05/04","close":"80.7500","volume":"132304520.0000","open":"82.4400","high":"82.6228","low":"80.7385"},{"date":"2012/05/03","close":"83.1171","volume":"97380669.0000","open":"84.3571","high":"84.4857","low":"82.9000"},{"date":"2012/05/02","close":"83.7114","volume":"106750312.0000","open":"82.8914","high":"83.9142","low":"82.6943"},{"date":"2012/05/01","close":"83.1614","volume":"152492176.0000","open":"83.5571","high":"85.2514","low":"83.0328"},{"date":"2012/04/30","close":"83.4257","volume":"126321688.0000","open":"85.4000","high":"85.4857","low":"83.2857"},{"date":"2012/04/27","close":"86.1428","volume":"101533910.0000","open":"86.4385","high":"86.5971","low":"85.7857"},{"date":"2012/04/26","close":"86.8143","volume":"133588810.0000","open":"87.7528","high":"87.8128","low":"86.0185"},{"date":"2012/04/25","close":"87.1428","volume":"225862488.0000","open":"87.9478","high":"88.2857","low":"86.5714"},{"date":"2012/04/24","close":"80.0400","volume":"263552249.0000","open":"80.3728","high":"81.0985","low":"79.2857"},{"date":"2012/04/23","close":"81.6714","volume":"241398292.0000","open":"81.5157","high":"82.3814","low":"79.5171"},{"date":"2012/04/20","close":"81.8543","volume":"257480867.0000","open":"84.4828","high":"84.9457","low":"81.4885"},{"date":"2012/04/19","close":"83.9200","volume":"208302982.0000","open":"85.7457","high":"86.3903","low":"83.5028"},{"date":"2012/04/18","close":"86.9057","volume":"238277411.0000","open":"87.6743","high":"88.6071","low":"86.1014"},{"date":"2012/04/17","close":"87.1000","volume":"255328647.0000","open":"82.7057","high":"87.1428","low":"81.7014"},{"date":"2012/04/16","close":"82.8757","volume":"262356159.0000","open":"87.1514","high":"87.1828","low":"82.6071"},{"date":"2012/04/13","close":"86.4614","volume":"214640084.0000","open":"89.1585","high":"89.2428","low":"86.2157"},{"date":"2012/04/12","close":"88.9671","volume":"153188746.0000","open":"89.2857","high":"90.1900","low":"88.6428"},{"date":"2012/04/11","close":"89.4571","volume":"173844142.0000","open":"90.8857","high":"90.9814","low":"89.0489"},{"date":"2012/04/10","close":"89.7771","volume":"221909237.0000","open":"91.4185","high":"92.0000","low":"89.4285"},{"date":"2012/04/09","close":"90.8900","volume":"149052655.0000","open":"89.4471","high":"91.4057","low":"89.3285"},{"date":"2012/04/05","close":"90.5257","volume":"159997578.0000","open":"89.5685","high":"90.6657","low":"89.0571"},{"date":"2012/04/04","close":"89.1871","volume":"142980433.0000","open":"89.1928","high":"89.4085","low":"88.1428"},{"date":"2012/04/03","close":"89.9028","volume":"208117692.0000","open":"89.6143","high":"90.3157","low":"88.9300"},{"date":"2012/04/02","close":"88.3757","volume":"149091365.0000","open":"85.9757","high":"88.3957","low":"85.7685"},{"date":"2012/03/30","close":"85.6500","volume":"182067395.0000","open":"86.9671","high":"87.2228","low":"85.4200"},{"date":"2012/03/29","close":"87.1228","volume":"151111705.0000","open":"87.5400","high":"88.0800","low":"86.7471"},{"date":"2012/03/28","close":"88.2314","volume":"163667329.0000","open":"88.3400","high":"88.7785","low":"87.1871"},{"date":"2012/03/27","close":"87.7828","volume":"151353625.0000","open":"86.5971","high":"88.0400","low":"86.5800"},{"date":"2012/03/26","close":"86.7114","volume":"148719035.0000","open":"85.6843","high":"86.7357","low":"85.0371"},{"date":"2012/03/23","close":"85.1500","volume":"107403062.0000","open":"85.7843","high":"85.9714","low":"84.9144"},{"date":"2012/03/22","close":"85.6200","volume":"155867437.0000","open":"85.3971","high":"86.3571","low":"85.0757"},{"date":"2012/03/21","close":"86.0714","volume":"160447118.0000","open":"86.1057","high":"87.0928","low":"85.9157"},{"date":"2012/03/20","close":"86.5657","volume":"203497481.0000","open":"85.6443","high":"86.7000","low":"83.1428"},{"date":"2012/03/19","close":"85.8714","volume":"224435817.0000","open":"85.4814","high":"85.9671","low":"84.1500"},{"date":"2012/03/16","close":"83.6528","volume":"206076492.0000","open":"83.5314","high":"84.1714","low":"82.5714"},{"date":"2012/03/15","close":"83.6514","volume":"289496777.0000","open":"85.6585","high":"85.7157","low":"82.6500"},{"date":"2012/03/14","close":"84.2257","volume":"353599156.0000","open":"82.5785","high":"84.9600","low":"82.2000"},{"date":"2012/03/13","close":"81.1571","volume":"172173592.0000","open":"79.6485","high":"81.1685","low":"79.3928"},{"date":"2012/03/12","close":"78.8571","volume":"101001000.0000","open":"78.4260","high":"78.8571","low":"78.1428"},{"date":"2012/03/09","close":"77.8814","volume":"104560151.0000","open":"77.7443","high":"78.2485","low":"77.5871"},{"date":"2012/03/08","close":"77.4271","volume":"128668929.0000","open":"76.3843","high":"77.5700","low":"76.0171"},{"date":"2012/03/07","close":"75.8128","volume":"198964910.0000","open":"76.6857","high":"76.8257","low":"74.7571"},{"date":"2012/03/06","close":"75.7514","volume":"202211301.0000","open":"74.8085","high":"76.2414","low":"73.7458"},{"date":"2012/03/05","close":"76.1657","volume":"201797181.0000","open":"77.9171","high":"78.2114","low":"75.1428"},{"date":"2012/03/02","close":"77.8828","volume":"107544392.0000","open":"77.7485","high":"78.1143","low":"77.5028"},{"date":"2012/03/01","close":"77.7814","volume":"170563731.0000","open":"78.3100","high":"78.3157","low":"76.9671"},{"date":"2012/02/29","close":"77.4914","volume":"237448891.0000","open":"77.3657","high":"78.2300","low":"76.5285"},{"date":"2012/02/28","close":"76.4871","volume":"149434575.0000","open":"75.4228","high":"76.4871","low":"75.1214"},{"date":"2012/02/27","close":"75.1085","volume":"136457481.0000","open":"74.4728","high":"75.5000","low":"73.7543"},{"date":"2012/02/24","close":"74.6300","volume":"103715531.0000","open":"74.2385","high":"74.7000","low":"74.0914"},{"date":"2012/02/23","close":"73.7700","volume":"141721973.0000","open":"73.5828","high":"73.9756","low":"72.7857"},{"date":"2012/02/22","close":"73.2914","volume":"120564116.0000","open":"73.2971","high":"73.6414","low":"72.7243"},{"date":"2012/02/21","close":"73.5500","volume":"150412545.0000","open":"72.4114","high":"73.5500","low":"72.0171"},{"date":"2012/02/17","close":"71.7314","volume":"133666300.0000","open":"71.8728","high":"72.5385","low":"71.4714"},{"date":"2012/02/16","close":"71.7443","volume":"235805641.0000","open":"70.2143","high":"72.1271","low":"69.5186"},{"date":"2012/02/15","close":"71.0957","volume":"374517892.0000","open":"73.4657","high":"75.1843","low":"70.9843"},{"date":"2012/02/14","close":"72.7800","volume":"114963904.0000","open":"72.0943","high":"72.7943","low":"71.7143"},{"date":"2012/02/13","close":"71.8000","volume":"128970559.0000","open":"71.3614","high":"71.9757","low":"71.0128"},{"date":"2012/02/10","close":"70.4886","volume":"157587127.0000","open":"70.1371","high":"71.0886","low":"69.7928"},{"date":"2012/02/09","close":"70.4528","volume":"220416976.0000","open":"68.6800","high":"70.9643","low":"68.6514"},{"date":"2012/02/08","close":"68.0971","volume":"101696381.0000","open":"67.2143","high":"68.1128","low":"67.1000"},{"date":"2012/02/07","close":"66.9757","volume":"78941684.0000","open":"66.4643","high":"67.1071","low":"66.3687"},{"date":"2012/02/06","close":"66.2814","volume":"62225658.0000","open":"65.4828","high":"66.4257","low":"65.4573"},{"date":"2012/02/03","close":"65.6686","volume":"71618981.0000","open":"65.3286","high":"65.7143","low":"65.0800"},{"date":"2012/02/02","close":"65.0171","volume":"46615058.0000","open":"65.1286","high":"65.3100","low":"64.8543"},{"date":"2012/02/01","close":"65.1700","volume":"67269418.0000","open":"65.4871","high":"65.5700","low":"65.0786"},{"date":"2012/01/31","close":"65.2114","volume":"97874379.0000","open":"65.0843","high":"65.4628","low":"64.7243"},{"date":"2012/01/30","close":"64.7157","volume":"94626868.0000","open":"63.6728","high":"64.8428","low":"63.6271"},{"date":"2012/01/27","close":"63.8971","volume":"74902122.0000","open":"63.4771","high":"64.0686","low":"63.3957"},{"date":"2012/01/26","close":"63.5186","volume":"80913094.0000","open":"64.0514","high":"64.1128","low":"63.3057"},{"date":"2012/01/25","close":"63.8086","volume":"239249712.0000","open":"64.9200","high":"64.9214","low":"63.3900"},{"date":"2012/01/24","close":"60.0586","volume":"127725188.0000","open":"60.7286","high":"60.7286","low":"59.9357"},{"date":"2012/01/23","close":"61.0584","volume":"76162193.0000","open":"60.3814","high":"61.2071","low":"60.3286"},{"date":"2012/01/20","close":"60.0428","volume":"103061661.0000","open":"61.0700","high":"61.0714","low":"59.9643"},{"date":"2012/01/19","close":"61.1071","volume":"65151043.0000","open":"61.4500","high":"61.6241","low":"60.9300"},{"date":"2012/01/18","close":"61.3014","volume":"68859875.0000","open":"60.9943","high":"61.3528","low":"60.9000"},{"date":"2012/01/17","close":"60.6714","volume":"60589792.0000","open":"60.6000","high":"60.8557","low":"60.4228"},{"date":"2012/01/13","close":"59.9728","volume":"56446393.0000","open":"59.9571","high":"60.0643","low":"59.8086"},{"date":"2012/01/12","close":"60.1986","volume":"53125179.0000","open":"60.3257","high":"60.4143","low":"59.8214"},{"date":"2012/01/11","close":"60.3643","volume":"53739093.0000","open":"60.3828","high":"60.4071","low":"59.9014"},{"date":"2012/01/10","close":"60.4628","volume":"64474443.0000","open":"60.8443","high":"60.8571","low":"60.2143"},{"date":"2012/01/09","close":"60.2471","volume":"98339110.0000","open":"60.7857","high":"61.1071","low":"60.1928"},{"date":"2012/01/06","close":"60.3428","volume":"79538994.0000","open":"59.9671","high":"60.3928","low":"59.8886"},{"date":"2012/01/05","close":"59.7186","volume":"67606475.0000","open":"59.2786","high":"59.7928","low":"58.9528"},{"date":"2012/01/04","close":"59.0628","volume":"64703000.0000","open":"58.5714","high":"59.2400","low":"58.4686"},{"date":"2012/01/03","close":"58.7471","volume":"75476123.0000","open":"58.4857","high":"58.9286","low":"58.4286"},{"date":"2011/12/30","close":"57.8571","volume":"44900596.0000","open":"57.6443","high":"58.0400","low":"57.6414"},{"date":"2011/12/29","close":"57.8743","volume":"53774275.0000","open":"57.6286","high":"57.9500","low":"57.2157"},{"date":"2011/12/28","close":"57.5200","volume":"57101943.0000","open":"58.1271","high":"58.3214","low":"57.3343"},{"date":"2011/12/27","close":"58.0757","volume":"66234181.0000","open":"57.5857","high":"58.4414","low":"57.5743"},{"date":"2011/12/23","close":"57.6186","volume":"67331438.0000","open":"57.0986","high":"57.6557","low":"57.0707"},{"date":"2011/12/22","close":"56.9357","volume":"50399476.0000","open":"56.7143","high":"57.0186","low":"56.5857"},{"date":"2011/12/21","close":"56.6350","volume":"65476620.0000","open":"56.6700","high":"56.7571","low":"56.0014"},{"date":"2011/12/20","close":"56.5643","volume":"84150665.0000","open":"55.3943","high":"56.5857","low":"55.3228"},{"date":"2011/12/19","close":"54.6014","volume":"58582206.0000","open":"54.6386","high":"54.9786","low":"54.3543"},{"date":"2011/12/16","close":"54.4314","volume":"105291372.0000","open":"54.3371","high":"54.8786","low":"54.2243"},{"date":"2011/12/15","close":"54.1343","volume":"64036768.0000","open":"54.7614","high":"54.8200","low":"54.0443"},{"date":"2011/12/14","close":"54.3128","volume":"101456840.0000","open":"55.2428","high":"55.3400","low":"53.9543"},{"date":"2011/12/13","close":"55.5443","volume":"84620155.0000","open":"56.1428","high":"56.4857","low":"55.3000"},{"date":"2011/12/12","close":"55.9771","volume":"74755332.0000","open":"55.9543","high":"56.2714","low":"55.6357"},{"date":"2011/12/09","close":"56.2314","volume":"74176572.0000","open":"56.1214","high":"56.2914","low":"55.8614"},{"date":"2011/12/08","close":"55.8086","volume":"93960468.0000","open":"55.9214","high":"56.5000","low":"55.7471"},{"date":"2011/12/07","close":"55.5843","volume":"76144063.0000","open":"55.7043","high":"55.8486","low":"55.2518"},{"date":"2011/12/06","close":"55.8500","volume":"70841701.0000","open":"56.0728","high":"56.3757","low":"55.6257"},{"date":"2011/12/05","close":"56.1443","volume":"89257027.0000","open":"56.2128","high":"56.6300","low":"55.7697"},{"date":"2011/12/02","close":"55.6714","volume":"94724238.0000","open":"55.6900","high":"56.2328","low":"55.5114"},{"date":"2011/12/01","close":"55.4186","volume":"95857679.0000","open":"54.6486","high":"55.5714","low":"54.3928"},{"date":"2011/11/30","close":"54.6000","volume":"101253000.0000","open":"54.4700","high":"54.6108","low":"54.0428"},{"date":"2011/11/29","close":"53.3143","volume":"93871498.0000","open":"53.6914","high":"54.1186","low":"52.8857"},{"date":"2011/11/28","close":"53.7314","volume":"86538996.0000","open":"53.1928","high":"53.8171","low":"52.9043"},{"date":"2011/11/25","close":"51.9386","volume":"63689820.0000","open":"52.6314","high":"53.0214","low":"51.9028"},{"date":"2011/11/23","close":"52.4271","volume":"107011272.0000","open":"53.5014","high":"53.6914","low":"52.4114"},{"date":"2011/11/22","close":"53.7871","volume":"102201781.0000","open":"53.0028","high":"53.9900","low":"52.9914"},{"date":"2011/11/21","close":"52.7157","volume":"111837844.0000","open":"52.9143","high":"53.0971","low":"52.2728"},{"date":"2011/11/18","close":"53.5628","volume":"92964578.0000","open":"54.1314","high":"54.2843","low":"53.5543"},{"date":"2011/11/17","close":"53.9157","volume":"119918436.0000","open":"54.8543","high":"54.9400","low":"53.6428"},{"date":"2011/11/16","close":"54.9671","volume":"87102636.0000","open":"55.6071","high":"55.8771","low":"54.9028"},{"date":"2011/11/15","close":"55.5471","volume":"107614952.0000","open":"54.4000","high":"55.6428","low":"54.2071"},{"date":"2011/11/14","close":"54.1800","volume":"108182162.0000","open":"54.7886","high":"55.0357","low":"54.0286"},{"date":"2011/11/11","close":"54.9457","volume":"163319499.0000","open":"55.2300","high":"55.5286","low":"54.3228"},{"date":"2011/11/10","close":"55.0314","volume":"186111226.0000","open":"56.7186","high":"56.7443","low":"54.5928"},{"date":"2011/11/09","close":"56.4686","volume":"139385792.0000","open":"56.7100","high":"57.2700","low":"56.3186"},{"date":"2011/11/08","close":"58.0328","volume":"99898290.0000","open":"57.4586","high":"58.2857","low":"57.3657"},{"date":"2011/11/07","close":"57.1043","volume":"67411392.0000","open":"57.1300","high":"57.1428","low":"56.5900"},{"date":"2011/11/04","close":"57.1771","volume":"75324993.0000","open":"57.4328","high":"57.6343","low":"57.0228"},{"date":"2011/11/03","close":"57.5814","volume":"110279293.0000","open":"57.0100","high":"57.6286","low":"56.4800"},{"date":"2011/11/02","close":"56.7728","volume":"81719705.0000","open":"57.1557","high":"57.2057","low":"56.4443"},{"date":"2011/11/01","close":"56.6443","volume":"132769740.0000","open":"56.7728","high":"57.0714","low":"56.1743"},{"date":"2011/10/31","close":"57.8257","volume":"96335779.0000","open":"57.4886","high":"58.4757","low":"57.2928"},{"date":"2011/10/28","close":"57.8500","volume":"80540134.0000","open":"57.5714","high":"58.0500","low":"57.5014"},{"date":"2011/10/27","close":"57.8128","volume":"123496347.0000","open":"58.2228","high":"58.4286","low":"57.4128"},{"date":"2011/10/26","close":"57.2286","volume":"113884784.0000","open":"57.3943","high":"57.5071","low":"56.1644"},{"date":"2011/10/25","close":"56.8243","volume":"107432952.0000","open":"57.8614","high":"58.0786","low":"56.7686"},{"date":"2011/10/24","close":"57.9671","volume":"125430938.0000","open":"56.5971","high":"58.0714","low":"56.4857"},{"date":"2011/10/21","close":"56.1243","volume":"154943506.0000","open":"56.8714","high":"57.0200","low":"55.8214"},{"date":"2011/10/20","close":"56.4728","volume":"137224191.0000","open":"57.1428","high":"57.1928","low":"56.3157"},{"date":"2011/10/19","close":"56.9457","volume":"275674643.0000","open":"57.3357","high":"58.3456","low":"56.8286"},{"date":"2011/10/18","close":"60.3200","volume":"213231124.0000","open":"60.2514","high":"60.6867","low":"59.4271"},{"date":"2011/10/17","close":"59.9986","volume":"171172941.0000","open":"60.2486","high":"60.9571","low":"59.4200"},{"date":"2011/10/14","close":"60.2857","volume":"142922473.0000","open":"59.5471","high":"60.2857","low":"59.3243"},{"date":"2011/10/13","close":"58.3471","volume":"105774372.0000","open":"57.8543","high":"58.3471","low":"57.5500"},{"date":"2011/10/12","close":"57.4557","volume":"155337537.0000","open":"58.1914","high":"58.4643","low":"57.1628"},{"date":"2011/10/11","close":"57.1843","volume":"151188005.0000","open":"56.0814","high":"57.5971","low":"55.9286"},{"date":"2011/10/10","close":"55.5443","volume":"110141043.0000","open":"54.1557","high":"55.5443","low":"54.0300"},{"date":"2011/10/07","close":"52.8286","volume":"133849140.0000","open":"53.6828","high":"53.9628","low":"52.6413"},{"date":"2011/10/06","close":"53.9100","volume":"202875671.0000","open":"53.3328","high":"54.9686","low":"53.1149"},{"date":"2011/10/05","close":"54.0357","volume":"196160359.0000","open":"52.5514","high":"54.2600","low":"51.4714"},{"date":"2011/10/04","close":"53.2143","volume":"308080802.0000","open":"53.5100","high":"54.5428","low":"50.6057"},{"date":"2011/10/03","close":"53.5143","volume":"166972660.0000","open":"54.3386","high":"54.6628","low":"53.3101"},{"date":"2011/09/30","close":"54.4743","volume":"136874891.0000","open":"55.3028","high":"55.5557","low":"54.4543"},{"date":"2011/09/29","close":"55.7957","volume":"162647149.0000","open":"57.4171","high":"57.4586","low":"55.1728"},{"date":"2011/09/28","close":"56.7157","volume":"107310242.0000","open":"57.1700","high":"57.6771","low":"56.6443"},{"date":"2011/09/27","close":"57.0371","volume":"157716487.0000","open":"58.3900","high":"58.4643","low":"56.8657"},{"date":"2011/09/26","close":"57.5957","volume":"203032191.0000","open":"57.1228","high":"57.7114","low":"55.9000"},{"date":"2011/09/23","close":"57.7571","volume":"136487861.0000","open":"57.1828","high":"58.1057","low":"57.1214"},{"date":"2011/09/22","close":"57.4028","volume":"241788403.0000","open":"57.2900","high":"58.5457","low":"56.6714"},{"date":"2011/09/21","close":"58.8771","volume":"150996555.0000","open":"59.9486","high":"60.2271","low":"58.8571"},{"date":"2011/09/20","close":"59.0643","volume":"193493638.0000","open":"59.3214","high":"60.4086","low":"58.7414"},{"date":"2011/09/19","close":"58.8043","volume":"205318042.0000","open":"56.7143","high":"59.0328","low":"56.4578"},{"date":"2011/09/16","close":"57.2143","volume":"173859192.0000","open":"56.5057","high":"57.2147","low":"56.4328"},{"date":"2011/09/15","close":"56.1371","volume":"103610951.0000","open":"55.9186","high":"56.2371","low":"55.7000"},{"date":"2011/09/14","close":"55.6143","volume":"133540370.0000","open":"55.2886","high":"56.0300","low":"55.1086"},{"date":"2011/09/13","close":"54.9457","volume":"110052633.0000","open":"54.5914","high":"55.1728","low":"54.3214"},{"date":"2011/09/12","close":"54.2771","volume":"116765635.0000","open":"53.2857","high":"54.4114","low":"53.1286"},{"date":"2011/09/09","close":"53.9257","volume":"141166172.0000","open":"54.8471","high":"55.1428","low":"53.5743"},{"date":"2011/09/08","close":"54.8771","volume":"103837961.0000","open":"54.6286","high":"55.5157","low":"54.6157"},{"date":"2011/09/07","close":"54.8471","volume":"87373746.0000","open":"55.0800","high":"55.0857","low":"54.5714"},{"date":"2011/09/06","close":"54.2486","volume":"127132428.0000","open":"52.4814","high":"54.3328","low":"52.3543"},{"date":"2011/09/02","close":"53.4357","volume":"109691503.0000","open":"53.5343","high":"54.0000","low":"53.1186"},{"date":"2011/09/01","close":"54.4328","volume":"85770886.0000","open":"55.1171","high":"55.3343","low":"54.3886"},{"date":"2011/08/31","close":"54.9757","volume":"130506429.0000","open":"55.7957","high":"56.0114","low":"54.5514"},{"date":"2011/08/30","close":"55.7128","volume":"104308921.0000","open":"55.4643","high":"55.9771","low":"55.1728"},{"date":"2011/08/29","close":"55.7100","volume":"101134490.0000","open":"55.4543","high":"55.9286","low":"55.4286"},{"date":"2011/08/26","close":"54.7971","volume":"160158018.0000","open":"53.0243","high":"54.8286","low":"52.9715"},{"date":"2011/08/25","close":"53.3886","volume":"217625305.0000","open":"52.1543","high":"53.6357","low":"52.1428"},{"date":"2011/08/24","close":"53.7400","volume":"146323144.0000","open":"53.3528","high":"54.1371","low":"52.9428"},{"date":"2011/08/23","close":"53.3714","volume":"163954819.0000","open":"51.4714","high":"53.3771","low":"51.0000"},{"date":"2011/08/22","close":"50.9200","volume":"133633050.0000","open":"52.0728","high":"52.1257","low":"50.7271"},{"date":"2011/08/19","close":"50.8614","volume":"193669478.0000","open":"51.7386","high":"52.4286","low":"50.8571"},{"date":"2011/08/18","close":"52.2928","volume":"212521674.0000","open":"52.9771","high":"53.2357","low":"51.6243"},{"date":"2011/08/17","close":"54.3486","volume":"110099393.0000","open":"54.6157","high":"54.9314","low":"54.0000"},{"date":"2011/08/16","close":"54.3543","volume":"124617257.0000","open":"54.5028","high":"54.7671","low":"53.7228"},{"date":"2011/08/15","close":"54.7728","volume":"114931004.0000","open":"54.2328","high":"54.9957","low":"54.0128"},{"date":"2011/08/12","close":"53.8557","volume":"132123640.0000","open":"54.0100","high":"54.2343","low":"53.4614"},{"date":"2011/08/11","close":"53.3857","volume":"185283336.0000","open":"52.9314","high":"53.6357","low":"52.1028"},{"date":"2011/08/10","close":"51.9557","volume":"219333726.0000","open":"53.0214","high":"53.5214","low":"51.7857"},{"date":"2011/08/09","close":"53.4300","volume":"270036491.0000","open":"51.6143","high":"53.5157","low":"50.7143"},{"date":"2011/08/08","close":"50.4586","volume":"284991925.0000","open":"51.6700","high":"52.5386","low":"50.4314"},{"date":"2011/08/05","close":"53.3743","volume":"300872480.0000","open":"54.3486","high":"54.7857","low":"51.7957"},{"date":"2011/08/04","close":"53.9100","volume":"217337675.0000","open":"55.6300","high":"55.9028","low":"53.9071"},{"date":"2011/08/03","close":"56.0814","volume":"184655855.0000","open":"55.8543","high":"56.2214","low":"54.6057"},{"date":"2011/08/02","close":"55.5586","volume":"159570018.0000","open":"56.8071","high":"56.8428","low":"55.4786"},{"date":"2011/08/01","close":"56.6786","volume":"152529696.0000","open":"56.8257","high":"57.0714","low":"56.0528"},{"date":"2011/07/29","close":"55.7828","volume":"157856347.0000","open":"55.3771","high":"56.4500","low":"54.8571"},{"date":"2011/07/28","close":"55.9743","volume":"148241774.0000","open":"55.9457","high":"56.7128","low":"55.4471"},{"date":"2011/07/27","close":"56.0843","volume":"164365019.0000","open":"57.2271","high":"57.5200","low":"56.0214"},{"date":"2011/07/26","close":"57.6300","volume":"118968676.0000","open":"57.1428","high":"57.7857","low":"57.0971"},{"date":"2011/07/25","close":"56.9286","volume":"147129404.0000","open":"55.7643","high":"57.1428","low":"55.6600"},{"date":"2011/07/22","close":"56.1857","volume":"128609149.0000","open":"55.4743","high":"56.4357","low":"55.3928"},{"date":"2011/07/21","close":"55.3271","volume":"131469069.0000","open":"55.2786","high":"55.7228","low":"54.8428"},{"date":"2011/07/20","close":"55.2714","volume":"234799250.0000","open":"56.5886","high":"56.6100","low":"55.1428"},{"date":"2011/07/19","close":"53.8357","volume":"198837160.0000","open":"54.0000","high":"54.0928","low":"53.3314"},{"date":"2011/07/18","close":"53.4000","volume":"142687483.0000","open":"52.2043","high":"53.5214","low":"52.1828"},{"date":"2011/07/15","close":"52.1314","volume":"120737646.0000","open":"51.5957","high":"52.1428","low":"51.3100"},{"date":"2011/07/14","close":"51.1100","volume":"107130272.0000","open":"51.5728","high":"51.6586","low":"50.9057"},{"date":"2011/07/13","close":"51.1457","volume":"97557419.0000","open":"51.1900","high":"51.4286","low":"50.9114"},{"date":"2011/07/12","close":"50.5357","volume":"112716764.0000","open":"50.5043","high":"51.0971","low":"49.8028"},{"date":"2011/07/11","close":"50.5714","volume":"110366513.0000","open":"50.9057","high":"51.3957","low":"50.4028"},{"date":"2011/07/08","close":"51.3871","volume":"122332877.0000","open":"50.4771","high":"51.4286","low":"50.3143"},{"date":"2011/07/07","close":"51.0286","volume":"99596520.0000","open":"50.6671","high":"51.1428","low":"50.5714"},{"date":"2011/07/06","close":"50.2514","volume":"110994483.0000","open":"49.8500","high":"50.5857","low":"49.5300"},{"date":"2011/07/05","close":"49.9186","volume":"88675467.0000","open":"49.0000","high":"49.9757","low":"48.9286"},{"date":"2011/07/01","close":"49.0371","volume":"109926493.0000","open":"47.9928","high":"49.0714","low":"47.7428"},{"date":"2011/06/30","close":"47.9528","volume":"80686784.0000","open":"47.8143","high":"48.0186","low":"47.5486"},{"date":"2011/06/29","close":"47.7200","volume":"88123516.0000","open":"48.0057","high":"48.0528","low":"47.4114"},{"date":"2011/06/28","close":"47.8943","volume":"73368002.0000","open":"47.6643","high":"48.1000","low":"47.6343"},{"date":"2011/06/27","close":"47.4343","volume":"84812375.0000","open":"46.7986","high":"47.7000","low":"46.7500"},{"date":"2011/06/24","close":"46.6214","volume":"109887573.0000","open":"47.3386","high":"47.5928","low":"46.4414"},{"date":"2011/06/23","close":"47.3186","volume":"139572412.0000","open":"45.5628","high":"47.3843","low":"45.4457"},{"date":"2011/06/22","close":"46.0871","volume":"97468589.0000","open":"46.4514","high":"46.9857","low":"46.0543"},{"date":"2011/06/21","close":"46.4714","volume":"123112957.0000","open":"45.2400","high":"46.5428","low":"45.0286"},{"date":"2011/06/20","close":"45.0457","volume":"159899088.0000","open":"45.3364","high":"45.3857","low":"44.3571"},{"date":"2011/06/17","close":"45.7514","volume":"153715076.0000","open":"46.9986","high":"47.0357","low":"45.6228"},{"date":"2011/06/16","close":"46.4514","volume":"126824918.0000","open":"46.7000","high":"46.9544","low":"45.4757"},{"date":"2011/06/15","close":"46.6786","volume":"98960500.0000","open":"47.1071","high":"47.1857","low":"46.4114"},{"date":"2011/06/14","close":"47.4914","volume":"83499035.0000","open":"47.1428","high":"47.6071","low":"47.0443"},{"date":"2011/06/13","close":"46.6571","volume":"82344175.0000","open":"46.7428","high":"46.9014","low":"46.4386"},{"date":"2011/06/10","close":"46.5571","volume":"108450403.0000","open":"47.2214","high":"47.3800","low":"46.5014"},{"date":"2011/06/09","close":"47.3557","volume":"68737284.0000","open":"47.6071","high":"47.6671","low":"47.2500"},{"date":"2011/06/08","close":"47.4628","volume":"83311015.0000","open":"47.3971","high":"47.8286","low":"47.2357"},{"date":"2011/06/07","close":"47.4343","volume":"132345680.0000","open":"48.3100","high":"48.3171","low":"47.4143"},{"date":"2011/06/06","close":"48.2914","volume":"115190075.0000","open":"49.3857","high":"49.5786","low":"48.2586"},{"date":"2011/06/03","close":"49.0628","volume":"77951813.0000","open":"49.0257","high":"49.3328","low":"48.8586"},{"date":"2011/06/02","close":"49.4431","volume":"84669645.0000","open":"49.5000","high":"49.7114","low":"49.1857"},{"date":"2011/06/01","close":"49.3586","volume":"138299601.0000","open":"49.8386","high":"50.3046","low":"49.2357"},{"date":"2011/05/31","close":"49.6900","volume":"104084431.0000","open":"48.7286","high":"49.6900","low":"48.7143"},{"date":"2011/05/27","close":"48.2014","volume":"50882462.0000","open":"47.8286","high":"48.2328","low":"47.7586"},{"date":"2011/05/26","close":"47.8571","volume":"55623739.0000","open":"47.9957","high":"48.1271","low":"47.7764"},{"date":"2011/05/25","close":"48.1114","volume":"73437442.0000","open":"47.6328","high":"48.3657","low":"47.5500"},{"date":"2011/05/24","close":"47.4557","volume":"80444934.0000","open":"47.9286","high":"47.9856","low":"47.3343"},{"date":"2011/05/23","close":"47.7714","volume":"95541069.0000","open":"47.1386","high":"47.9971","low":"47.0600"},{"date":"2011/05/20","close":"47.8886","volume":"84476515.0000","open":"48.5086","high":"48.7071","low":"47.8600"},{"date":"2011/05/19","close":"48.6471","volume":"65148271.0000","open":"48.8686","high":"48.9163","low":"48.3814"},{"date":"2011/05/18","close":"48.5528","volume":"83511355.0000","open":"48.0671","high":"48.7214","low":"48.0000"},{"date":"2011/05/17","close":"48.0200","volume":"113030224.0000","open":"47.4286","high":"48.0200","low":"47.2471"},{"date":"2011/05/16","close":"47.6143","volume":"112334984.0000","open":"48.4571","high":"48.7457","low":"47.5143"},{"date":"2011/05/13","close":"48.6428","volume":"81443694.0000","open":"49.3800","high":"49.4643","low":"48.6214"},{"date":"2011/05/12","close":"49.5100","volume":"79915454.0000","open":"49.4457","high":"49.5886","low":"48.8957"},{"date":"2011/05/11","close":"49.6043","volume":"83509605.0000","open":"49.8600","high":"50.0000","low":"49.3200"},{"date":"2011/05/10","close":"49.9214","volume":"71227611.0000","open":"49.8414","high":"49.9557","low":"49.5228"},{"date":"2011/05/09","close":"49.6571","volume":"51143653.0000","open":"49.6943","high":"49.8857","low":"49.5039"},{"date":"2011/05/06","close":"49.5228","volume":"69991117.0000","open":"49.9557","high":"50.0000","low":"49.4586"},{"date":"2011/05/05","close":"49.5357","volume":"83850155.0000","open":"49.7714","high":"50.1357","low":"49.4357"},{"date":"2011/05/04","close":"49.9386","volume":"97622099.0000","open":"49.7514","high":"50.2614","low":"49.5543"},{"date":"2011/05/03","close":"49.7428","volume":"78201993.0000","open":"49.7128","high":"49.9843","low":"49.3743"},{"date":"2011/05/02","close":"49.4686","volume":"110396403.0000","open":"49.9628","high":"50.0670","low":"49.3571"},{"date":"2011/04/29","close":"50.0186","volume":"208434163.0000","open":"49.5400","high":"50.5643","low":"49.5237"},{"date":"2011/04/28","close":"49.5357","volume":"89955627.0000","open":"49.4557","high":"49.9643","low":"49.3600"},{"date":"2011/04/27","close":"50.0214","volume":"88778857.0000","open":"50.3200","high":"50.3357","low":"49.5857"},{"date":"2011/04/26","close":"50.0600","volume":"84367665.0000","open":"50.5171","high":"50.7128","low":"49.9071"},{"date":"2011/04/25","close":"50.4298","volume":"66418687.0000","open":"50.0486","high":"50.5357","low":"50.0428"},{"date":"2011/04/21","close":"50.0994","volume":"188240276.0000","open":"50.7143","high":"50.7328","low":"49.7886"},{"date":"2011/04/20","close":"48.9157","volume":"165860990.0000","open":"49.0728","high":"49.3928","low":"48.7857"},{"date":"2011/04/19","close":"48.2657","volume":"104574571.0000","open":"47.5857","high":"48.2828","low":"47.3871"},{"date":"2011/04/18","close":"47.4071","volume":"152935766.0000","open":"46.5857","high":"47.4614","low":"45.7371"},{"date":"2011/04/15","close":"46.7800","volume":"113325554.0000","open":"47.6143","high":"47.6628","low":"46.6857"},{"date":"2011/04/14","close":"47.4886","volume":"75357053.0000","open":"47.8286","high":"48.0000","low":"47.4371"},{"date":"2011/04/13","close":"48.0186","volume":"86483416.0000","open":"47.8600","high":"48.0200","low":"47.5028"},{"date":"2011/04/12","close":"47.4857","volume":"106196122.0000","open":"47.2128","high":"47.6757","low":"47.1714"},{"date":"2011/04/11","close":"47.2571","volume":"99679750.0000","open":"47.7228","high":"47.9528","low":"47.1457"},{"date":"2011/04/08","close":"47.8657","volume":"94195248.0000","open":"48.5600","high":"48.5928","low":"47.7071"},{"date":"2011/04/07","close":"48.2971","volume":"93268378.0000","open":"48.3000","high":"48.6328","low":"48.0043"},{"date":"2011/04/06","close":"48.2914","volume":"100460810.0000","open":"48.7457","high":"49.1286","low":"48.1628"},{"date":"2011/04/05","close":"48.4128","volume":"120651896.0000","open":"48.1414","high":"48.8928","low":"48.0000"},{"date":"2011/04/04","close":"48.7414","volume":"114751314.0000","open":"49.1871","high":"49.2286","low":"48.3428"},{"date":"2011/04/01","close":"49.2228","volume":"104496031.0000","open":"50.1586","high":"50.2267","low":"49.0428"},{"date":"2011/03/31","close":"49.7868","volume":"68453161.0000","open":"49.4800","high":"49.9714","low":"49.4371"},{"date":"2011/03/30","close":"49.8043","volume":"82147055.0000","open":"50.0914","high":"50.1257","low":"49.6343"},{"date":"2011/03/29","close":"50.1371","volume":"88011586.0000","open":"49.6657","high":"50.1371","low":"49.4371"},{"date":"2011/03/28","close":"50.0628","volume":"77053503.0000","open":"50.4500","high":"50.6171","low":"50.0628"},{"date":"2011/03/25","close":"50.2200","volume":"111997444.0000","open":"49.7243","high":"50.2943","low":"49.5743"},{"date":"2011/03/24","close":"49.2814","volume":"100635740.0000","open":"48.8357","high":"49.4286","low":"48.4086"},{"date":"2011/03/23","close":"48.4557","volume":"93078328.0000","open":"48.4686","high":"48.6028","low":"47.9928"},{"date":"2011/03/22","close":"48.7428","volume":"81435364.0000","open":"48.9371","high":"48.9457","low":"48.4486"},{"date":"2011/03/21","close":"48.4714","volume":"103178211.0000","open":"47.9986","high":"48.5343","low":"47.8943"},{"date":"2011/03/18","close":"47.2386","volume":"188150886.0000","open":"48.1614","high":"48.3143","low":"47.1428"},{"date":"2011/03/17","close":"47.8057","volume":"164523359.0000","open":"48.1186","high":"48.5157","low":"47.2371"},{"date":"2011/03/16","close":"47.1443","volume":"287646046.0000","open":"48.8571","high":"49.0000","low":"46.6086"},{"date":"2011/03/15","close":"49.3471","volume":"179747944.0000","open":"48.8714","high":"49.6914","low":"48.5857"},{"date":"2011/03/14","close":"50.5086","volume":"108959443.0000","open":"50.4543","high":"50.9263","low":"50.1871"},{"date":"2011/03/11","close":"50.2843","volume":"117542215.0000","open":"49.3328","high":"50.3314","low":"49.2857"},{"date":"2011/03/10","close":"49.5243","volume":"126724608.0000","open":"49.8743","high":"49.9671","low":"49.2714"},{"date":"2011/03/09","close":"50.3528","volume":"113249954.0000","open":"50.6700","high":"50.6800","low":"50.0857"},{"date":"2011/03/08","close":"50.8228","volume":"88957077.0000","open":"50.7014","high":"51.0571","low":"50.3214"},{"date":"2011/03/07","close":"50.7657","volume":"136302361.0000","open":"51.6286","high":"51.6671","low":"50.1871"},{"date":"2011/03/04","close":"51.4286","volume":"113155454.0000","open":"51.4386","high":"51.4700","low":"51.1071"},{"date":"2011/03/03","close":"51.3657","volume":"124643787.0000","open":"51.0271","high":"51.3986","low":"50.8457"},{"date":"2011/03/02","close":"50.3028","volume":"150412615.0000","open":"49.9943","high":"50.6214","low":"49.7714"},{"date":"2011/03/01","close":"49.9014","volume":"113527924.0000","open":"50.7814","high":"50.8171","low":"49.6687"},{"date":"2011/02/28","close":"50.4586","volume":"100497210.0000","open":"50.1771","high":"50.7214","low":"50.1600"},{"date":"2011/02/25","close":"49.7371","volume":"94401188.0000","open":"49.3228","high":"49.7757","low":"49.2571"},{"date":"2011/02/24","close":"48.9828","volume":"124804997.0000","open":"49.1457","high":"49.3071","low":"48.3386"},{"date":"2011/02/23","close":"48.9457","volume":"167580960.0000","open":"48.3957","high":"49.2343","low":"48.3728"},{"date":"2011/02/22","close":"48.3728","volume":"217592825.0000","open":"48.8786","high":"49.3428","low":"48.2457"},{"date":"2011/02/18","close":"50.0800","volume":"203326891.0000","open":"51.2443","high":"51.3571","low":"49.9314"},{"date":"2011/02/17","close":"51.1857","volume":"132320200.0000","open":"51.0357","high":"51.4671","low":"50.9314"},{"date":"2011/02/16","close":"51.8757","volume":"118767216.0000","open":"51.5428","high":"52.1286","low":"51.5000"},{"date":"2011/02/15","close":"51.4143","volume":"70731871.0000","open":"51.3128","high":"51.4243","low":"51.0786"},{"date":"2011/02/14","close":"51.3114","volume":"77500243.0000","open":"50.9700","high":"51.3543","low":"50.9586"},{"date":"2011/02/11","close":"50.9786","volume":"91775628.0000","open":"50.6789","high":"51.1143","low":"50.5057"},{"date":"2011/02/10","close":"50.6486","volume":"231786170.0000","open":"51.0557","high":"51.4286","low":"49.7143"},{"date":"2011/02/09","close":"51.1657","volume":"120447916.0000","open":"50.7414","high":"51.2857","low":"50.6957"},{"date":"2011/02/08","close":"50.7428","volume":"94755248.0000","open":"50.5257","high":"50.7886","low":"50.3071"},{"date":"2011/02/07","close":"50.2686","volume":"121039906.0000","open":"49.6986","high":"50.4643","low":"49.6628"},{"date":"2011/02/04","close":"49.5000","volume":"80346164.0000","open":"49.0914","high":"49.5286","low":"49.0728"},{"date":"2011/02/03","close":"49.0628","volume":"98290879.0000","open":"49.1143","high":"49.1771","low":"48.3643"},{"date":"2011/02/02","close":"49.1886","volume":"64653258.0000","open":"49.2071","high":"49.3214","low":"49.0786"},{"date":"2011/02/01","close":"49.2900","volume":"106341512.0000","open":"48.7571","high":"49.3786","low":"48.7114"},{"date":"2011/01/31","close":"48.4743","volume":"94202598.0000","open":"47.9714","high":"48.5771","low":"47.7571"},{"date":"2011/01/28","close":"48.0143","volume":"147746454.0000","open":"49.1671","high":"49.2000","low":"47.6468"},{"date":"2011/01/27","close":"49.0300","volume":"71129331.0000","open":"49.1114","high":"49.2418","low":"48.9758"},{"date":"2011/01/26","close":"49.1214","volume":"126542748.0000","open":"48.9943","high":"49.3714","low":"48.7857"},{"date":"2011/01/25","close":"48.7714","volume":"135998561.0000","open":"48.0471","high":"48.7771","low":"47.7957"},{"date":"2011/01/24","close":"48.2071","volume":"143251473.0000","open":"46.6957","high":"48.2071","low":"46.6743"},{"date":"2011/01/21","close":"46.6743","volume":"188198066.0000","open":"47.6814","high":"47.8400","low":"46.6614"},{"date":"2011/01/20","close":"47.5257","volume":"190898107.0000","open":"48.0614","high":"48.3286","low":"47.1600"},{"date":"2011/01/19","close":"48.4057","volume":"283119845.0000","open":"49.7643","high":"49.8000","low":"48.1257"},{"date":"2011/01/18","close":"48.6643","volume":"462442329.0000","open":"47.0743","high":"49.2518","low":"46.5714"},{"date":"2011/01/14","close":"49.7828","volume":"76865693.0000","open":"49.4128","high":"49.7828","low":"49.2057"},{"date":"2011/01/13","close":"49.3828","volume":"74023552.0000","open":"49.3086","high":"49.5200","low":"49.1214"},{"date":"2011/01/12","close":"49.2028","volume":"75491803.0000","open":"49.0357","high":"49.2043","low":"48.8571"},{"date":"2011/01/11","close":"48.8057","volume":"110618303.0000","open":"49.2686","high":"49.2800","low":"48.4957"},{"date":"2011/01/10","close":"48.9221","volume":"111939414.0000","open":"48.4043","high":"49.0328","low":"48.1671"},{"date":"2011/01/07","close":"48.0171","volume":"77371653.0000","open":"47.7128","high":"48.0500","low":"47.4143"},{"date":"2011/01/06","close":"47.6757","volume":"74957912.0000","open":"47.8170","high":"47.8928","low":"47.5571"},{"date":"2011/01/05","close":"47.7143","volume":"63310259.0000","open":"47.0786","high":"47.7628","low":"47.0714"},{"date":"2011/01/04","close":"47.3271","volume":"77212123.0000","open":"47.4914","high":"47.5000","low":"46.8786"},{"date":"2011/01/03","close":"47.0814","volume":"110964733.0000","open":"46.5200","high":"47.1800","low":"46.4052"},{"date":"2010/12/31","close":"46.0800","volume":"48344906.0000","open":"46.1357","high":"46.2114","low":"45.9014"},{"date":"2010/12/30","close":"46.2371","volume":"39354103.0000","open":"46.4971","high":"46.5014","low":"46.1500"},{"date":"2010/12/29","close":"46.4700","volume":"40775656.0000","open":"46.6028","high":"46.6357","low":"46.4428"},{"date":"2010/12/28","close":"46.4957","volume":"43898371.0000","open":"46.5586","high":"46.6657","low":"46.4371"},{"date":"2010/12/27","close":"46.3828","volume":"62274056.0000","open":"46.1217","high":"46.4914","low":"45.9314"},{"date":"2010/12/23","close":"46.2286","volume":"55731469.0000","open":"46.4286","high":"46.4500","low":"46.1671"},{"date":"2010/12/22","close":"46.4514","volume":"66449697.0000","open":"46.3371","high":"46.5314","low":"46.2214"},{"date":"2010/12/21","close":"46.3150","volume":"63928793.0000","open":"46.1428","high":"46.3414","low":"46.0071"},{"date":"2010/12/20","close":"46.0300","volume":"96006079.0000","open":"45.9428","high":"46.1786","low":"45.4614"},{"date":"2010/12/17","close":"45.8014","volume":"96587849.0000","open":"45.9471","high":"45.9700","low":"45.7471"},{"date":"2010/12/16","close":"45.8928","volume":"80244454.0000","open":"45.8700","high":"46.0871","low":"45.7286"},{"date":"2010/12/15","close":"45.7657","volume":"103780771.0000","open":"45.7143","high":"46.1428","low":"45.5986"},{"date":"2010/12/14","close":"45.7557","volume":"87718986.0000","open":"45.9614","high":"46.0771","low":"45.5714"},{"date":"2010/12/13","close":"45.9528","volume":"109673093.0000","open":"46.3386","high":"46.4371","low":"45.8571"},{"date":"2010/12/10","close":"45.7943","volume":"65576594.0000","open":"45.6643","high":"45.8643","low":"45.5143"},{"date":"2010/12/09","close":"45.6796","volume":"73378782.0000","open":"46.0188","high":"46.0714","low":"45.5743"},{"date":"2010/12/08","close":"45.8586","volume":"80165284.0000","open":"45.6614","high":"45.8600","low":"45.3014"},{"date":"2010/12/07","close":"45.4586","volume":"97437439.0000","open":"46.2571","high":"46.2843","low":"45.4457"},{"date":"2010/12/06","close":"45.7357","volume":"111165143.0000","open":"45.5200","high":"46.0471","low":"45.4886"},{"date":"2010/12/03","close":"45.3486","volume":"85503906.0000","open":"45.2871","high":"45.5214","low":"45.1914"},{"date":"2010/12/02","close":"45.4500","volume":"115699815.0000","open":"45.3614","high":"45.5714","low":"44.9843"},{"date":"2010/12/01","close":"45.2000","volume":"114829084.0000","open":"45.0386","high":"45.3928","low":"45.0000"},{"date":"2010/11/30","close":"44.4500","volume":"125157098.0000","open":"44.7914","high":"44.9086","low":"44.4100"},{"date":"2010/11/29","close":"45.2671","volume":"110489713.0000","open":"45.0714","high":"45.3543","low":"44.4828"},{"date":"2010/11/26","close":"45.0000","volume":"59436255.0000","open":"44.8200","high":"45.3857","low":"44.7057"},{"date":"2010/11/24","close":"44.9707","volume":"103401091.0000","open":"44.5714","high":"45.0571","low":"44.5357"},{"date":"2010/11/23","close":"44.1043","volume":"129372219.0000","open":"44.3500","high":"44.5357","low":"43.7943"},{"date":"2010/11/22","close":"44.7657","volume":"97869619.0000","open":"43.8114","high":"44.7657","low":"43.6957"},{"date":"2010/11/19","close":"43.8186","volume":"96113949.0000","open":"43.9957","high":"44.0571","low":"43.6057"},{"date":"2010/11/18","close":"44.0614","volume":"123123667.0000","open":"43.6000","high":"44.2386","low":"43.5271"},{"date":"2010/11/17","close":"42.9286","volume":"119653066.0000","open":"43.0286","high":"43.4271","low":"42.5371"},{"date":"2010/11/16","close":"43.0843","volume":"164041549.0000","open":"43.6743","high":"43.9428","low":"42.7600"},{"date":"2010/11/15","close":"43.8621","volume":"100475160.0000","open":"44.0657","high":"44.3628","low":"43.7528"},{"date":"2010/11/12","close":"44.0043","volume":"198704230.0000","open":"45.1428","high":"45.2143","low":"43.3757"},{"date":"2010/11/11","close":"45.2364","volume":"90179837.0000","open":"45.0000","high":"45.4857","low":"44.8928"},{"date":"2010/11/10","close":"45.4328","volume":"95152429.0000","open":"45.2343","high":"45.5386","low":"44.7928"},{"date":"2010/11/09","close":"45.1543","volume":"95514329.0000","open":"45.8643","high":"45.9000","low":"44.9286"},{"date":"2010/11/08","close":"45.5171","volume":"69985111.0000","open":"45.3143","high":"45.6814","low":"45.2514"},{"date":"2010/11/05","close":"45.3043","volume":"90104657.0000","open":"45.4271","high":"45.6528","low":"45.2500"},{"date":"2010/11/04","close":"45.4671","volume":"159613418.0000","open":"45.0643","high":"45.7400","low":"45.0043"},{"date":"2010/11/03","close":"44.6857","volume":"126496828.0000","open":"44.4814","high":"44.6971","low":"44.0757"},{"date":"2010/11/02","close":"44.1943","volume":"107689502.0000","open":"43.8571","high":"44.3128","low":"43.8571"},{"date":"2010/11/01","close":"43.4543","volume":"105463082.0000","open":"43.1743","high":"43.6571","low":"43.1714"},{"date":"2010/10/29","close":"42.9971","volume":"106459252.0000","open":"43.4614","high":"43.6971","low":"42.9814"},{"date":"2010/10/28","close":"43.6057","volume":"137111911.0000","open":"43.9928","high":"44.0000","low":"42.9857"},{"date":"2010/10/27","close":"43.9757","volume":"97963209.0000","open":"43.9500","high":"44.2714","low":"43.6571"},{"date":"2010/10/26","close":"44.0071","volume":"97175079.0000","open":"43.8386","high":"44.2486","low":"43.6643"},{"date":"2010/10/25","close":"44.1200","volume":"96214749.0000","open":"44.1557","high":"44.5143","low":"44.0628"},{"date":"2010/10/22","close":"43.9243","volume":"92488648.0000","open":"44.1528","high":"44.2914","low":"43.7571"},{"date":"2010/10/21","close":"44.2171","volume":"136781721.0000","open":"44.6228","high":"44.9628","low":"43.8286"},{"date":"2010/10/20","close":"44.3614","volume":"179414674.0000","open":"44.1428","high":"44.8928","low":"43.8386"},{"date":"2010/10/19","close":"44.2128","volume":"307005952.0000","open":"43.3428","high":"44.8243","low":"42.8600"},{"date":"2010/10/18","close":"45.4286","volume":"267603430.0000","open":"45.4957","high":"45.5714","low":"44.8986"},{"date":"2010/10/15","close":"44.9628","volume":"229189449.0000","open":"43.9200","high":"45.0000","low":"43.5586"},{"date":"2010/10/14","close":"43.1871","volume":"108314742.0000","open":"43.0986","high":"43.2100","low":"42.9143"},{"date":"2010/10/13","close":"42.8771","volume":"155265647.0000","open":"42.8857","high":"43.1371","low":"42.8286"},{"date":"2010/10/12","close":"42.6486","volume":"139112862.0000","open":"42.2014","high":"42.7857","low":"41.7843"},{"date":"2010/10/11","close":"42.1943","volume":"106676392.0000","open":"42.1057","high":"42.4628","low":"42.0857"},{"date":"2010/10/08","close":"42.0100","volume":"164183439.0000","open":"41.6733","high":"42.0714","low":"41.4286"},{"date":"2010/10/07","close":"41.3171","volume":"101859481.0000","open":"41.4766","high":"41.4971","low":"40.9871"},{"date":"2010/10/06","close":"41.3128","volume":"167206320.0000","open":"41.3700","high":"41.7128","low":"40.7514"},{"date":"2010/10/05","close":"41.2771","volume":"124901667.0000","open":"40.2857","high":"41.3500","low":"40.2601"},{"date":"2010/10/04","close":"39.8057","volume":"108637023.0000","open":"40.2286","high":"40.4143","low":"39.6814"},{"date":"2010/10/01","close":"40.3600","volume":"112000034.0000","open":"40.8780","high":"40.9400","low":"40.1928"},{"date":"2010/09/30","close":"40.5357","volume":"167988710.0000","open":"41.2857","high":"41.4286","low":"40.1786"},{"date":"2010/09/29","close":"41.0528","volume":"117244505.0000","open":"41.0328","high":"41.4014","low":"40.8571"},{"date":"2010/09/28","close":"40.9800","volume":"258538988.0000","open":"41.6814","high":"41.6814","low":"39.2857"},{"date":"2010/09/27","close":"41.5948","volume":"120369236.0000","open":"41.9964","high":"42.1043","low":"41.5728"},{"date":"2010/09/24","close":"41.7600","volume":"161761929.0000","open":"41.7286","high":"41.9328","low":"41.5071"},{"date":"2010/09/23","close":"41.2743","volume":"196189899.0000","open":"40.9043","high":"41.8228","low":"40.8571"},{"date":"2010/09/22","close":"41.1071","volume":"146168794.0000","open":"40.3871","high":"41.1400","low":"40.3443"},{"date":"2010/09/21","close":"40.5386","volume":"166544330.0000","open":"40.5514","high":"41.0500","low":"40.3986"},{"date":"2010/09/20","close":"40.4614","volume":"164490809.0000","open":"39.4400","high":"40.5400","low":"39.4071"},{"date":"2010/09/17","close":"39.3386","volume":"157292917.0000","open":"39.6700","high":"39.7086","low":"39.0971"},{"date":"2010/09/16","close":"39.5100","volume":"162463819.0000","open":"38.6057","high":"39.5243","low":"38.5000"},{"date":"2010/09/15","close":"38.6028","volume":"106805122.0000","open":"38.3100","high":"38.6257","low":"38.2628"},{"date":"2010/09/14","close":"38.2943","volume":"101293530.0000","open":"38.0300","high":"38.4528","low":"37.9314"},{"date":"2010/09/13","close":"38.1486","volume":"96883319.0000","open":"37.9743","high":"38.3257","low":"37.9657"},{"date":"2010/09/10","close":"37.6300","volume":"96849369.0000","open":"37.5986","high":"37.7857","low":"37.3428"},{"date":"2010/09/09","close":"37.5814","volume":"109347103.0000","open":"37.8628","high":"38.0743","low":"37.5600"},{"date":"2010/09/08","close":"37.5600","volume":"131395709.0000","open":"37.1114","high":"37.7700","low":"37.0143"},{"date":"2010/09/07","close":"36.8300","volume":"85565506.0000","open":"36.6628","high":"37.0757","low":"36.6071"},{"date":"2010/09/03","close":"36.9671","volume":"130035609.0000","open":"36.4414","high":"36.9686","low":"36.3571"},{"date":"2010/09/02","close":"36.0243","volume":"103632581.0000","open":"35.8946","high":"36.0243","low":"35.5100"},{"date":"2010/09/01","close":"35.7614","volume":"173960762.0000","open":"35.3528","high":"35.9228","low":"35.1828"},{"date":"2010/08/31","close":"34.7286","volume":"104966361.0000","open":"34.5500","high":"34.9371","low":"34.3357"},{"date":"2010/08/30","close":"34.6428","volume":"95553599.0000","open":"34.3943","high":"35.1071","low":"34.3829"},{"date":"2010/08/27","close":"34.5171","volume":"136758551.0000","open":"34.5357","high":"34.6586","low":"33.6514"},{"date":"2010/08/26","close":"34.3257","volume":"116284385.0000","open":"35.0643","high":"35.1071","low":"34.3254"},{"date":"2010/08/25","close":"34.6986","volume":"148938905.0000","open":"34.0057","high":"34.8557","low":"33.8857"},{"date":"2010/08/24","close":"34.2757","volume":"150183995.0000","open":"34.6671","high":"34.7143","low":"34.0928"},{"date":"2010/08/23","close":"35.1143","volume":"103289091.0000","open":"35.9700","high":"36.0000","low":"35.0357"},{"date":"2010/08/20","close":"35.6628","volume":"95681559.0000","open":"35.6271","high":"36.2743","low":"35.5714"},{"date":"2010/08/19","close":"35.6971","volume":"106533662.0000","open":"36.1200","high":"36.2114","low":"35.5257"},{"date":"2010/08/18","close":"36.1528","volume":"84548265.0000","open":"36.0514","high":"36.3814","low":"35.9400"},{"date":"2010/08/17","close":"35.9957","volume":"105546662.0000","open":"35.7257","high":"36.3757","low":"35.6000"},{"date":"2010/08/16","close":"35.3771","volume":"79420764.0000","open":"35.3686","high":"35.7157","low":"35.2314"},{"date":"2010/08/13","close":"35.5857","volume":"88560037.0000","open":"35.9500","high":"35.9828","low":"35.5843"},{"date":"2010/08/12","close":"35.9700","volume":"133552620.0000","open":"35.2414","high":"36.1571","low":"35.1600"},{"date":"2010/08/11","close":"35.7414","volume":"154454626.0000","open":"36.4857","high":"36.5271","low":"35.6871"},{"date":"2010/08/10","close":"37.0586","volume":"112874754.0000","open":"37.1214","high":"37.2071","low":"36.7928"},{"date":"2010/08/09","close":"37.3928","volume":"75552633.0000","open":"37.3543","high":"37.4500","low":"37.0814"},{"date":"2010/08/06","close":"37.1558","volume":"111151143.0000","open":"37.1114","high":"37.3557","low":"36.8043"},{"date":"2010/08/05","close":"37.3857","volume":"72257102.0000","open":"37.3900","high":"37.5971","low":"37.2214"},{"date":"2010/08/04","close":"37.5686","volume":"105052042.0000","open":"37.5486","high":"37.7543","low":"37.1873"},{"date":"2010/08/03","close":"37.4186","volume":"104082541.0000","open":"37.2871","high":"37.6086","low":"37.0600"},{"date":"2010/08/02","close":"37.4071","volume":"106583082.0000","open":"37.2057","high":"37.5128","low":"37.0886"},{"date":"2010/07/30","close":"36.7500","volume":"112029784.0000","open":"36.5561","high":"37.1000","low":"36.4143"},{"date":"2010/07/29","close":"36.8728","volume":"160834008.0000","open":"37.2443","high":"37.5214","low":"36.5857"},{"date":"2010/07/28","close":"37.2800","volume":"129737759.0000","open":"37.6671","high":"37.9986","low":"37.1786"},{"date":"2010/07/27","close":"37.7257","volume":"145188934.0000","open":"37.2671","high":"37.8286","low":"37.1857"},{"date":"2010/07/26","close":"37.0400","volume":"104188731.0000","open":"37.1428","high":"37.1571","low":"36.8157"},{"date":"2010/07/23","close":"37.1343","volume":"133236640.0000","open":"36.7271","high":"37.1971","low":"36.6114"},{"date":"2010/07/22","close":"37.0034","volume":"161139628.0000","open":"36.8114","high":"37.1428","low":"36.4728"},{"date":"2010/07/21","close":"36.3200","volume":"295973249.0000","open":"37.8700","high":"37.8786","low":"36.2857"},{"date":"2010/07/20","close":"35.9843","volume":"263591379.0000","open":"34.7000","high":"36.1286","low":"34.2871"},{"date":"2010/07/19","close":"35.0828","volume":"255842447.0000","open":"35.6971","high":"35.6971","low":"34.2286"},{"date":"2010/07/16","close":"35.7000","volume":"259540618.0000","open":"36.1686","high":"36.4243","low":"35.4871"},{"date":"2010/07/15","close":"35.9214","volume":"205060442.0000","open":"35.4614","high":"36.7100","low":"35.3286"},{"date":"2010/07/14","close":"36.1038","volume":"202950851.0000","open":"35.6257","high":"36.5428","low":"35.5714"},{"date":"2010/07/13","close":"35.9711","volume":"296797219.0000","open":"36.6171","high":"36.6286","low":"35.2043"},{"date":"2010/07/12","close":"36.7550","volume":"140474992.0000","open":"36.9328","high":"37.4071","low":"36.4086"},{"date":"2010/07/09","close":"37.0886","volume":"108260072.0000","open":"36.6986","high":"37.1286","low":"36.4514"},{"date":"2010/07/08","close":"36.8700","volume":"184252935.0000","open":"37.4971","high":"37.5571","low":"36.4128"},{"date":"2010/07/07","close":"36.9521","volume":"163169979.0000","open":"35.7843","high":"36.9671","low":"35.6786"},{"date":"2010/07/06","close":"35.5186","volume":"153559326.0000","open":"35.8571","high":"36.1143","low":"35.1657"},{"date":"2010/07/02","close":"35.2771","volume":"173446612.0000","open":"35.7843","high":"35.8471","low":"34.7428"},{"date":"2010/07/01","close":"35.4971","volume":"255527517.0000","open":"36.3286","high":"36.4000","low":"34.7457"},{"date":"2010/06/30","close":"35.9328","volume":"184538045.0000","open":"36.6728","high":"36.8528","low":"35.7157"},{"date":"2010/06/29","close":"36.5957","volume":"282782865.0000","open":"37.7316","high":"37.7700","low":"36.3286"},{"date":"2010/06/28","close":"38.3286","volume":"146186434.0000","open":"38.1328","high":"38.5357","low":"37.7886"},{"date":"2010/06/25","close":"38.1000","volume":"136678611.0000","open":"38.5800","high":"38.6100","low":"37.9728"},{"date":"2010/06/24","close":"38.4286","volume":"178309303.0000","open":"38.7143","high":"39.0278","low":"38.3000"},{"date":"2010/06/23","close":"38.7100","volume":"191838418.0000","open":"39.2257","high":"39.2371","low":"38.2714"},{"date":"2010/06/22","close":"39.1214","volume":"178776694.0000","open":"38.8800","high":"39.4243","low":"38.7857"},{"date":"2010/06/21","close":"38.5957","volume":"193217628.0000","open":"39.6700","high":"39.8586","low":"38.3900"},{"date":"2010/06/18","close":"39.1534","volume":"195928029.0000","open":"38.8928","high":"39.2857","low":"38.7743"},{"date":"2010/06/17","close":"38.8386","volume":"217872895.0000","open":"38.6571","high":"38.9857","low":"38.5000"},{"date":"2010/06/16","close":"38.1786","volume":"195557169.0000","open":"37.3000","high":"38.2500","low":"37.2329"},{"date":"2010/06/15","close":"37.0986","volume":"145862054.0000","open":"36.5200","high":"37.1214","low":"36.5000"},{"date":"2010/06/14","close":"36.3257","volume":"150469315.0000","open":"36.5657","high":"37.0214","low":"36.2871"},{"date":"2010/06/11","close":"36.2157","volume":"136154451.0000","open":"35.4607","high":"36.2657","low":"35.3386"},{"date":"2010/06/10","close":"35.7871","volume":"193507918.0000","open":"34.9771","high":"35.8543","low":"34.6000"},{"date":"2010/06/09","close":"34.7428","volume":"213040094.0000","open":"35.9243","high":"35.9857","low":"34.6414"},{"date":"2010/06/08","close":"35.6186","volume":"249904415.0000","open":"36.1771","high":"36.2571","low":"35.0928"},{"date":"2010/06/07","close":"35.8486","volume":"221253336.0000","open":"36.8986","high":"37.0214","low":"35.7928"},{"date":"2010/06/04","close":"36.5664","volume":"189045767.0000","open":"36.8871","high":"37.4143","low":"36.3757"},{"date":"2010/06/03","close":"37.5886","volume":"162341809.0000","open":"37.8828","high":"37.9357","low":"37.2014"},{"date":"2010/06/02","close":"37.7071","volume":"171594061.0000","open":"37.7914","high":"37.8286","low":"37.1907"},{"date":"2010/06/01","close":"37.2614","volume":"218455576.0000","open":"37.0986","high":"37.9914","low":"36.9943"},{"date":"2010/05/28","close":"36.6971","volume":"203645811.0000","open":"37.0554","high":"37.0571","low":"36.1928"},{"date":"2010/05/27","close":"36.1928","volume":"165270400.0000","open":"35.8000","high":"36.2700","low":"35.5871"},{"date":"2010/05/26","close":"34.8727","volume":"212125404.0000","open":"35.7257","high":"36.0186","low":"34.8214"},{"date":"2010/05/25","close":"35.0314","volume":"261342838.0000","open":"34.1928","high":"35.2514","low":"33.8800"},{"date":"2010/05/24","close":"35.2514","volume":"188078156.0000","open":"35.3257","high":"35.8428","low":"35.1800"},{"date":"2010/05/21","close":"34.6171","volume":"305744272.0000","open":"33.2600","high":"34.9286","low":"33.0500"},{"date":"2010/05/20","close":"33.9657","volume":"319497456.0000","open":"34.5543","high":"34.8357","low":"33.7443"},{"date":"2010/05/19","close":"35.4771","volume":"256089547.0000","open":"35.6428","high":"36.1314","low":"34.9786"},{"date":"2010/05/18","close":"36.0514","volume":"194856888.0000","open":"36.7114","high":"36.9357","low":"35.7514"},{"date":"2010/05/17","close":"36.3171","volume":"190413707.0000","open":"36.3857","high":"36.5971","low":"35.3871"},{"date":"2010/05/14","close":"36.2600","volume":"189368537.0000","open":"36.4521","high":"36.6400","low":"35.6428"},{"date":"2010/05/13","close":"36.9086","volume":"149704075.0000","open":"37.6028","high":"37.8571","low":"36.6286"},{"date":"2010/05/12","close":"37.4414","volume":"163385299.0000","open":"37.0350","high":"37.5900","low":"36.9571"},{"date":"2010/05/11","close":"36.6457","volume":"212068004.0000","open":"35.9771","high":"37.1271","low":"35.7857"},{"date":"2010/05/10","close":"36.2843","volume":"245539284.0000","open":"35.7500","high":"36.3786","low":"35.5043"},{"date":"2010/05/07","close":"33.6943","volume":"418562326.0000","open":"34.8157","high":"35.2243","low":"32.1728"},{"date":"2010/05/06","close":"35.1786","volume":"319584886.0000","open":"36.2614","high":"36.8928","low":"28.4643"},{"date":"2010/05/05","close":"36.5693","volume":"220353346.0000","open":"36.1471","high":"36.8771","low":"35.5328"},{"date":"2010/05/04","close":"36.9543","volume":"180620564.0000","open":"37.5557","high":"37.6128","low":"36.6786"},{"date":"2010/05/03","close":"38.0500","volume":"113343684.0000","open":"37.6914","high":"38.2686","low":"37.5543"},{"date":"2010/04/30","close":"37.2986","volume":"135421971.0000","open":"38.4728","high":"38.6528","low":"37.2857"},{"date":"2010/04/29","close":"38.3771","volume":"139522502.0000","open":"37.5743","high":"38.5714","low":"37.4300"},{"date":"2010/04/28","close":"37.3714","volume":"189375537.0000","open":"37.6071","high":"37.7143","low":"36.6300"},{"date":"2010/04/27","close":"37.4343","volume":"176955713.0000","open":"38.1814","high":"38.2628","low":"37.2171"},{"date":"2010/04/26","close":"38.5000","volume":"119378876.0000","open":"38.8400","high":"38.9228","low":"38.3128"},{"date":"2010/04/23","close":"38.6900","volume":"198906390.0000","open":"38.2843","high":"38.8828","low":"38.1428"},{"date":"2010/04/22","close":"38.0671","volume":"197849809.0000","open":"36.8914","high":"38.1071","low":"36.6000"},{"date":"2010/04/21","close":"37.0314","volume":"245072944.0000","open":"36.9721","high":"37.1786","low":"36.5328"},{"date":"2010/04/20","close":"34.9414","volume":"177792843.0000","open":"35.5057","high":"35.6071","low":"34.7078"},{"date":"2010/04/19","close":"35.2957","volume":"141571402.0000","open":"35.2900","high":"35.4128","low":"34.5386"},{"date":"2010/04/16","close":"35.3428","volume":"187514026.0000","open":"35.5100","high":"35.8771","low":"34.9357"},{"date":"2010/04/15","close":"35.5600","volume":"93876048.0000","open":"35.1114","high":"35.5757","low":"35.0728"},{"date":"2010/04/14","close":"35.0986","volume":"100827750.0000","open":"35.0400","high":"35.1157","low":"34.8671"},{"date":"2010/04/13","close":"34.6328","volume":"76184103.0000","open":"34.5514","high":"34.6857","low":"34.4443"},{"date":"2010/04/12","close":"34.6128","volume":"83236885.0000","open":"34.6000","high":"34.7243","low":"34.5443"},{"date":"2010/04/09","close":"34.5414","volume":"83443105.0000","open":"34.4900","high":"34.5557","low":"34.3514"},{"date":"2010/04/08","close":"34.2786","volume":"142899723.0000","open":"34.3486","high":"34.5057","low":"34.0057"},{"date":"2010/04/07","close":"34.3714","volume":"156909177.0000","open":"34.2457","high":"34.5600","low":"34.0943"},{"date":"2010/04/06","close":"34.2200","volume":"111431983.0000","open":"34.0286","high":"34.3200","low":"33.8571"},{"date":"2010/04/05","close":"34.0700","volume":"170363601.0000","open":"33.5678","high":"34.0728","low":"33.5386"},{"date":"2010/04/01","close":"33.7100","volume":"150568295.0000","open":"33.9271","high":"34.1043","low":"33.2500"},{"date":"2010/03/31","close":"33.5714","volume":"107438412.0000","open":"33.6414","high":"33.8014","low":"33.4943"},{"date":"2010/03/30","close":"33.6921","volume":"131326339.0000","open":"33.8004","high":"33.9257","low":"33.4643"},{"date":"2010/03/29","close":"33.1986","volume":"130887089.0000","open":"33.2857","high":"33.4100","low":"33.0886"},{"date":"2010/03/26","close":"32.9857","volume":"159986658.0000","open":"32.7071","high":"33.1357","low":"32.6500"},{"date":"2010/03/25","close":"32.3786","volume":"135463131.0000","open":"32.9886","high":"32.9957","low":"32.3214"},{"date":"2010/03/24","close":"32.7671","volume":"149419805.0000","open":"32.5200","high":"32.8857","low":"32.5014"},{"date":"2010/03/23","close":"32.6228","volume":"150384825.0000","open":"32.2343","high":"32.6828","low":"32.0143"},{"date":"2010/03/22","close":"32.1071","volume":"113828294.0000","open":"31.4957","high":"32.2857","low":"31.4500"},{"date":"2010/03/19","close":"31.7500","volume":"139669082.0000","open":"32.1128","high":"32.1771","low":"31.6043"},{"date":"2010/03/18","close":"32.0928","volume":"85156076.0000","open":"32.0143","high":"32.1428","low":"31.8014"},{"date":"2010/03/17","close":"32.0171","volume":"112501374.0000","open":"32.1286","high":"32.3500","low":"31.8957"},{"date":"2010/03/16","close":"32.0643","volume":"111581993.0000","open":"32.0257","high":"32.1400","low":"31.7871"},{"date":"2010/03/15","close":"31.9771","volume":"123005437.0000","open":"32.1971","high":"32.2143","low":"31.4643"},{"date":"2010/03/12","close":"32.3714","volume":"103841951.0000","open":"32.4814","high":"32.5328","low":"32.2500"},{"date":"2010/03/11","close":"32.2143","volume":"101209110.0000","open":"31.9871","high":"32.2143","low":"31.9028"},{"date":"2010/03/10","close":"32.1200","volume":"148907755.0000","open":"31.9757","high":"32.2114","low":"31.8857"},{"date":"2010/03/09","close":"31.8600","volume":"229908139.0000","open":"31.1871","high":"32.1428","low":"31.1271"},{"date":"2010/03/08","close":"31.2971","volume":"107326832.0000","open":"31.4300","high":"31.4414","low":"31.1786"},{"date":"2010/03/05","close":"31.2786","volume":"224647427.0000","open":"30.7057","high":"31.3857","low":"30.6614"},{"date":"2010/03/04","close":"30.1014","volume":"89591907.0000","open":"29.8971","high":"30.1314","low":"29.8043"},{"date":"2010/03/03","close":"29.9043","volume":"92846488.0000","open":"29.8486","high":"29.9814","low":"29.7057"},{"date":"2010/03/02","close":"29.8357","volume":"141486282.0000","open":"29.9900","high":"30.1186","low":"29.6771"},{"date":"2010/03/01","close":"29.8557","volume":"137312041.0000","open":"29.3928","high":"29.9286","low":"29.3500"},{"date":"2010/02/26","close":"29.2314","volume":"126742668.0000","open":"28.9114","high":"29.3100","low":"28.8571"},{"date":"2010/02/25","close":"28.8571","volume":"166204690.0000","open":"28.1971","high":"28.9800","low":"28.1271"},{"date":"2010/02/24","close":"28.6651","volume":"115019695.0000","open":"28.3186","high":"28.7771","low":"28.2628"},{"date":"2010/02/23","close":"28.1513","volume":"143761703.0000","open":"28.5714","high":"28.7614","low":"27.9586"},{"date":"2010/02/22","close":"28.6308","volume":"97607889.0000","open":"28.9057","high":"28.9286","low":"28.4557"},{"date":"2010/02/19","close":"28.8100","volume":"103810451.0000","open":"28.8371","high":"29.0286","low":"28.7300"},{"date":"2010/02/18","close":"28.9897","volume":"105298302.0000","open":"28.8043","high":"29.1271","low":"28.7028"},{"date":"2010/02/17","close":"28.9357","volume":"108691903.0000","open":"29.1700","high":"29.1871","low":"28.6943"},{"date":"2010/02/16","close":"29.0571","volume":"135631411.0000","open":"28.8486","high":"29.0986","low":"28.7886"},{"date":"2010/02/12","close":"28.6257","volume":"160883708.0000","open":"28.3014","high":"28.8057","low":"27.9286"},{"date":"2010/02/11","close":"28.3814","volume":"136569551.0000","open":"27.8400","high":"28.5357","low":"27.7228"},{"date":"2010/02/10","close":"27.8737","volume":"92309448.0000","open":"27.9843","high":"28.0857","low":"27.7514"},{"date":"2010/02/09","close":"28.0271","volume":"158104077.0000","open":"28.0600","high":"28.2143","low":"27.8214"},{"date":"2010/02/08","close":"27.7314","volume":"119140456.0000","open":"27.9557","high":"28.2686","low":"27.7143"},{"date":"2010/02/05","close":"27.9228","volume":"212342054.0000","open":"27.5178","high":"28.0000","low":"27.2643"},{"date":"2010/02/04","close":"27.4357","volume":"188974717.0000","open":"28.1043","high":"28.3386","low":"27.3671"},{"date":"2010/02/03","close":"28.4614","volume":"153524396.0000","open":"27.8814","high":"28.6000","low":"27.7743"},{"date":"2010/02/02","close":"27.9800","volume":"174456782.0000","open":"27.9871","high":"28.0457","low":"27.6257"},{"date":"2010/02/01","close":"27.8186","volume":"186856796.0000","open":"27.4814","high":"28.0000","low":"27.3286"},{"date":"2010/01/29","close":"27.4376","volume":"311050273.0000","open":"28.7257","high":"28.8857","low":"27.1786"},{"date":"2010/01/28","close":"28.4700","volume":"292824088.0000","open":"29.2757","high":"29.3571","low":"28.3857"},{"date":"2010/01/27","close":"29.6977","volume":"430233079.0000","open":"29.5500","high":"30.0828","low":"28.5044"},{"date":"2010/01/26","close":"29.4200","volume":"464983189.0000","open":"29.4214","high":"30.5300","low":"28.9400"},{"date":"2010/01/25","close":"29.0107","volume":"256160737.0000","open":"28.9300","high":"29.2428","low":"28.5986"},{"date":"2010/01/22","close":"28.2500","volume":"219017256.0000","open":"29.5400","high":"29.6428","low":"28.1657"},{"date":"2010/01/21","close":"29.7246","volume":"151730436.0000","open":"30.2971","high":"30.4734","low":"29.6014"},{"date":"2010/01/20","close":"30.2464","volume":"152695456.0000","open":"30.7014","high":"30.7928","low":"29.9286"},{"date":"2010/01/19","close":"30.7200","volume":"182179955.0000","open":"29.7614","high":"30.7414","low":"29.6057"},{"date":"2010/01/15","close":"29.4186","volume":"148455485.0000","open":"30.1328","high":"30.2286","low":"29.4100"},{"date":"2010/01/14","close":"29.9186","volume":"108115592.0000","open":"30.0157","high":"30.0657","low":"29.8600"},{"date":"2010/01/13","close":"30.0928","volume":"151055775.0000","open":"29.6957","high":"30.1328","low":"29.1571"},{"date":"2010/01/12","close":"29.6743","volume":"148302744.0000","open":"29.8843","high":"29.9671","low":"29.4886"},{"date":"2010/01/11","close":"30.0157","volume":"115271835.0000","open":"30.4000","high":"30.4286","low":"29.7786"},{"date":"2010/01/08","close":"30.2828","volume":"111804664.0000","open":"30.0428","high":"30.2857","low":"29.8657"},{"date":"2010/01/07","close":"30.0828","volume":"119094816.0000","open":"30.2500","high":"30.2857","low":"29.8643"},{"date":"2010/01/06","close":"30.1386","volume":"137494251.0000","open":"30.6257","high":"30.7471","low":"30.1071"},{"date":"2010/01/05","close":"30.6257","volume":"150324555.0000","open":"30.6571","high":"30.7986","low":"30.4643"},{"date":"2010/01/04","close":"30.5728","volume":"122786757.0000","open":"30.4900","high":"30.6428","low":"30.3400"},{"date":"2009/12/31","close":"30.1046","volume":"87907426.0000","open":"30.4471","high":"30.4786","low":"30.0800"},{"date":"2009/12/30","close":"30.2343","volume":"102705781.0000","open":"29.8328","high":"30.2857","low":"29.7586"},{"date":"2009/12/29","close":"29.8714","volume":"110755363.0000","open":"30.3757","high":"30.3886","low":"29.8186"},{"date":"2009/12/28","close":"30.2300","volume":"160784168.0000","open":"30.2457","high":"30.5643","low":"29.9444"},{"date":"2009/12/24","close":"29.8628","volume":"125222058.0000","open":"29.0786","high":"29.9071","low":"29.0500"},{"date":"2009/12/23","close":"28.8714","volume":"86118086.0000","open":"28.7500","high":"28.9114","low":"28.6871"},{"date":"2009/12/22","close":"28.6228","volume":"87148416.0000","open":"28.4914","high":"28.6928","low":"28.3800"},{"date":"2009/12/21","close":"28.3186","volume":"152166116.0000","open":"28.0071","high":"28.5357","low":"27.9528"},{"date":"2009/12/18","close":"27.9186","volume":"151863506.0000","open":"27.5957","high":"27.9290","low":"27.5143"},{"date":"2009/12/17","close":"27.4086","volume":"96720359.0000","open":"27.7514","high":"27.8571","low":"27.2857"},{"date":"2009/12/16","close":"27.8614","volume":"88203036.0000","open":"27.8714","high":"28.0714","low":"27.7928"},{"date":"2009/12/15","close":"27.7386","volume":"104742851.0000","open":"27.9757","high":"28.2157","low":"27.6100"},{"date":"2009/12/14","close":"28.1400","volume":"123034697.0000","open":"27.9100","high":"28.2043","low":"27.5086"},{"date":"2009/12/11","close":"27.8100","volume":"107241432.0000","open":"28.2543","high":"28.2857","low":"27.6328"},{"date":"2009/12/10","close":"28.0614","volume":"122237397.0000","open":"28.5000","high":"28.5286","low":"28.0171"},{"date":"2009/12/09","close":"28.2571","volume":"170359961.0000","open":"27.3257","high":"28.3086","low":"27.1871"},{"date":"2009/12/08","close":"27.1243","volume":"172136212.0000","open":"27.0514","high":"27.4786","low":"26.9571"},{"date":"2009/12/07","close":"26.9928","volume":"178153973.0000","open":"27.6171","high":"27.6814","low":"26.9543"},{"date":"2009/12/04","close":"27.6171","volume":"206587352.0000","open":"28.5286","high":"28.5543","low":"27.1828"},{"date":"2009/12/03","close":"28.0686","volume":"111825804.0000","open":"28.2028","high":"28.4257","low":"28.0386"},{"date":"2009/12/02","close":"28.0328","volume":"178051493.0000","open":"28.4228","high":"28.7743","low":"27.9643"},{"date":"2009/12/01","close":"28.1386","volume":"115558625.0000","open":"28.8914","high":"28.9671","low":"28.1186"},{"date":"2009/11/30","close":"28.5586","volume":"105960292.0000","open":"28.7300","high":"28.8114","low":"28.3957"},{"date":"2009/11/27","close":"28.6557","volume":"73814252.0000","open":"28.4600","high":"28.9943","low":"28.3386"},{"date":"2009/11/25","close":"29.1700","volume":"71610021.0000","open":"29.3428","high":"29.3786","low":"29.1086"},{"date":"2009/11/24","close":"29.2057","volume":"79299524.0000","open":"29.3328","high":"29.4114","low":"28.9857"},{"date":"2009/11/23","close":"29.4114","volume":"118458796.0000","open":"29.0000","high":"29.4286","low":"28.9928"},{"date":"2009/11/20","close":"28.5600","volume":"101636880.0000","open":"28.4500","high":"28.6271","low":"28.2514"},{"date":"2009/11/19","close":"28.6443","volume":"134796450.0000","open":"29.2300","high":"29.2300","low":"28.5428"},{"date":"2009/11/18","close":"29.4228","volume":"93398578.0000","open":"29.5057","high":"29.5714","low":"29.1428"},{"date":"2009/11/17","close":"29.5714","volume":"98972890.0000","open":"29.4400","high":"29.6343","low":"29.2857"},{"date":"2009/11/16","close":"29.5186","volume":"120381976.0000","open":"29.3543","high":"29.7143","low":"29.2871"},{"date":"2009/11/13","close":"29.2071","volume":"85438596.0000","open":"28.9814","high":"29.2614","low":"28.8671"},{"date":"2009/11/12","close":"28.8557","volume":"89530587.0000","open":"29.0200","high":"29.2671","low":"28.7757"},{"date":"2009/11/11","close":"29.0357","volume":"110939183.0000","open":"29.2228","high":"29.2857","low":"28.8328"},{"date":"2009/11/10","close":"28.9971","volume":"100095830.0000","open":"28.7171","high":"29.2828","low":"28.7157"},{"date":"2009/11/09","close":"28.7800","volume":"131522059.0000","open":"28.1343","high":"28.8428","low":"28.0371"},{"date":"2009/11/06","close":"27.7628","volume":"72991822.0000","open":"27.5014","high":"27.8843","low":"27.4857"},{"date":"2009/11/05","close":"27.7186","volume":"95468409.0000","open":"27.4857","high":"27.8571","low":"27.4028"},{"date":"2009/11/04","close":"27.2586","volume":"121780787.0000","open":"27.2471","high":"27.6928","low":"27.1757"},{"date":"2009/11/03","close":"26.9643","volume":"129766809.0000","open":"26.8357","high":"27.0743","low":"26.5600"},{"date":"2009/11/02","close":"27.0443","volume":"169589051.0000","open":"27.1143","high":"27.5543","low":"26.5100"},{"date":"2009/10/30","close":"26.9286","volume":"178927334.0000","open":"28.0080","high":"28.1143","low":"26.5809"},{"date":"2009/10/29","close":"28.0500","volume":"142328523.0000","open":"27.8571","high":"28.1157","low":"27.4486"},{"date":"2009/10/28","close":"27.4857","volume":"203838171.0000","open":"28.2443","high":"28.2886","low":"27.3000"},{"date":"2009/10/27","close":"28.1957","volume":"188494237.0000","open":"28.8086","high":"28.9728","low":"28.0643"},{"date":"2009/10/26","close":"28.9257","volume":"120323596.0000","open":"29.0957","high":"29.5357","low":"28.5857"},{"date":"2009/10/23","close":"29.1343","volume":"104997091.0000","open":"29.3857","high":"29.4000","low":"29.0328"},{"date":"2009/10/22","close":"29.3143","volume":"197585279.0000","open":"29.2428","high":"29.6928","low":"28.9300"},{"date":"2009/10/21","close":"29.2743","volume":"297780229.0000","open":"28.5028","high":"29.8157","low":"28.4614"},{"date":"2009/10/20","close":"28.3943","volume":"283171645.0000","open":"28.6571","high":"28.8214","low":"28.2643"},{"date":"2009/10/19","close":"27.1228","volume":"223971717.0000","open":"26.8357","high":"27.1428","low":"26.5071"},{"date":"2009/10/16","close":"26.8643","volume":"106997762.0000","open":"27.0500","high":"27.1943","low":"26.8343"},{"date":"2009/10/15","close":"27.2228","volume":"93217068.0000","open":"27.0900","high":"27.2743","low":"27.0757"},{"date":"2009/10/14","close":"27.3271","volume":"93807028.0000","open":"27.4643","high":"27.4743","low":"27.1757"},{"date":"2009/10/13","close":"27.1457","volume":"86349156.0000","open":"27.2328","high":"27.3100","low":"27.1000"},{"date":"2009/10/12","close":"27.2586","volume":"71985082.0000","open":"27.2886","high":"27.3586","low":"27.0914"},{"date":"2009/10/09","close":"27.2100","volume":"73239202.0000","open":"26.9957","high":"27.2428","low":"26.9457"},{"date":"2009/10/08","close":"27.0386","volume":"109314133.0000","open":"27.2371","high":"27.3500","low":"26.9843"},{"date":"2009/10/07","close":"27.1786","volume":"116159085.0000","open":"27.1086","high":"27.2214","low":"27.0046"},{"date":"2009/10/06","close":"27.1443","volume":"150950285.0000","open":"26.8200","high":"27.1443","low":"26.7571"},{"date":"2009/10/05","close":"26.5748","volume":"105618342.0000","open":"26.6000","high":"26.6943","low":"26.3243"},{"date":"2009/10/02","close":"26.4143","volume":"138167581.0000","open":"25.9157","high":"26.5628","low":"25.9071"},{"date":"2009/10/01","close":"25.8371","volume":"130857059.0000","open":"26.4786","high":"26.6028","low":"25.8143"},{"date":"2009/09/30","close":"26.4786","volume":"134783220.0000","open":"26.5900","high":"26.6357","low":"26.0875"},{"date":"2009/09/29","close":"26.4828","volume":"86193756.0000","open":"26.6757","high":"26.7714","low":"26.3300"},{"date":"2009/09/28","close":"26.5931","volume":"84275265.0000","open":"26.2671","high":"26.6686","low":"26.1900"},{"date":"2009/09/25","close":"26.0528","volume":"111258383.0000","open":"26.0014","high":"26.5000","low":"25.9200"},{"date":"2009/09/24","close":"26.2600","volume":"137146491.0000","open":"26.7428","high":"26.8143","low":"26.1100"},{"date":"2009/09/23","close":"26.5000","volume":"147927824.0000","open":"26.4857","high":"26.9857","low":"26.4328"},{"date":"2009/09/22","close":"26.3543","volume":"89155457.0000","open":"26.4557","high":"26.4828","low":"26.1214"},{"date":"2009/09/21","close":"26.2886","volume":"109290683.0000","open":"26.3271","high":"26.4514","low":"25.9457"},{"date":"2009/09/18","close":"26.4314","volume":"150314055.0000","open":"26.5471","high":"26.6500","low":"26.3943"},{"date":"2009/09/17","close":"26.3643","volume":"202182601.0000","open":"25.9971","high":"26.6843","low":"25.9957"},{"date":"2009/09/16","close":"25.9814","volume":"187437586.0000","open":"25.4271","high":"26.1071","low":"25.4114"},{"date":"2009/09/15","close":"25.0228","volume":"103726871.0000","open":"24.8628","high":"25.0928","low":"24.7986"},{"date":"2009/09/14","close":"24.8171","volume":"80383404.0000","open":"24.4043","high":"24.8428","low":"24.3214"},{"date":"2009/09/11","close":"24.5943","volume":"87108026.0000","open":"24.7014","high":"24.7400","low":"24.4100"},{"date":"2009/09/10","close":"24.6514","volume":"122612107.0000","open":"24.5800","high":"24.7500","low":"24.4014"},{"date":"2009/09/09","close":"24.4486","volume":"202624511.0000","open":"24.6828","high":"24.9243","low":"24.2428"},{"date":"2009/09/08","close":"24.7043","volume":"78524974.0000","open":"24.7114","high":"24.7343","low":"24.5714"},{"date":"2009/09/04","close":"24.3300","volume":"93309888.0000","open":"23.8966","high":"24.3857","low":"23.8700"},{"date":"2009/09/03","close":"23.7929","volume":"73447592.0000","open":"23.7771","high":"23.8714","low":"23.5714"},{"date":"2009/09/02","close":"23.5971","volume":"90989317.0000","open":"23.5171","high":"23.9443","low":"23.4443"},{"date":"2009/09/01","close":"23.6140","volume":"117083715.0000","open":"23.9986","high":"24.2857","low":"23.5629"},{"date":"2009/08/31","close":"24.0300","volume":"77698483.0000","open":"24.0228","high":"24.1214","low":"23.7857"},{"date":"2009/08/28","close":"24.2928","volume":"113355444.0000","open":"24.6100","high":"24.6414","low":"24.0757"},{"date":"2009/08/27","close":"24.2071","volume":"111932414.0000","open":"24.1071","high":"24.2243","low":"23.5471"},{"date":"2009/08/26","close":"23.9157","volume":"75810303.0000","open":"24.1314","high":"24.2214","low":"23.8228"},{"date":"2009/08/25","close":"24.2000","volume":"80906584.0000","open":"24.2086","high":"24.4200","low":"24.1614"},{"date":"2009/08/24","close":"24.1514","volume":"101534400.0000","open":"24.3028","high":"24.3871","low":"24.0386"},{"date":"2009/08/21","close":"24.1743","volume":"103799531.0000","open":"23.9500","high":"24.1957","low":"23.8286"},{"date":"2009/08/20","close":"23.7614","volume":"85380706.0000","open":"23.5686","high":"23.8171","low":"23.5157"},{"date":"2009/08/19","close":"23.5143","volume":"103001321.0000","open":"23.2500","high":"23.6143","low":"23.2071"},{"date":"2009/08/18","close":"23.4286","volume":"106128642.0000","open":"23.0900","high":"23.4629","low":"23.0586"},{"date":"2009/08/17","close":"22.7986","volume":"130749329.0000","open":"23.3643","high":"23.3700","low":"22.7743"},{"date":"2009/08/14","close":"23.8257","volume":"76389693.0000","open":"23.9914","high":"24.0324","low":"23.6471"},{"date":"2009/08/13","close":"24.0600","volume":"109916973.0000","open":"23.8071","high":"24.0957","low":"23.7857"},{"date":"2009/08/12","close":"23.6157","volume":"110976633.0000","open":"23.2214","high":"23.8157","low":"23.2086"},{"date":"2009/08/11","close":"23.2614","volume":"88730277.0000","open":"23.3843","high":"23.4829","low":"23.1257"},{"date":"2009/08/10","close":"23.5314","volume":"75012793.0000","open":"23.6657","high":"23.8000","low":"23.3800"},{"date":"2009/08/07","close":"23.6443","volume":"96727219.0000","open":"23.6414","high":"23.8000","low":"23.5429"},{"date":"2009/08/06","close":"23.4157","volume":"85271156.0000","open":"23.6543","high":"23.7871","low":"23.2986"},{"date":"2009/08/05","close":"23.5871","volume":"105581942.0000","open":"23.6786","high":"23.9128","low":"23.4586"},{"date":"2009/08/04","close":"23.6500","volume":"98772690.0000","open":"23.5614","high":"23.6529","low":"23.4586"},{"date":"2009/08/03","close":"23.7757","volume":"98285279.0000","open":"23.6014","high":"23.8057","low":"23.5529"},{"date":"2009/07/31","close":"23.3414","volume":"105620442.0000","open":"23.2840","high":"23.5714","low":"23.2729"},{"date":"2009/07/30","close":"23.2557","volume":"117081055.0000","open":"23.1000","high":"23.5314","low":"23.0714"},{"date":"2009/07/29","close":"22.8614","volume":"95485769.0000","open":"22.7000","high":"22.9214","low":"22.6071"},{"date":"2009/07/28","close":"22.8571","volume":"90763357.0000","open":"22.6971","high":"22.8721","low":"22.5143"},{"date":"2009/07/27","close":"22.8714","volume":"108073732.0000","open":"22.8814","high":"22.9829","low":"22.4657"},{"date":"2009/07/24","close":"22.8551","volume":"109372443.0000","open":"22.4214","high":"22.8571","low":"22.3571"},{"date":"2009/07/23","close":"22.5457","volume":"131337329.0000","open":"22.3757","high":"22.6343","low":"22.2229"},{"date":"2009/07/22","close":"22.3914","volume":"218380536.0000","open":"22.5414","high":"22.6757","low":"22.3014"},{"date":"2009/07/21","close":"21.6443","volume":"210901103.0000","open":"21.8986","high":"21.9186","low":"21.3929"},{"date":"2009/07/20","close":"21.8441","volume":"182888565.0000","open":"21.8957","high":"22.1480","low":"21.5557"},{"date":"2009/07/17","close":"21.6786","volume":"150290605.0000","open":"21.2971","high":"21.7171","low":"21.2329"},{"date":"2009/07/16","close":"21.0743","volume":"98129949.0000","open":"20.8229","high":"21.1457","low":"20.7957"},{"date":"2009/07/15","close":"20.9829","volume":"120885416.0000","open":"20.7200","high":"21.0000","low":"20.6171"},{"date":"2009/07/14","close":"20.3243","volume":"86555236.0000","open":"20.2900","high":"20.4543","low":"20.1659"},{"date":"2009/07/13","close":"20.3343","volume":"120527996.0000","open":"19.9343","high":"20.3343","low":"19.6471"},{"date":"2009/07/10","close":"19.7886","volume":"111021293.0000","open":"19.4771","high":"19.8529","low":"19.4743"},{"date":"2009/07/09","close":"19.4800","volume":"85711596.0000","open":"19.6800","high":"19.7129","low":"19.4186"},{"date":"2009/07/08","close":"19.6029","volume":"143709203.0000","open":"19.4171","high":"19.7200","low":"19.2029"},{"date":"2009/07/07","close":"19.3429","volume":"115148635.0000","open":"19.7829","high":"19.9543","low":"19.3114"},{"date":"2009/07/06","close":"19.8014","volume":"124447017.0000","open":"19.8143","high":"19.8557","low":"19.4643"},{"date":"2009/07/02","close":"20.0029","volume":"92381898.0000","open":"20.1786","high":"20.4043","low":"19.9700"},{"date":"2009/07/01","close":"20.4043","volume":"103483971.0000","open":"20.5000","high":"20.6657","low":"20.3600"},{"date":"2009/06/30","close":"20.3471","volume":"108476513.0000","open":"20.3686","high":"20.5429","low":"20.2571"},{"date":"2009/06/29","close":"20.2814","volume":"141781543.0000","open":"20.4943","high":"20.5643","low":"20.2200"},{"date":"2009/06/26","close":"20.3486","volume":"109599663.0000","open":"19.9700","high":"20.5086","low":"19.9629"},{"date":"2009/06/25","close":"19.9800","volume":"147042254.0000","open":"19.3929","high":"20.0286","low":"19.3157"},{"date":"2009/06/24","close":"19.4600","volume":"120973196.0000","open":"19.3457","high":"19.6429","low":"19.2657"},{"date":"2009/06/23","close":"19.1443","volume":"176249623.0000","open":"19.4857","high":"19.5643","low":"18.9829"},{"date":"2009/06/22","close":"19.6243","volume":"158185627.0000","open":"20.0957","high":"20.2229","low":"19.4757"},{"date":"2009/06/19","close":"19.9257","volume":"179965364.0000","open":"19.7243","high":"19.9286","low":"19.5571"},{"date":"2009/06/18","close":"19.4114","volume":"106257722.0000","open":"19.4443","high":"19.7143","low":"19.3700"},{"date":"2009/06/17","close":"19.3686","volume":"142609713.0000","open":"19.5243","high":"19.6357","low":"19.2186"},{"date":"2009/06/16","close":"19.4786","volume":"127728478.0000","open":"19.5229","high":"19.7814","low":"19.4429"},{"date":"2009/06/15","close":"19.4414","volume":"134866380.0000","open":"19.4300","high":"19.5614","low":"19.2700"},{"date":"2009/06/12","close":"19.5671","volume":"140437822.0000","open":"19.8300","high":"19.8714","low":"19.4343"},{"date":"2009/06/11","close":"19.9929","volume":"131030729.0000","open":"19.9357","high":"20.2229","low":"19.7929"},{"date":"2009/06/10","close":"20.0357","volume":"171935452.0000","open":"20.3257","high":"20.3357","low":"19.7571"},{"date":"2009/06/09","close":"20.3886","volume":"168830811.0000","open":"20.5443","high":"20.6514","low":"20.0786"},{"date":"2009/06/08","close":"20.5500","volume":"232466290.0000","open":"20.5457","high":"20.6043","low":"19.9186"},{"date":"2009/06/05","close":"20.6671","volume":"157944127.0000","open":"20.7586","high":"20.9143","low":"20.4586"},{"date":"2009/06/04","close":"20.5343","volume":"136628071.0000","open":"20.0186","high":"20.5971","low":"20.0057"},{"date":"2009/06/03","close":"20.1357","volume":"140628992.0000","open":"20.0000","high":"20.1586","low":"19.8671"},{"date":"2009/06/02","close":"19.9271","volume":"113339554.0000","open":"19.8557","high":"20.1914","low":"19.7643"},{"date":"2009/06/01","close":"19.9071","volume":"112631574.0000","open":"19.4957","high":"19.9986","low":"19.4286"},{"date":"2009/05/29","close":"19.4014","volume":"113932874.0000","open":"19.3414","high":"19.4143","low":"19.1214"},{"date":"2009/05/28","close":"19.2957","volume":"121524446.0000","open":"19.0643","high":"19.3414","low":"18.8614"},{"date":"2009/05/27","close":"19.0071","volume":"161564318.0000","open":"18.8257","high":"19.2829","low":"18.7014"},{"date":"2009/05/26","close":"18.6829","volume":"158127877.0000","open":"17.8229","high":"18.6900","low":"17.7929"},{"date":"2009/05/22","close":"17.5000","volume":"74476662.0000","open":"17.7214","high":"17.7400","low":"17.3929"},{"date":"2009/05/21","close":"17.7400","volume":"101845901.0000","open":"17.8786","high":"18.1114","low":"17.5557"},{"date":"2009/05/20","close":"17.9814","volume":"96968859.0000","open":"18.2329","high":"18.4586","low":"17.9000"},{"date":"2009/05/19","close":"18.2071","volume":"92880788.0000","open":"18.1171","high":"18.4729","low":"17.9629"},{"date":"2009/05/18","close":"18.0929","volume":"114343634.0000","open":"17.6757","high":"18.1000","low":"17.3671"},{"date":"2009/05/15","close":"17.4886","volume":"91651797.0000","open":"17.4743","high":"17.8029","low":"17.3729"},{"date":"2009/05/14","close":"17.5643","volume":"111421483.0000","open":"17.1114","high":"17.6471","low":"17.1000"},{"date":"2009/05/13","close":"17.0700","volume":"148275794.0000","open":"17.6014","high":"17.7171","low":"17.0543"},{"date":"2009/05/12","close":"17.7743","volume":"151725046.0000","open":"18.5086","high":"18.5300","low":"17.6071"},{"date":"2009/05/11","close":"18.5100","volume":"101125320.0000","open":"18.1957","high":"18.7086","low":"18.1600"},{"date":"2009/05/08","close":"18.4557","volume":"116971365.0000","open":"18.4343","high":"18.7477","low":"18.0371"},{"date":"2009/05/07","close":"18.4371","volume":"132601950.0000","open":"18.9043","high":"18.9129","low":"18.2714"},{"date":"2009/05/06","close":"18.9286","volume":"118349806.0000","open":"19.0471","high":"19.0714","low":"18.6029"},{"date":"2009/05/05","close":"18.9586","volume":"99506710.0000","open":"18.8214","high":"18.9800","low":"18.7314"},{"date":"2009/05/04","close":"18.8671","volume":"151861476.0000","open":"18.3200","high":"18.8929","low":"18.2400"},{"date":"2009/05/01","close":"18.1771","volume":"99359990.0000","open":"17.9714","high":"18.2786","low":"17.9714"},{"date":"2009/04/30","close":"17.9757","volume":"124463957.0000","open":"18.0314","high":"18.1429","low":"17.8457"},{"date":"2009/04/29","close":"17.8771","volume":"114451504.0000","open":"17.8357","high":"18.1214","low":"17.6900"},{"date":"2009/04/28","close":"17.7003","volume":"113722244.0000","open":"17.6214","high":"18.0300","low":"17.6086"},{"date":"2009/04/27","close":"17.8186","volume":"120175476.0000","open":"17.5571","high":"17.8571","low":"17.5229"},{"date":"2009/04/24","close":"17.7000","volume":"135039841.0000","open":"17.8057","high":"17.8771","low":"17.5671"},{"date":"2009/04/23","close":"17.9143","volume":"235733821.0000","open":"18.0886","high":"18.1714","low":"17.6443"},{"date":"2009/04/22","close":"17.3586","volume":"227250308.0000","open":"17.5186","high":"17.9071","low":"17.3143"},{"date":"2009/04/21","close":"17.3943","volume":"117231065.0000","open":"16.9843","high":"17.4486","low":"16.9429"},{"date":"2009/04/20","close":"17.2143","volume":"116580275.0000","open":"17.3900","high":"17.5700","low":"17.0229"},{"date":"2009/04/17","close":"17.6314","volume":"124315697.0000","open":"17.3114","high":"17.7500","low":"17.1786"},{"date":"2009/04/16","close":"17.3500","volume":"148303024.0000","open":"17.0271","high":"17.5929","low":"16.9700"},{"date":"2009/04/15","close":"16.8057","volume":"103148111.0000","open":"16.7429","high":"16.8929","low":"16.5371"},{"date":"2009/04/14","close":"16.9014","volume":"113484664.0000","open":"17.0814","high":"17.1671","low":"16.7500"},{"date":"2009/04/13","close":"17.1743","volume":"97228559.0000","open":"17.1443","high":"17.2829","low":"17.0000"},{"date":"2009/04/09","close":"17.0814","volume":"132462300.0000","open":"16.9171","high":"17.1429","low":"16.8514"},{"date":"2009/04/08","close":"16.6171","volume":"113748074.0000","open":"16.4900","high":"16.6843","low":"16.3686"},{"date":"2009/04/07","close":"16.4286","volume":"133882460.0000","open":"16.6471","high":"16.6671","low":"16.3129"},{"date":"2009/04/06","close":"16.9214","volume":"164155719.0000","open":"16.4200","high":"16.9643","low":"16.1829"},{"date":"2009/04/03","close":"16.5700","volume":"158300497.0000","open":"16.3129","high":"16.5900","low":"16.2171"},{"date":"2009/04/02","close":"16.1014","volume":"202481851.0000","open":"15.7350","high":"16.3929","low":"15.6829"},{"date":"2009/04/01","close":"15.5271","volume":"147108264.0000","open":"14.8700","high":"15.5714","low":"14.8414"},{"date":"2009/03/31","close":"15.0171","volume":"142364363.0000","open":"15.0643","high":"15.3500","low":"15.0000"},{"date":"2009/03/30","close":"14.9271","volume":"125643668.0000","open":"14.9300","high":"15.0014","low":"14.6586"},{"date":"2009/03/27","close":"15.2643","volume":"122933267.0000","open":"15.4614","high":"15.5043","low":"15.2000"},{"date":"2009/03/26","close":"15.6957","volume":"153435286.0000","open":"15.4043","high":"15.7114","low":"15.3686"},{"date":"2009/03/25","close":"15.2129","volume":"161536458.0000","open":"15.3686","high":"15.4800","low":"14.8371"},{"date":"2009/03/24","close":"15.2144","volume":"160153538.0000","open":"15.1943","high":"15.6343","low":"15.0553"},{"date":"2009/03/23","close":"15.3800","volume":"164570889.0000","open":"14.6729","high":"15.4514","low":"14.5357"},{"date":"2009/03/20","close":"14.5129","volume":"173832242.0000","open":"14.5843","high":"14.7300","low":"14.3671"},{"date":"2009/03/19","close":"14.5171","volume":"124763767.0000","open":"14.5500","high":"14.7429","low":"14.3214"},{"date":"2009/03/18","close":"14.5029","volume":"198944400.0000","open":"14.2729","high":"14.7829","low":"14.2457"},{"date":"2009/03/17","close":"14.2371","volume":"196633489.0000","open":"13.6057","high":"14.2414","low":"13.5814"},{"date":"2009/03/16","close":"13.6314","volume":"199275710.0000","open":"13.7900","high":"13.9129","low":"13.4543"},{"date":"2009/03/13","close":"13.7043","volume":"150196035.0000","open":"13.7571","high":"13.8857","low":"13.5729"},{"date":"2009/03/12","close":"13.7643","volume":"191903658.0000","open":"13.2714","high":"13.7971","low":"13.1429"},{"date":"2009/03/11","close":"13.2400","volume":"211265803.0000","open":"12.8300","high":"13.4386","low":"12.7971"},{"date":"2009/03/10","close":"12.6611","volume":"210609903.0000","open":"12.1243","high":"12.7386","low":"12.0514"},{"date":"2009/03/09","close":"11.8729","volume":"172664572.0000","open":"12.0257","high":"12.5143","low":"11.7957"},{"date":"2009/03/06","close":"12.1857","volume":"252464176.0000","open":"12.6200","high":"12.6286","low":"11.7614"},{"date":"2009/03/05","close":"12.6914","volume":"176268943.0000","open":"12.9229","high":"13.1243","low":"12.6357"},{"date":"2009/03/04","close":"13.0243","volume":"185184916.0000","open":"12.8829","high":"13.2529","low":"12.7786"},{"date":"2009/03/03","close":"12.6243","volume":"180208824.0000","open":"12.7043","high":"12.9629","low":"12.5543"},{"date":"2009/03/02","close":"12.5629","volume":"190821317.0000","open":"12.5886","high":"13.0286","low":"12.5243"},{"date":"2009/02/27","close":"12.7586","volume":"175892553.0000","open":"12.5614","high":"13.0429","low":"12.5243"},{"date":"2009/02/26","close":"12.7414","volume":"154262896.0000","open":"13.1429","high":"13.2743","low":"12.7086"},{"date":"2009/02/25","close":"13.0229","volume":"204340911.0000","open":"12.8371","high":"13.2743","low":"12.7500"},{"date":"2009/02/24","close":"12.8929","volume":"188977377.0000","open":"12.4926","high":"12.9843","low":"12.4286"},{"date":"2009/02/23","close":"12.4214","volume":"188048546.0000","open":"13.0929","high":"13.1429","low":"12.3586"},{"date":"2009/02/20","close":"13.0286","volume":"187457606.0000","open":"12.7714","high":"13.2000","low":"12.7143"},{"date":"2009/02/19","close":"12.9486","volume":"225369758.0000","open":"13.3386","high":"13.4643","low":"12.8729"},{"date":"2009/02/18","close":"13.4814","volume":"170427301.0000","open":"13.5786","high":"13.6929","low":"13.2457"},{"date":"2009/02/17","close":"13.5043","volume":"165083150.0000","open":"13.8386","high":"13.8629","low":"13.4686"},{"date":"2009/02/13","close":"14.1657","volume":"151509865.0000","open":"14.1414","high":"14.2771","low":"14.0171"},{"date":"2009/02/12","close":"14.1814","volume":"201814681.0000","open":"13.6900","high":"14.2500","low":"13.6900"},{"date":"2009/02/11","close":"13.8314","volume":"167746370.0000","open":"13.7671","high":"14.0443","low":"13.6814"},{"date":"2009/02/10","close":"13.9757","volume":"209533933.0000","open":"14.4757","high":"14.6443","low":"13.8657"},{"date":"2009/02/09","close":"14.6443","volume":"177365003.0000","open":"14.2857","high":"14.7143","low":"14.2143"},{"date":"2009/02/06","close":"14.2457","volume":"168558791.0000","open":"13.8600","high":"14.2857","low":"13.8571"},{"date":"2009/02/05","close":"13.7800","volume":"183652475.0000","open":"13.2529","high":"13.8929","low":"13.2314"},{"date":"2009/02/04","close":"13.3643","volume":"200979860.0000","open":"13.3171","high":"13.7500","low":"13.3000"},{"date":"2009/02/03","close":"13.2829","volume":"145716034.0000","open":"13.1314","high":"13.3400","low":"12.8971"},{"date":"2009/02/02","close":"13.0729","volume":"139474412.0000","open":"12.7286","high":"13.1429","low":"12.7000"},{"date":"2009/01/30","close":"12.8757","volume":"162829079.0000","open":"13.2286","high":"13.3743","low":"12.8586"},{"date":"2009/01/29","close":"13.2857","volume":"147435794.0000","open":"13.2986","high":"13.4771","low":"13.2286"},{"date":"2009/01/28","close":"13.4571","volume":"215327485.0000","open":"13.1600","high":"13.5714","low":"13.0714"},{"date":"2009/01/27","close":"12.9614","volume":"152312766.0000","open":"12.8843","high":"13.0786","low":"12.8200"},{"date":"2009/01/26","close":"12.8057","volume":"173045232.0000","open":"12.6943","high":"12.9957","low":"12.6143"},{"date":"2009/01/23","close":"12.6229","volume":"189842367.0000","open":"12.4029","high":"12.8386","low":"12.3571"},{"date":"2009/01/22","close":"12.6229","volume":"346849474.0000","open":"12.5771","high":"12.8571","low":"12.2600"},{"date":"2009/01/21","close":"11.8329","volume":"263382639.0000","open":"11.3414","high":"11.8400","low":"11.3300"},{"date":"2009/01/20","close":"11.1714","volume":"226902898.0000","open":"11.7043","high":"11.7143","low":"11.1714"},{"date":"2009/01/16","close":"11.7614","volume":"261745969.0000","open":"12.0429","high":"12.0543","low":"11.4857"},{"date":"2009/01/15","close":"11.9114","volume":"457872307.0000","open":"11.5100","high":"12.0171","low":"11.4357"},{"date":"2009/01/14","close":"12.1900","volume":"247659934.0000","open":"12.3200","high":"12.4643","low":"12.1029"},{"date":"2009/01/13","close":"12.5300","volume":"199057520.0000","open":"12.6057","high":"12.8200","low":"12.3357"},{"date":"2009/01/12","close":"12.6657","volume":"153796556.0000","open":"12.9229","high":"12.9986","low":"12.5071"},{"date":"2009/01/09","close":"12.9400","volume":"136641371.0000","open":"13.3157","high":"13.3400","low":"12.8771"},{"date":"2009/01/08","close":"13.2429","volume":"165691940.0000","open":"12.9186","high":"13.3071","low":"12.8629"},{"date":"2009/01/07","close":"13.0014","volume":"188235446.0000","open":"13.1157","high":"13.2143","low":"12.8943"},{"date":"2009/01/06","close":"13.2886","volume":"322269807.0000","open":"13.7071","high":"13.8814","low":"13.1986"},{"date":"2009/01/05","close":"13.5114","volume":"295313079.0000","open":"13.3100","high":"13.7400","low":"13.2443"},{"date":"2009/01/02","close":"12.9643","volume":"186493916.0000","open":"12.2686","high":"13.0057","low":"12.1657"},{"date":"2008/12/31","close":"12.1929","volume":"151882756.0000","open":"12.2814","high":"12.5343","low":"12.1914"},{"date":"2008/12/30","close":"12.3271","volume":"241571472.0000","open":"12.4886","high":"12.5786","low":"12.1029"},{"date":"2008/12/29","close":"12.3729","volume":"171484861.0000","open":"12.3600","high":"12.5171","low":"12.1529"},{"date":"2008/12/26","close":"12.2586","volume":"77073663.0000","open":"12.3771","high":"12.4886","low":"12.1771"},{"date":"2008/12/24","close":"12.1486","volume":"67864978.0000","open":"12.3057","high":"12.3214","low":"12.0786"},{"date":"2008/12/23","close":"12.3400","volume":"158729808.0000","open":"12.4100","high":"12.5529","low":"12.2714"},{"date":"2008/12/22","close":"12.2486","volume":"211098153.0000","open":"12.8600","high":"12.8614","low":"12.0986"},{"date":"2008/12/19","close":"12.8571","volume":"200379260.0000","open":"12.8486","high":"12.9914","low":"12.6857"},{"date":"2008/12/18","close":"12.7757","volume":"214053904.0000","open":"12.7586","high":"12.9757","low":"12.6343"},{"date":"2008/12/17","close":"12.7371","volume":"322891827.0000","open":"13.0043","high":"13.0143","low":"12.5743"},{"date":"2008/12/16","close":"13.6329","volume":"270637301.0000","open":"13.4257","high":"13.7829","low":"13.2500"},{"date":"2008/12/15","close":"13.5357","volume":"222574447.0000","open":"13.7129","high":"13.7443","low":"13.2857"},{"date":"2008/12/12","close":"14.0386","volume":"260267638.0000","open":"13.2571","high":"14.1429","low":"13.2186"},{"date":"2008/12/11","close":"13.5714","volume":"260101878.0000","open":"13.9071","high":"14.4629","low":"13.5471"},{"date":"2008/12/10","close":"14.0300","volume":"234464370.0000","open":"13.9814","high":"14.2129","low":"13.7857"},{"date":"2008/12/09","close":"14.2943","volume":"300828240.0000","open":"14.0057","high":"14.8000","low":"13.8871"},{"date":"2008/12/08","close":"14.2457","volume":"295986969.0000","open":"13.8971","high":"14.4000","low":"13.6857"},{"date":"2008/12/05","close":"13.4286","volume":"260894768.0000","open":"12.9071","high":"13.4986","low":"12.6943"},{"date":"2008/12/04","close":"13.0586","volume":"272823192.0000","open":"13.4900","high":"13.6014","low":"12.7229"},{"date":"2008/12/03","close":"13.7000","volume":"334651410.0000","open":"12.7714","high":"13.7471","low":"12.6857"},{"date":"2008/12/02","close":"13.2100","volume":"287117476.0000","open":"12.8614","high":"13.2357","low":"12.3571"},{"date":"2008/12/01","close":"12.7043","volume":"230862519.0000","open":"13.0429","high":"13.1814","low":"12.7033"},{"date":"2008/11/28","close":"13.2386","volume":"75301403.0000","open":"13.5286","high":"13.5371","low":"13.1229"},{"date":"2008/11/26","close":"13.5714","volume":"224858127.0000","open":"12.8457","high":"13.6071","low":"12.8357"},{"date":"2008/11/25","close":"12.9714","volume":"308776603.0000","open":"13.5186","high":"13.5300","low":"12.5943"},{"date":"2008/11/24","close":"13.2786","volume":"360468748.0000","open":"12.1729","high":"13.5414","low":"12.1200"},{"date":"2008/11/21","close":"11.7971","volume":"392046668.0000","open":"11.7043","high":"12.0171","low":"11.3057"},{"date":"2008/11/20","close":"11.4986","volume":"428763569.0000","open":"12.1771","high":"12.3500","low":"11.4286"},{"date":"2008/11/19","close":"12.3271","volume":"292861538.0000","open":"12.7771","high":"13.0829","low":"12.3157"},{"date":"2008/11/18","close":"12.8443","volume":"302382171.0000","open":"12.8057","high":"12.9986","low":"12.4086"},{"date":"2008/11/17","close":"12.5914","volume":"290591997.0000","open":"12.6400","high":"12.9357","low":"12.4657"},{"date":"2008/11/14","close":"12.8914","volume":"350974365.0000","open":"13.3943","high":"13.4271","low":"12.8571"},{"date":"2008/11/13","close":"13.7771","volume":"463442489.0000","open":"12.8386","high":"13.7771","low":"12.2886"},{"date":"2008/11/12","close":"12.8743","volume":"293845458.0000","open":"13.2043","high":"13.3200","low":"12.8586"},{"date":"2008/11/11","close":"13.5386","volume":"305980172.0000","open":"13.5443","high":"13.8814","low":"13.1800"},{"date":"2008/11/10","close":"13.6971","volume":"280864234.0000","open":"14.3100","high":"14.3429","low":"13.5000"},{"date":"2008/11/07","close":"14.0343","volume":"273709112.0000","open":"14.1771","high":"14.2643","low":"13.6743"},{"date":"2008/11/06","close":"14.1571","volume":"329509489.0000","open":"14.4357","high":"14.6829","low":"14.0000"},{"date":"2008/11/05","close":"14.7571","volume":"313994544.0000","open":"15.5586","high":"15.6743","low":"14.7129"},{"date":"2008/11/04","close":"15.8557","volume":"349631275.0000","open":"15.7129","high":"15.9700","low":"15.2386"},{"date":"2008/11/03","close":"15.2800","volume":"264454899.0000","open":"15.1329","high":"15.5857","low":"14.9800"},{"date":"2008/10/31","close":"15.3700","volume":"414654784.0000","open":"15.3429","high":"15.8257","low":"15.0200"},{"date":"2008/10/30","close":"15.8629","volume":"409149983.0000","open":"15.4614","high":"16.0271","low":"15.3729"},{"date":"2008/10/29","close":"14.9357","volume":"487927166.0000","open":"14.4086","high":"15.6486","low":"14.2771"},{"date":"2008/10/28","close":"14.2729","volume":"407733112.0000","open":"13.6329","high":"14.3571","low":"13.1957"},{"date":"2008/10/27","close":"13.1557","volume":"301981701.0000","open":"13.5814","high":"13.9471","low":"13.1229"},{"date":"2008/10/24","close":"13.7686","volume":"397326629.0000","open":"12.9043","high":"13.9857","low":"12.8729"},{"date":"2008/10/23","close":"14.0329","volume":"418415956.0000","open":"13.7871","high":"14.1786","low":"13.1286"},{"date":"2008/10/22","close":"13.8386","volume":"561642508.0000","open":"13.9100","high":"14.4643","low":"13.2757"},{"date":"2008/10/21","close":"13.0700","volume":"496907469.0000","open":"13.8500","high":"13.9857","low":"13.0229"},{"date":"2008/10/20","close":"14.0629","volume":"386529336.0000","open":"14.2543","high":"14.2900","low":"13.3771"},{"date":"2008/10/17","close":"13.9143","volume":"440238462.0000","open":"14.2286","high":"14.5771","low":"12.2693"},{"date":"2008/10/16","close":"14.5557","volume":"489081257.0000","open":"14.2529","high":"14.7757","low":"13.1057"},{"date":"2008/10/15","close":"13.9929","volume":"395504039.0000","open":"14.8343","high":"15.2857","low":"13.9843"},{"date":"2008/10/14","close":"14.8686","volume":"494854438.0000","open":"16.6086","high":"16.6286","low":"14.7343"},{"date":"2008/10/13","close":"15.7514","volume":"384649975.0000","open":"14.9357","high":"15.7900","low":"14.4314"},{"date":"2008/10/10","close":"13.8286","volume":"554729026.0000","open":"12.2429","high":"14.2857","low":"12.1429"},{"date":"2008/10/09","close":"12.6771","volume":"404188521.0000","open":"13.3357","high":"13.6857","low":"12.3714"},{"date":"2008/10/08","close":"12.8271","volume":"551839846.0000","open":"12.2733","high":"13.7614","low":"12.2400"},{"date":"2008/10/07","close":"12.7371","volume":"469562941.0000","open":"14.3543","high":"14.5000","low":"12.7071"},{"date":"2008/10/06","close":"14.0200","volume":"526652508.0000","open":"13.1371","high":"14.1114","low":"12.5057"},{"date":"2008/10/03","close":"13.8671","volume":"573323692.0000","open":"14.8571","high":"15.2143","low":"13.5214"},{"date":"2008/10/02","close":"14.3000","volume":"402176091.0000","open":"15.4300","high":"15.5414","low":"14.2857"},{"date":"2008/10/01","close":"15.5886","volume":"324046757.0000","open":"15.9886","high":"16.0514","low":"15.3414"},{"date":"2008/09/30","close":"16.2371","volume":"406771382.0000","open":"15.4643","high":"16.4286","low":"15.1857"},{"date":"2008/09/29","close":"15.0371","volume":"654877916.0000","open":"17.0886","high":"17.0971","low":"14.3700"},{"date":"2008/09/26","close":"18.3200","volume":"281382864.0000","open":"17.8443","high":"18.5429","low":"17.5714"},{"date":"2008/09/25","close":"18.8471","volume":"250381675.0000","open":"18.5429","high":"19.2557","low":"18.3600"},{"date":"2008/09/24","close":"18.3871","volume":"261674499.0000","open":"18.1814","high":"18.7071","low":"17.8786"},{"date":"2008/09/23","close":"18.1200","volume":"319662166.0000","open":"18.8357","high":"19.4000","low":"18.0943"},{"date":"2008/09/22","close":"18.7214","volume":"213955344.0000","open":"19.9914","high":"20.0357","low":"18.6657"},{"date":"2008/09/19","close":"20.1300","volume":"357663987.0000","open":"20.3714","high":"20.6000","low":"19.4729"},{"date":"2008/09/18","close":"19.1557","volume":"418680276.0000","open":"18.6529","high":"20.0000","low":"17.2400"},{"date":"2008/09/17","close":"18.2614","volume":"299816530.0000","open":"19.7843","high":"19.7871","low":"18.2614"},{"date":"2008/09/16","close":"19.9829","volume":"299580630.0000","open":"19.1229","high":"20.3571","low":"18.8786"},{"date":"2008/09/15","close":"20.0514","volume":"229793129.0000","open":"20.2900","high":"21.0986","low":"20.0514"},{"date":"2008/09/12","close":"21.2771","volume":"198030689.0000","open":"21.5586","high":"21.5586","low":"20.9286"},{"date":"2008/09/11","close":"21.8071","volume":"242589553.0000","open":"21.1686","high":"21.8557","low":"20.8571"},{"date":"2008/09/10","close":"21.6586","volume":"243263793.0000","open":"21.7600","high":"22.1414","low":"21.2571"},{"date":"2008/09/09","close":"21.6686","volume":"311031163.0000","open":"22.4086","high":"22.8514","low":"21.3986"},{"date":"2008/09/08","close":"22.5600","volume":"261433418.0000","open":"23.5100","high":"23.5557","low":"21.6369"},{"date":"2008/09/05","close":"22.8829","volume":"196548999.0000","open":"22.6557","high":"23.2000","low":"22.5214"},{"date":"2008/09/04","close":"23.0314","volume":"185707606.0000","open":"23.6943","high":"23.9875","low":"22.9729"},{"date":"2008/09/03","close":"23.8514","volume":"183683415.0000","open":"23.8343","high":"24.0971","low":"23.4286"},{"date":"2008/09/02","close":"23.7414","volume":"194434788.0000","open":"24.6286","high":"24.7857","low":"23.5714"},{"date":"2008/08/29","close":"24.2186","volume":"149788565.0000","open":"24.7086","high":"24.7857","low":"24.1486"},{"date":"2008/08/28","close":"24.8200","volume":"107703362.0000","open":"25.0400","high":"25.1786","low":"24.6786"},{"date":"2008/08/27","close":"24.9528","volume":"119143396.0000","open":"24.7586","high":"25.1086","low":"24.5987"},{"date":"2008/08/26","close":"24.8057","volume":"111348823.0000","open":"24.6800","high":"24.9828","low":"24.6586"},{"date":"2008/08/25","close":"24.6500","volume":"121049286.0000","open":"25.1643","high":"25.1757","low":"24.5228"},{"date":"2008/08/22","close":"25.2557","volume":"109873363.0000","open":"25.1171","high":"25.3571","low":"25.0814"},{"date":"2008/08/21","close":"24.8986","volume":"134917270.0000","open":"24.9243","high":"25.0643","low":"24.5557"},{"date":"2008/08/20","close":"25.1200","volume":"126718798.0000","open":"24.9676","high":"25.2771","low":"24.8014"},{"date":"2008/08/19","close":"24.7900","volume":"153915766.0000","open":"24.9343","high":"25.2957","low":"24.5443"},{"date":"2008/08/18","close":"25.0557","volume":"137832351.0000","open":"25.0814","high":"25.4014","low":"24.8314"},{"date":"2008/08/15","close":"25.1057","volume":"176996663.0000","open":"25.5771","high":"25.6786","low":"25.0071"},{"date":"2008/08/14","close":"25.6171","volume":"177684343.0000","open":"25.4757","high":"25.7786","low":"25.4057"},{"date":"2008/08/13","close":"25.6143","volume":"210556213.0000","open":"25.4257","high":"25.7143","low":"25.1286"},{"date":"2008/08/12","close":"25.2471","volume":"208987793.0000","open":"24.7886","high":"25.6128","low":"24.7871"},{"date":"2008/08/11","close":"24.7943","volume":"222653337.0000","open":"24.2957","high":"25.2143","low":"24.2386"},{"date":"2008/08/08","close":"24.2214","volume":"178425574.0000","open":"23.4086","high":"24.2357","low":"23.3929"},{"date":"2008/08/07","close":"23.3671","volume":"168008730.0000","open":"23.2443","high":"23.7357","low":"23.0714"},{"date":"2008/08/06","close":"23.4557","volume":"197800459.0000","open":"22.8529","high":"23.9143","low":"22.5714"},{"date":"2008/08/05","close":"22.9486","volume":"171931322.0000","open":"22.2029","high":"22.9714","low":"22.1171"},{"date":"2008/08/04","close":"21.8900","volume":"147694724.0000","open":"22.3714","high":"22.5571","low":"21.8443"},{"date":"2008/08/01","close":"22.3800","volume":"130755839.0000","open":"22.8429","high":"22.8557","low":"22.2500"},{"date":"2008/07/31","close":"22.7071","volume":"159163178.0000","open":"22.5057","high":"23.1714","low":"22.4257"},{"date":"2008/07/30","close":"22.8400","volume":"181038184.0000","open":"22.5400","high":"22.9271","low":"22.2971"},{"date":"2008/07/29","close":"22.4400","volume":"170951881.0000","open":"22.2014","high":"22.7786","low":"21.9500"},{"date":"2008/07/28","close":"22.0571","volume":"195099859.0000","open":"23.1914","high":"23.2100","low":"22.0029"},{"date":"2008/07/25","close":"23.1600","volume":"158194517.0000","open":"22.9143","high":"23.2857","low":"22.6643"},{"date":"2008/07/24","close":"22.7186","volume":"209452873.0000","open":"23.4743","high":"23.6086","low":"22.6357"},{"date":"2008/07/23","close":"23.7514","volume":"264714109.0000","open":"23.5700","high":"24.0528","low":"23.0800"},{"date":"2008/07/22","close":"23.1457","volume":"469122431.0000","open":"21.2857","high":"23.2514","low":"20.9329"},{"date":"2008/07/21","close":"23.7557","volume":"310129983.0000","open":"23.8428","high":"23.9286","low":"23.0171"},{"date":"2008/07/18","close":"23.5929","volume":"215647245.0000","open":"24.0743","high":"24.2357","low":"23.5714"},{"date":"2008/07/17","close":"24.5443","volume":"188662937.0000","open":"24.8714","high":"24.9971","low":"24.4843"},{"date":"2008/07/16","close":"24.6871","volume":"186930436.0000","open":"24.3143","high":"24.7043","low":"24.0857"},{"date":"2008/07/15","close":"24.2343","volume":"259847638.0000","open":"24.6400","high":"24.8200","low":"23.7700"},{"date":"2008/07/14","close":"24.8400","volume":"221327816.0000","open":"25.6057","high":"25.6143","low":"24.7257"},{"date":"2008/07/11","close":"24.6543","volume":"232340220.0000","open":"25.0671","high":"25.3014","low":"24.4286"},{"date":"2008/07/10","close":"25.2328","volume":"209579153.0000","open":"24.9886","high":"25.3343","low":"24.4814"},{"date":"2008/07/09","close":"24.8928","volume":"223687237.0000","open":"25.7428","high":"25.8443","low":"24.8771"},{"date":"2008/07/08","close":"25.6500","volume":"222032297.0000","open":"25.0571","high":"25.6714","low":"24.6771"},{"date":"2008/07/07","close":"25.0228","volume":"204853661.0000","open":"24.7371","high":"25.3043","low":"24.5571"},{"date":"2008/07/03","close":"24.3028","volume":"130859299.0000","open":"24.2271","high":"24.5957","low":"23.6786"},{"date":"2008/07/02","close":"24.0257","volume":"209373493.0000","open":"25.0286","high":"25.3500","low":"24.0255"},{"date":"2008/07/01","close":"24.9543","volume":"277547563.0000","open":"23.4614","high":"24.9600","low":"23.4286"},{"date":"2008/06/30","close":"23.9200","volume":"170970151.0000","open":"24.3128","high":"24.5714","low":"23.8029"},{"date":"2008/06/27","close":"24.2986","volume":"259441218.0000","open":"23.7871","high":"24.3671","low":"23.4500"},{"date":"2008/06/26","close":"24.0371","volume":"217047805.0000","open":"24.8671","high":"24.9777","low":"24.0014"},{"date":"2008/06/25","close":"25.3414","volume":"160818538.0000","open":"24.9443","high":"25.5471","low":"24.8400"},{"date":"2008/06/24","close":"24.7500","volume":"155477327.0000","open":"24.6243","high":"25.1114","low":"24.5186"},{"date":"2008/06/23","close":"24.7371","volume":"161343188.0000","open":"24.9628","high":"25.1257","low":"24.5086"},{"date":"2008/06/20","close":"25.0386","volume":"221920997.0000","open":"25.6214","high":"25.8571","low":"25.0000"},{"date":"2008/06/19","close":"25.8428","volume":"197969579.0000","open":"25.5071","high":"26.0486","low":"25.2571"},{"date":"2008/06/18","close":"25.5357","volume":"202745121.0000","open":"25.8743","high":"26.0286","low":"25.3357"},{"date":"2008/06/17","close":"25.9186","volume":"224854207.0000","open":"25.4428","high":"25.9986","low":"25.3443"},{"date":"2008/06/16","close":"25.2628","volume":"262753619.0000","open":"24.4714","high":"25.4143","low":"24.1528"},{"date":"2008/06/13","close":"24.6243","volume":"336293331.0000","open":"24.5200","high":"24.8800","low":"23.6157"},{"date":"2008/06/12","close":"24.7514","volume":"326588948.0000","open":"25.9271","high":"26.0857","low":"24.4571"},{"date":"2008/06/11","close":"25.8300","volume":"240184982.0000","open":"26.3343","high":"26.5714","low":"25.6557"},{"date":"2008/06/10","close":"26.5200","volume":"285075086.0000","open":"25.7871","high":"26.6828","low":"25.5743"},{"date":"2008/06/09","close":"25.9443","volume":"471402121.0000","open":"26.3986","high":"26.4200","low":"25.1071"}]

/***/ }
/******/ ]);